<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hu | Hron's blog]]></title>
  <link href="http://hron.me/blog/tags/hu/atom.xml" rel="self"/>
  <link href="http://hron.me/"/>
  <updated>2012-11-23T18:32:10+01:00</updated>
  <id>http://hron.me/</id>
  <author>
    <name><![CDATA[Gábor Garami]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RubyMine és TeamCity]]></title>
    <link href="http://hron.me/blog/2012/11/rubymine-es-teamcity/"/>
    <updated>2012-11-11T11:08:00+01:00</updated>
    <id>http://hron.me/blog/2012/11/rubymine-es-teamcity</id>
    <content type="html"><![CDATA[<p>Már régóta keresek egy olyan IDE-t, ami képes nem csak projektszinten kezelni és szintaxis-kiemelést adni a Ruby/Rails projektjeimnek,
de magát a nyelvet is "beszéli", vagyis van például kódkiegészítés, refaktorálás, figyelmeztetések, etc, etc.
Az általam eddig ismert legkomolyabb IDE, a NetBeans is csak elég alapszinten beszélte a Ruby nyelvet - aztán ki is vették belőle a támogatást,
jelenleg a plugin folyamatosan haláltusáját vívja, 7.2-höz már meg sem jelent semmiféle verzió.</p>

<p>Egy StackOverflow böngészés során akadtam rá a JetBrains <a href="http://www.jetbrains.com/ruby/">RubyMine</a> nevű IDE-jére. Saját bevallásuk szerint az
eszköz képes nyelvi szinten is kezelni a Ruby-t, illetve támogatja az összes nagyobb teszkörnyezetet. Mivel amúgy is épp indítottam egy projektet,
úgy gondoltam, adok neki egy esélyt, hát legfeljebb letörlöm, és folytatom az eddigi módon, TextMate és Vim párossal. Szerencsére csalódtam. Pozitívan.
Hatalmasat.</p>

<p>A RubyMine ugyanis nem csak egyszerűen jó, hanem - amennyire tudom - a maga nemében jelenleg páratlan a piacon azzal, hogy tényleg hozza azt, amit ígér,
vagyis teljes mértékben támogatja a Ruby nyelvet és a Rails keretrendszert, sőt, még ennél is tovább megy, beépített támogatása van a lokalizációk kezeléséhez,
grafikusan mutatja, hogy mely mdoeljeink vannak adatbázisban, képes a Rails projekt szerkezetét Rails-aspektusú nézetben mutatni (ahol nem mappák és fájlok vannak,
hanem kategóriák, pl. Controllers, Models, Helpers), a kontrollerek akcióihoz hozzá tudja rendelni a nézeteket, partialokat, a refaktor során pedig olyan mélységekbe is
lemegy, amiről álmodni sem mertem soha - egy modell átnevezésekor képes a nézetekben is utánanézni az útvonal metódusoknak, és megfelelően átnevezni azokat!</p>

<p>Ezen felül csak úgy mellékesen, képes kezelni az <a href="http://rvm.io">RVM</a>-et, támogatja a <a href="http://gembundler.com/">Bundler</a>t, a Rails generátorokat, a Rake taszkokat, SCSS-t meg CoffeeScript-et, ... meg ilyen kis semmiségeket is.</p>

<p>Az egyetlen probléma vele a kissé hiperaktív kódkiegészítése, ha leírok egy nyilat, rögtön ugrana rá, pedig én magamtól szoktam szóközt is ütni utána, de azzal meg
elfogadom az első lehetőséget is egyben - ami általában rossz ötlet. Biztos le lehet valahogy beszélni róla, majd utánanézek (de ha valaki tudja a tuti megoldást,
a komment doboz mindig nyitott az ilyesmikre :-) ), egyelőre még elviselem.</p>

<p>Jelenleg folyamatosan használom az épp aktív projektemhez, teljesen jól szolgál, bár még képességeinek csak szerény részét használom. Most egyelőre a 30 napos
próbaidőszakban vagyunk (dicséretes, hogy ez alatt sem ugrál föl valami kis ablak indításkor, hogy még 22.45 nap van hátra, és mostazonnal vedd meg - ez rém undorító,
ha tetszik, úgyis megveszem - főleg, mert lejár -, ha meg nem tetszik, akkor ez a kapacitálás csak ront a dolgon), ám azt gondolom, hogy a 66 euro a személyes licencért abszolút megéri.</p>

<p>Amit nem használok belőle (sem), az a Git integráció, nekem a git még mindig parancssoros dolgot jelent, egyszerűbb kiadni a <code>git co feature-awesome-stuff</code> parancsot,
mint GUI-ban kikattintgatni. Legalábbis szerintem.</p>

<p>A JetBrains honlapját tallózgatva (ismét) ráakadtam a <a href="http://www.jetbrains.com/teamcity/">TeamCity</a> nevű CI szerverre is, ezzel egyszer volt már egy futó kapcsolatom, de
valamiért nem sikerült telepíteni, és a végén Jenkins lett belőle. Most ismét kapott tőlem egy lehetőséget, hogy elinduljon, és meggyőzzön. Ezúttal mindkettő sikerült is neki.</p>

<p>A TeamCity-ről azt érdemes tudni, hogy egy olyan Continous Integration szerver (továbbiakban CI szerver), melyet nagyon egyszerű kezelni, és nagyon jól áttekinthető felületet
ad, még egy felületes szemlélő számára is (ezt muszáj volt elsütni :-) ).</p>

<p>A RubyMine fejlesztők blogján pedig találtam egy <a href="http://blog.jetbrains.com/ruby/2009/11/jetbrains-teamcity-continuous-integration-for-ruby/">írást</a>, mely borzasztóan felcsigázta a kíváncsiságomat.
Azt merték ugyanis állítani, hogy  TeamCity beépítetten képes kezelni a RSpec és a Cucumber tesztek kimenetét, arrol riportot készít, hibáról értesít. Plusz, a TeamCity beépítetten támogatja az XMPP alapú notifikációt, amit pl. a Jenkins csak pluginnel tud.</p>

<p>Sajnos a TeamCity egyik hiányossága, hogy ő viszont már csak korlátozott mértékben képes kezelni a Bundlert: képes felismerni a létét, és azon keresztül futtatni a rake taszkokat, de már pl. egy <code>bundle install</code> -t képtelen elengedni, azt kézzel kell egy külön Build Step-ben, viszonylag kacifántosan megoldani. Végül sikerült, de azért nem voltam felhőtlenül boldog.
Viszont az első teszteredmények feledtették velem az ezen a téren történt csalódást, mert pontosan azt kaptam, amit elvártam: mindenféle külön konfiguráció nélkül jelenítete meg a Cucumber es RSpec tesztek eredményét, ráadásul egy egészen barátságos felületen.</p>

<p>Tényleg nem JetBrains reklámnak szánom ezt a postot, de azért annyira érződik mindkét terméken, hogy ezeket olyanok fejlesztik, akik láttak már közelről Rails projektet, meg RVM-et, meg ilyesmit... például a Jenkins Ruby pluginjénél nem volt ilyen érzésem.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Guard - projektjeink testőre]]></title>
    <link href="http://hron.me/blog/2012/10/guard-projektjeink-testore/"/>
    <updated>2012-10-23T14:37:00+02:00</updated>
    <id>http://hron.me/blog/2012/10/guard-projektjeink-testore</id>
    <content type="html"><![CDATA[<p>Nem olyan régen ismerkedtem meg a <a href="https://github.com/guard/guard">guard</a> nevű
gemmel, ami egy nagyon hasznos kis szerszám annak, aki Rails fejlesztésre adja
a fejét, de plug-injei révén például PHP fejlesztők is profitálhatnak a tudásából.</p>

<!-- more -->


<p>Ez a kis cucc arra képes, hogy figyelje a projekt fájljait változások után
kutatva, és amikor változik valami, pl. elmentünk egy fájlt, akkor végre tud
hajtani bizonyos műveleteket.</p>

<p>Vegyünk két nagyon alap kis példát:</p>

<p>Van egy PHP projektünk, melyben PHPunit teszteket szeretnénk futtatni. Minden
egyes osztályunkhoz tartozik, egy hasonló nevű teszt osztály, csak Test van a
végén. Tehát a User -t a UserTest, a Car-t a CarTest osztály teszteli. Ekkor:</p>

<p>```ruby Guard konfiguráció PHPUnit-hoz https://github.com/guard/guard-phpunit Több infó
guard 'phpunit', :tests_path => 'Tests', :cli => '--colors' do
  # Figyeljük az összes teszt osztály változását
  watch(%r{<sup>.+Test.php$})</sup></p>

<p>  # Figyeljük az osztályok változását, és futtatjuk a megfelelő teszteket
  watch(%r{<sup>Classes/(.+).php})</sup> { |m| "Tests/#{m[1]}Test.php" }
end
```</p>

<p>Nem kell aggódni, ha a második esetnél az adott teszt osztály nem létezik,
akkor egyszerűen nem történik semmi.</p>

<p>A Guard-hoz rengeteg féle <a href="https://github.com/guard">plug-in</a> létezik már,
de legrosszabb esetben lehetséges shell parancsokat is <a href="https://github.com/guard/guard-shell">futtatni</a>
fájlváltozáskor.</p>

<p>Amire érdemes odafigyelni, az a függőségek. A Guard-nak egyrészt szüksége
van a platformunknak megfelelő fájlváltozás-érzékelő plug-inre, illetve
mivel képes minden platformon a platformnak megfelelően értesítést is
küldeni, így ezeket a plug-injeit is megfelelően konfigurálni kell.</p>

<p>Néhány dolog, amire figyelni kell:</p>

<ul>
<li>Mac OS X 10.8-nél korábbi verziólnál szükséges a <a href="http://growl.info">Growl</a> telepítése
(10.8-hoz van plug-in a beépített értesítési rendszer használatára)</li>
<li>Windows alatt a <a href="https://github.com/luislavena/win32console">win32console</a> gem nélkül nincsenek színek</li>
</ul>


<p>Emiatt én mindig Gemfile segítségével telepítem. Egy alap Gemfile álljon itt ehhez:</p>

<p>```ruby Gemfile Guard használatához
group :development do
  # Guard
  gem 'guard', '~> 1.4.0'
  if RUBY_PLATFORM =~ /darwin/i</p>

<pre><code>if %x{sw_vers -productVersion}.strip =~ /^10\.8/
  gem 'terminal-notifier-guard'
else
  gem 'ruby_gntp'
end
gem 'rb-fsevent', '~&gt; 0.9.1', :require =&gt; false
</code></pre>

<p>  elsif RUBY_PLATFORM =~ /linux/i</p>

<pre><code>gem 'rb-inotify', :require =&gt; false 
</code></pre>

<p>  elsif RUBY_PLATFORM =~ /(mswin|mingw)/i</p>

<pre><code>gem 'win32console', :require =&gt; false
gem 'wdm', :require =&gt; false
</code></pre>

<p>  end</p>

<p>  # Guard plug-ins
  gem 'guard-phpunit'
end
```</p>

<p>A függőségek telepítése a <code>bundle install</code> míg a Guard futtatása a <code>bundle exec guard start</code> paranccsal zajlik.</p>

<p>A Guard fájlt használatba vétel előtt inicializálni is kell, ezt a <code>bundle exec guard init</code> paranccsal tehetjük meg.
Ha menet közben telepítünk olyan plug-int, mely futtatásra alkalmas (tehát nem értesítő plug-in), akkor azt a
<code>bundle exec guard init PLUGIN_NAME</code> paranccsal tehetjük meg, a plug-in neve pedig mindig a guard- után álló rész (pl. shell).
Egyébként a legtöbb plug-in README fájlja nagyon részletes útmutatót tartalmaz a plug-in használatáról.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub powa]]></title>
    <link href="http://hron.me/blog/2012/10/github-powa/"/>
    <updated>2012-10-21T01:53:00+02:00</updated>
    <id>http://hron.me/blog/2012/10/github-powa</id>
    <content type="html"><![CDATA[<p>Egy régóta dédelgetett álom vált ma valóra: végre megtaláltam a megfelelő környezetet arra, hogy felköltözzem a GitHub-ra.
Már régóta tervezgettem a költözést, egészen pontosan azóta, amióta olvastam a <a href="http://pages.github.com">GitHub Pages</a>
szolgáltatásról - már nem tudom, hol. Mert igazából ez az, ami nekem kell: egy szövegfájl, amibe beleírom a gondolataimat,
néhány egyszerű trükk, amivel megformázom, és végül pár gombnyomás, amivel beküldöm.</p>

<!-- more -->


<h2>Blogtörténelem</h2>

<p>Eredetileg Wordpress alapú blogom volt. Az túlzás lenne, hogy szerettem, mondjuk, hogy kedveltem. Mármint a blogot. Az adminfelületét már
nem annyira, azt pedig főleg nem, hogy állandóan nyüzsgött valami miatt. Most ez a plugin frissült, most a Wordpress frissült,
most épp valami spam van... őszintén szólva egy idő után azt vettem észre, hogy belépek azzal, hogy na most cikket írok, aztán
a végén plugint frissítettem - a cikkre meg valahogy elszállt az ihlet.</p>

<p>Ezután volt egy hosszabb időszak, amikor saját készítésű (Rails alapú, mi más? :-) ) blogmotoron futottak a dolgok. Ez is zsákutcának
bizonyult, bár másért, mint a WP: nem volt elég szabadidőm arra, hogy igényesen megcsináljam. Zavart az, hogy lehetne sokkal jobb is.</p>

<p>A legutolsó időszak a <a href="http://posterous.com/">Posterous</a>-on zajlott. Imádnivaló blogszolgáltatás - apróbb és nagyobb hibákkal.
Az első és - számomra - legzavaróbb bugja az URL generálással volt kapcsolatos. Nem tudom, ki-hogy van vele, én nem rajongok a generált
ID-re végződő URL-ekért. No nem mintha seo mániás lennék, egyszerűen zavarja a szépérzékemet. Volt olyan cikk a blogon, amit 5x kellett
elmenteni, hogy végre észrevegye magát a motor, hogy én itt bizony címet adtam a bejegyzésnek. De ez nem is lenne gond, ha felül lehetne
bírálni az automatát, mert bepöttyentem én azt a három ékezetmentes szót kötőjellel elválaszva, amit ő generálna ki - csakhogy erre esély
sem volt.</p>

<p>A másik bug inkább csak szomorú mint zavaró volt: semmilyen kódformázási lehetőség nem volt. Beszúrhattál &lt;code&gt; taget a cikkbe, és
ennyi. Még rendes class-t sem tudtam neki adni, mert a motor leirtott minden egyénieskedési törekvést, így nem jöhettek szóba a JS alapú
kódszinezők sem.</p>

<p>A harmadik problémát a Posterous cloud-szerű működése jelentette. Nem tetszettek a beépített témák, sajátot akartam. Ezt végül véghez is
vittem, de a témához tartozó fájlokat egyszerűen nem tudtam a bloggal együtt tároltatni, egy külön helyről kellett szedni őket. Ezzel addig
nincs is baj, amíg egy reggel arra nem ébredek, hogy a blog képeit, CSS-eit, egyéb izémicsodáit tároló hely elérhetetlen. Ez azt
eredményezi, hogy van egy olvashatatlan blogom. Nem egy kellemes dolog.</p>

<p>Most viszont úgy néz ki, a <strong>GitHub Pages</strong> és az <a href="http://octopress.org">Octopress</a> megoldotta minden problémámat.
Nincs frissítési kötelezettség, az oldal plain HTML-ben tárolódik; a cikkeket az éppen aktuális kedvenc editoromban írhatom meg;
használhatom a kedvenc leírónyelvemet, a <a href="http://daringfireball.net/projects/markdown/">Markdown</a>-t, a cikkek URL-je automatikusan
generálódik, ha nem jó, beleszólhatok; a spammentességről pedig a <a href="http://disqus.com">Disqus</a> gondoskodik.</p>

<p>Az egyetlen dolog, ami hibádzik, és ezt nagyon szerettem a Posterous-ban, hogy ha ráküldtem e-mailben egy képet,
azt képes volt bejegyzéssé alakítani, és kirakni. Viszont szerencsére ez egy nagyon könnyen megvalósítható funkció.</p>

<p>Összességében úgy gondolom, hogy keveset veszítettem, de azt mind visszanyertem abban, hogy ez a blog nem igényel gondozást.
Nem kell aggódnom a spamek miatt, nem kell várakoznom a frissítésekre, nem kell tűnődni, hogy hogyan illesszek be kódot olvashatóan,
és nem kell túl sokat fejlesztenem se.</p>

<p><strong>PS</strong>: sajnos a Posterous-os kommenteket nem tudom ide áthozni, azok elvesztek számotokra. Szerencsére (?) nem volt túl sok...</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Valamit másképpen]]></title>
    <link href="http://hron.me/blog/2012/09/valamit-maskeppen/"/>
    <updated>2012-09-09T01:14:58+02:00</updated>
    <id>http://hron.me/blog/2012/09/valamit-maskeppen</id>
    <content type="html"><![CDATA[<p>A HUP-on bedobott <a href="http://hup.hu/szavazasok/20120908/mit_tennel_az_utolso_napodon">szavaz&aacute;s</a>&nbsp;gondolkodtatott el azon, hogy csin&aacute;ln&eacute;k-e valamit alapvet&ouml;en m&aacute;sk&eacute;ppen, ha &uacute;jrakezdhetn&eacute;m az &eacute;letemet. Nagyon cs&aacute;b&iacute;t&oacute; a lehet&ouml;s&eacute;g, mert hib&aacute;ztam, nem is egyszer, sokszor, n&eacute;ha kicsit, n&eacute;ha nagyot.</p>

<p>Akkor &eacute;s ott &uacute;gy &eacute;reztem, hogy nagyon gyorsan meg kellene nyomni a backspace gombot, &eacute;s nekifutni megint. De ut&oacute;lag visszan&eacute;zve mindig r&aacute;j&ouml;v&ouml;k, hogy h&uuml;lyes&eacute;g lett volna. Mert akkor egy csom&oacute; j&oacute; dolog sem t&ouml;rt&eacute;nt volna meg velem az &eacute;letben.</p>

<p>Tal&aacute;n egyetlen esem&eacute;ny van, amit megakad&aacute;lyozn&eacute;k, b&aacute;r jelenleg nem tudom felm&eacute;rni, mekkora hat&aacute;sa lenne: a tavalyel&ouml;tt ny&aacute;ri esem&eacute;nyeket. Az az egy h&oacute;napnyi k&iacute;nl&oacute;d&aacute;s lehet, hogy megsp&oacute;rolhat&oacute; lett volna. Nem biztos, de lehet.</p>

<p>De a t&ouml;bbin nem v&aacute;ltoztatn&eacute;k. S&ouml;t, m&eacute;g csak azt sem szeretn&eacute;m, hogy eg&eacute;szs&eacute;gesen sz&uuml;lessek. Nem volt egyszer&uuml; a betegs&eacute;gemmel, ez t&eacute;ny. &Eacute;s azt is tudom, hogy a k&ouml;rnyezetemnek sem volt egyszer&uuml;. De ha nem annak sz&uuml;letek, akinek, ma nem lehetek az, aki, &eacute;s nem lehetnek azok a bar&aacute;taim, akik. A k&eacute;t legjobb bar&aacute;tomat &uacute;gy ismertem meg, hogy interneten k&eacute;rtek t&ouml;lem seg&iacute;ts&eacute;get. Eg&eacute;szs&eacute;gesk&eacute;nt tal&aacute;n nem &uuml;ln&eacute;k ennyit a g&eacute;p el&ouml;tt, hiszen nagyon impulz&iacute;v &eacute;s akt&iacute;v emberke vagyok egy&eacute;bk&eacute;nt, de ez azzal j&aacute;r, hogy lemaradn&eacute;k mindenr&ouml;l, ami most fontos.
Emiatt gondolom azt, hogy - b&aacute;r kellemetlen, de - nem baj az, ami van velem. &Eacute;n egy picit m&aacute;s vagyok, n&aacute;lam ez az "eg&eacute;szs&eacute;ges".</p>

<p>V&aacute;lasztan&eacute;k-e m&aacute;sik csal&aacute;dot, k&ouml;rnyezetet? Aki k&ouml;zelebbr&ouml;l ismer, tudja, hogy n&aacute;lam m&eacute;g ez sem egy egyszer&uuml; eld&ouml;ntend&ouml; k&eacute;rd&eacute;s. De &uacute;gy gondolom, nem. Nem volt sima &eacute;letem, voltak g&ouml;r&ouml;ngy&ouml;k, bukkan&oacute;k, hegyek &eacute;s v&ouml;lgyek. Volt, amikor nagy volt a s&ouml;t&eacute;t, volt amikor sok volt a f&eacute;ny. De hiszem, hogy ezek is seg&iacute;tettek olyann&aacute; form&aacute;lni, amilyen most vagyok.&nbsp;</p>

<p>Csak n&eacute;h&aacute;ny dolog van, amiken v&aacute;ltoztatn&eacute;k. P&aacute;r &eacute;letvitelbeli apr&oacute;s&aacute;g. P&aacute;r apr&oacute; t&aacute;rgy, amire jobban vigy&aacute;zn&eacute;k. &Eacute;s n&eacute;h&aacute;ny ember, akikkel egy kicsit t&ouml;bb id&ouml;t t&ouml;lten&eacute;k, kicsit jobban szeretn&eacute;m &ouml;ket, mert &uacute;gy &eacute;rzem, ad&oacute;s maradtam. De ez minden.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Continous deployment, vagy afféle]]></title>
    <link href="http://hron.me/blog/2012/06/continous-deployment-vagy-affele/"/>
    <updated>2012-06-07T00:56:00+02:00</updated>
    <id>http://hron.me/blog/2012/06/continous-deployment-vagy-affele</id>
    <content type="html"><![CDATA[<p>Az ember a netet olvasgatva &eacute;rdekes dolgokra tud bukkanni, illetve sokszor nagyon j&oacute; &ouml;tleteket lehet kapni puszt&aacute;n a m&aacute;sok &iacute;r&aacute;saib&oacute;l.</p>

<p><a href="http://infokukac.com/2011/11/csak-egy-gombnyomas%E2%80%A6/">Info@ &iacute;rt</a> arr&oacute;l, hogy n&aacute;luk hogy ker&uuml;lt bevezet&eacute;sre az, hogy a tesztel&ouml;k gombnyom&aacute;sra deployolnak a teszt rendszerre verzi&oacute;kat. B&aacute;r n&aacute;lam max 1 tesztel&ouml; lenne, &eacute;s &ouml;t sem szeretn&eacute;m a Jenkins k&ouml;zel&eacute;be engedni, az&eacute;rt elgondolkodtatott a dolog: mi volna, ha a Jenkins egyr&eacute;szt monitorozn&aacute; a deploy &aacute;gat (ez n&aacute;lam a master &aacute;g, <a href="http://hron.me/blog/2012/04/a-legjobb-git-workflow-tovabbfejlesztve/">amint azt m&aacute;r eml&iacute;tettem</a>), ezen v&eacute;grehajtana egy deployment tesztet is a staging k&ouml;rnyezetre (ezzel lenne egy folyamatosan friss teszt k&ouml;rnyezet), illetve adott esetben meg lehetne k&eacute;rni &ouml;t arra, hogy, legyen m&aacute;r kedves az &eacute;les szerverre is kidobni az aktu&aacute;l k&oacute;dot.</p>

<p>Ez amennyire bonyolultan hangzik, annyira egyszer&uuml; volt megoldani. Egyr&eacute;szt a staging &eacute;s az &eacute;les szerverre fel kellett venni a Jenkins saj&aacute;t SSH kulcs&aacute;t (m&aacute;r r&eacute;gebbr&ouml;l volt ilyenem, mert a Jenkins slave-k kezel&eacute;s&eacute;hez kell), m&aacute;sr&eacute;szt kellett k&eacute;t olyan jobot csin&aacute;lni, amelyek elv&eacute;gzik a fent eml&iacute;tett k&eacute;t m&uuml;veletet.</p>

<p>Ut&aacute;na fogtam, lem&aacute;soltam azt a jobot, ami a norm&aacute;l (nem deployol&oacute;s) teszteket csin&aacute;lja, hozz&aacute;csaptam m&eacute;g egy l&eacute;p&eacute;st, miszerint deployoljon is a staging k&ouml;rnyezetbe. Illetve &aacute;t&iacute;rtam, hogy a master &aacute;gat figyelje.
Annyit m&eacute;g egyszer&uuml;s&iacute;tettem a dolgon, hogy egyik tesztn&eacute;l sem csin&aacute;lok coverage m&eacute;r&eacute;st, mert ez csak lass&iacute;tja a tesztek futtat&aacute;s&aacute;t, de &eacute;rdemi eredm&eacute;nyt nem ad hozz&aacute; a teszthez, hiszen itt a tesztek lefut&aacute;sa is csak az&eacute;rt fontos, hogy ha valaki v&eacute;letlen&uuml;l r&aacute;comittolt volna az &eacute;les &aacute;gra, miel&ouml;tt lefutna a deployment teszt, az m&eacute;g kibukjon. De &aacute;ltal&aacute;ban senki nem szokott.</p>

<p>Az &eacute;les deploy job annyiban volt k&uuml;l&ouml;nb&ouml;z&ouml; ett&ouml;l, hogy itt m&eacute;g kikapcsoltam a pollingoz&aacute;st is, mert ezt k&eacute;zzel (na j&oacute;, XMPP-n kereszt&uuml;l) fogom triggerelni, &eacute;s csak akkor, ha a staging k&ouml;rnyezetbe rendben kiker&uuml;lt a k&oacute;d, illetve mindenki j&oacute;v&aacute;hagyta a m&uuml;k&ouml;d&eacute;st is. Egy&eacute;bk&eacute;nt az el&ouml;z&ouml; job m&aacute;solata volt.</p>

<p>&Iacute;gy gyakorlatilag az van, hogy amikor release van, akkor szok&aacute;s szerint mergelek egyet a master &aacute;gra, ezt felnyomom a git rep&oacute;ba, majd neki&aacute;llok t&uuml;relmetlen&uuml;l lesni az IM kliensem ablak&aacute;t. N&eacute;mi id&ouml; eltelt&eacute;vel a Jenkins besz&oacute;l, hogy (j&oacute; esetben) az aktu&aacute;lis job &aacute;tment minden l&eacute;p&eacute;sen, &eacute;s k&eacute;szen &aacute;ll az &eacute;les&iacute;t&eacute;sre. Ekkor megk&eacute;rem a jenkins-t, hogy deployoljon (jenkins, build project-deploy now), ez &aacute;tfuttatja m&eacute;g egyszer a teszteket, majd kiteszi az &eacute;les szerverre a k&oacute;dot, &uacute;jraind&iacute;tja a thin webszervert hozz&aacute;, &eacute;s k&eacute;sz is. Mivel mind a teszteknek mind a deploymentnek r&eacute;sze az adatb&aacute;zis friss&iacute;t&eacute;se is (rake db:migrate), &iacute;gy nem fordulhat el&ouml;, hogy a db s&eacute;ma miatt halunk meg.</p>

<p>Az&eacute;rt itt m&eacute;g nincs v&eacute;ge a t&ouml;rt&eacute;netnek, a k&ouml;vetkez&ouml; l&eacute;p&eacute;s az, hogy ellen&ouml;rizni kell, hogy az app fel is bootolt-e tisztess&eacute;gesen. Sajnos a thin webszervernek megvan az a kellemetlen tulajdons&aacute;ga, hogy csak azt v&aacute;rja meg, am&iacute;g &ouml; maga meg a k&ouml;rnyezete felbootol, miel&ouml;tt forkol, mag&aacute;t a rails appot nem v&aacute;rja be. Vagyis lehet, hogy &uacute;gy kapsz HTTP 500-at, hogy am&uacute;gy a thin azt jelezte vissza, hogy sikeresen elindult (a deployment utols&oacute; mozzanata az appszerver &uacute;jraind&iacute;t&aacute;sa). Egyel&ouml;re most a k&eacute;zi mel&oacute; is j&oacute;, a j&ouml;v&ouml;ben meg sztem lesz egy negat&iacute;v teszt, egy fix oldalra fogok egy curl-t h&iacute;vni, ha HTTP 200 j&ouml;n vissza, m&aacute;r j&oacute;k vagyunk.</p>
]]></content>
  </entry>
  
</feed>
