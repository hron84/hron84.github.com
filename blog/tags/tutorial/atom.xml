<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tutorial | Hron's blog]]></title>
  <link href="http://hron.me/blog/tags/tutorial/atom.xml" rel="self"/>
  <link href="http://hron.me/"/>
  <updated>2013-06-26T11:47:44+02:00</updated>
  <id>http://hron.me/</id>
  <author>
    <name><![CDATA[G치bor Garami]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rename Windows 8 Profile dir]]></title>
    <link href="http://hron.me/blog/2013/04/rename-windows-8-profile-dir/"/>
    <updated>2013-04-18T00:08:00+02:00</updated>
    <id>http://hron.me/blog/2013/04/rename-windows-8-profile-dir</id>
    <content type="html"><![CDATA[<p>So, I ran into a weird situation: when I installed Windows, I used Live account to create my user.
In preview version of Windows 8 it created a profile dir based on the user part of e-mail address
of the Live account, so from hrgy@live.com it created an user hrgy with same profile dir. However,
the final version is changed it to create account based on your first name, it was "G치bor" in this
case. Notice the accented second letter.</p>

<p>The problem with folders containing non-ASCII char in its name is obvious: not all program can handle
it correctly. It has a displaying problems in some apps, and some apps cannot create their files in
this profile.</p>

<p>The fix was not so easy but I now describe required steps.</p>

<p>First if you do not have an another administrator user than you, then you have to create it. Windows 8
does not allow to log into the built-in Administrator account anymore, so you have to create one in
Control Panel. It's pretty straighforward and net contains a bunch of howtos for it, so I skip describing
this step.</p>

<p>Now, log out from your account, and log in into the new one.</p>

<p>Start <code>regedit</code> and navigate to <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList</code></p>

<p>In the subkeys (subfolders) find one what displays your old dirname in <code>ProfileImagePath</code> attribute. In my
case the value was <code>C:\Users\G치bor</code>. Right click, edit and replace last part of the path to what you want to use.</p>

<p><strong>Important:</strong> Even if world collapsing, <strong>do not log in into your own account (what being modified)</strong>
until you finish these steps!</p>

<p>Then, you have to reboot into Safe mode. The easiest way is press <code>Shift + F8</code> during boot. If you
seeing the Windows splash displaying in "wrong" resolution then you are in Safe mode.</p>

<p><strong>Important:</strong> you have to log in into the newly created admin account, <em>not</em> into your own one!</p>

<p>Then you have to rename your profile folder. Start a command prompt in Safe mode, and type following:</p>

<pre><code>cd C:\Users
move old_name new_name
</code></pre>

<p>The <code>old_name</code> is the old name of your profile directory, the <code>new_name</code> is what you specified in RegEdit. In
my case it was:</p>

<pre><code>cd C:\Users
move G치bor hron
</code></pre>

<p>Now you are done! If you striclty follwed this tutorial, then if you reboot and log in into your account, you do not see
any change, except the %USERPROFILE% environment variable carries the new name.</p>

<p><strong>Note:</strong> I saw only one bug: iCloud Photo stream stored the full path of my Pictures folder in its database and I had to relocate it.
It's a bug in iCloud, not a Windows problem.</p>

<p><em>Disclaimer: This tutorial is tested by me but I do not guarantee anything. Take a backup from your important data before start doing
this. I am not responsible if your data lose, you cannot login anymore or your kitten vanishes.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Logging with Logstash]]></title>
    <link href="http://hron.me/blog/2012/10/logging-with-logstash/"/>
    <updated>2012-10-27T22:33:00+02:00</updated>
    <id>http://hron.me/blog/2012/10/logging-with-logstash</id>
    <content type="html"><![CDATA[<p>In these days I started looking up for an opensource, easy-to-use central logging system.
I read a lot of articles on the internet, and I found two good solution,
<a href="http://www.graylog2.org">Graylog2</a> and <a href="http://logstash.net/">LogStash</a>. Both system can
operate as syslog server and store our logs in database. I tried both system, and I
experienced both have small problems - but some of these problems are different.</p>

<h2>Graylog2</h2>

<p>Graylog has a very good-looking interface and a relative easy configuration file. It has
a lot of parameters, but the default configuraiton file is well-documented and easy to read.</p>

<p>Graylog uses a MongoDB for store some small stuffs and ElasticSearch for store and search logs.
The main advantage of this solution is the separated web interface. It can be installed anywhere,
it just need a some small configurations to connect to same ES/Mongo instances as Graylog server uses.</p>

<p>The web ui makes easy to search and filter logs, backlist some entries, and create a "channels" what is
a named filter setting, where you can follow what happening in a simple context.</p>

<p>But as I started use web interface and the server itself in everyday tasks, I found two problems:</p>

<ul>
<li>Web interface is does not make easy to write filters, because nor the interface, nor the documentation
not describe how filters will be matched against messages. Because these filters are simple regular
expressions, it is needed to know how to search some specific things. I sucked with it a lot of time
until I found a method to find something. It is need a lot of improvement.</li>
<li>Graylog seems does not take care about its input. After a week I found logging is stopped working. After
some investigation, I discovered the ElasticSearch eaten a lot of resources and generating a huge log.
After reading log I found the ElasticSearch is broken on some invalid characters in index files. I
tried to restart ES server and leave to recover itself for a hour but no luck, it stuck in recovering state.
Because I am not know well ES and graylog I started ask Google about these problems, but I did not find a
good solution for me. So I decided to move on from Graylog.</li>
</ul>


<h2>LogStash</h2>

<p>LogStash is a more robust logging solution. It is similar as syslog-ng but it does not restrict itself to working
as Syslog server (with other words: get infos from input like syslog server) but it can chew anything what is a text
stuff. It can use a lot of things as a log source, e.g.:</p>

<ul>
<li>Syslog server (it can act as syslog server, but see below)</li>
<li>Plain file</li>
<li>Raw TCP/UDP socket</li>
<li>Output of any executable</li>
<li>IRC/Jabber channels</li>
<li>Twitter</li>
<li>Stdin</li>
<li>Windows Eventlog</li>
<li>and so on...</li>
</ul>


<p>And it has a numerous output format too. What is important for me is it can use ElasticSearch and some No-SQL
databases as log-storing backend.</p>

<p>It has a built-in web interface for searching in log records, but <a href="https://github.com/rashidkpc/Kibana/">Kibana</a>
is a little better Web interface to search against ElasticSearch, it makes searching/filtering easier.</p>

<p>My current configuration is very easy:</p>

<ul>
<li>There is a central syslog server, provided by LogStash</li>
<li>All my server is logging here via RSyslog (default syslog server of Debian Linux)</li>
<li>LogStash is configured to store log messages in ElasticSearch after some parsing</li>
</ul>


<p>Basically, I followed the <a href="http://cookbook.logstash.net/recipes/syslog-pri/">official recipe</a> for this setup except
one thing: somehow I couldn't get working the date parser in the way what recipe says. So I tricked it out.</p>

<p>First, I created an Rsyslog config part, what I uploaded to /etc/rsyslog.d on every server:</p>

<p><code>text /etc/rsyslog.d/to-logstash.conf
$template LOGSTASH,"&lt;%PRI%&gt;%timegenerated:::date-rfc3164-buggyday% %HOSTNAME% %APP-NAME%: %msg:::drop-last-lf%\n"
$ActionForwardDefaultTemplate LOGSTASH
*.*   @1.2.3.4:514
</code></p>

<p>Note the <code>%timegenerated:::date-rfc3164-buggyday%</code> directive. The documentation of Rsyslog says it is basically
pads a day number with zero if it is smaller than 10. It is introduced to emulate a syslog-ng 'bug'.</p>

<p>After it I created a following configuration for logstash:</p>

<p>```text LogStash configuration
input {
  tcp {</p>

<pre><code>port =&gt; 514
type =&gt; syslog
</code></pre>

<p>  }</p>

<p>  udp {</p>

<pre><code>port =&gt; 514
type =&gt; syslog
</code></pre>

<p>  }
}</p>

<p>filter {
  grok {</p>

<pre><code>  type =&gt; "syslog"
  pattern =&gt; [ "&lt;%{POSINT:syslog_pri}&gt;%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{PROG:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" ]
  add_field =&gt; [ "received_at", "%{@timestamp}" ]
  add_field =&gt; [ "received_from", "%{@source_host}" ]
</code></pre>

<p>  }
  syslog_pri {</p>

<pre><code>  type =&gt; "syslog"
</code></pre>

<p>  }</p>

<p>  date {</p>

<pre><code>  type =&gt; "syslog"
</code></pre>

<p>  #    syslog_timestamp => [ "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]</p>

<pre><code>  syslog_timestamp =&gt; [ "MMM dd HH:mm:ss" ]
</code></pre>

<p>  }</p>

<p>  mutate {</p>

<pre><code>  type =&gt; "syslog"
  exclude_tags =&gt; "_grokparsefailure"
  replace =&gt; [ "@source_host", "%{syslog_hostname}" ]
  replace =&gt; [ "@message", "%{syslog_message}" ]
</code></pre>

<p>  }
  mutate {</p>

<pre><code>  type =&gt; "syslog"
  remove =&gt; [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
</code></pre>

<p>  }
}</p>

<p>output {
  elasticsearch {</p>

<pre><code>index =&gt; "syslog-%{+YYYY.MM.dd}"
embedded =&gt; false
</code></pre>

<p>  }</p>

<p>  #stdout { debug => true debug_format => json }
}</p>

<h1>vim: ts=2 sw=2 et</h1>

<p>```</p>

<p>Note the commented out date mapping. This is what original recipe says but I always got an exception
related to parser and DateFormat what complaining about invalid data in the date. With buggyday hack
on Rsyslog side I made dates 2-digit long, so it will always be parsed, I hope. It will reveals at least
Nov 1.</p>

<p>The last output stuff is just for debugging, it displays the parsed object in JSON format, this is a way
how can you check your all filter working correctly.</p>

<p>I sucked with parsing the message because my old rsyslog template has a typo and I could not imagine, what
failing.
After some digging, I found jls-grok RubyGem is contains a same parser what LogStash uses, so you can
check your filters via IRB. Just make sure you using 1.9.3 ruby, because Ruby 1.8 throws a SyntaxError
when you try <code>require 'grok-pure'</code> (what is recommended, because the simple 'grok' is searching a C lib).</p>

<p>```ruby Simple example for testing Grok filter
require 'rubygems'
require 'grok-pure'</p>

<p>grok = Grok.new</p>

<h1>I extracted patterns dir from jar package</h1>

<p>Dir.glob('patterns/*').each { |f| grok.add_patterns_from_file f }
s="Oct 27 19:01:09"
pattern = '%{SYSLOGTIMESTAMP:syslog_timestamp}'
grok.compile(pattern)
p grok.match(s).match.to_a # => ["Oct 27 19:01:09", "Oct 27 19:01:09", "Oct", "27", "19:01:09", "19", "01", "09"]
```</p>

<p>You can use exactly same pattern as you use in LogStash configuration file.</p>

<p><strong>Note:</strong> If you see a <code>_grokparsefailure</code> tag in your tag list, then you do something wrong. This means
the filter what you using in first filter does not match correctly on your syslog message from Rsyslog.
The good news is LogStash stop evaluating filters on the first failing in debug mode, and leave @message
untouched (if you see the second mutate from end, you can see we replace @message with the content of
syslog_message, and remove unneccessary fields in the last mutate filter). If somehow it falls through
the grok filter and removes the original (raw) message, then simply comment out the last two filter by
prefixing lines with a hashmark.</p>

<p>As you see in the config  use an external ES server, not the embedded one, because I currently have a
working and configured ES instance, and I would like to use that. No other reason to not use embedded
ES server: if you currently not have an ES instance, then simply use what shipped with LogStash.</p>

<p>The embedded web interface of LogStash is a bit tricky thing, because I could not start as documentation says
via the java command, I had to extract the jar file and run standalone to check its user interface.
Don't expect something cool: It is just a textfield with a button and contains a link with a basic
query string what filters messages generated today.</p>

<h2>Conclusion</h2>

<p>I think Graylog is a great logging solution, but it needs some love for prevent crashing ES server with
invalid characters in the stored data. But the web interface and easy configuration makes it very,
really very lovely.</p>

<p>LogStash is a good solution if you want to handle multiple log sources or you want to validate/manipulate
your log messages or you want to distribute logs to multiple destinations. I think LogStash is a little
overkill if you just want a central syslog server, however - this is working as expected. So I took my
two cent on LogStash and not on Graylog - even if I would like to prefer Graylog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Guard - projektjeink test콈re]]></title>
    <link href="http://hron.me/blog/2012/10/guard-projektjeink-testore/"/>
    <updated>2012-10-23T14:37:00+02:00</updated>
    <id>http://hron.me/blog/2012/10/guard-projektjeink-testore</id>
    <content type="html"><![CDATA[<p>Nem olyan r칠gen ismerkedtem meg a <a href="https://github.com/guard/guard">guard</a> nev콤
gemmel, ami egy nagyon hasznos kis szersz치m annak, aki Rails fejleszt칠sre adja
a fej칠t, de plug-injei r칠v칠n p칠ld치ul PHP fejleszt콈k is profit치lhatnak a tud치s치b칩l.</p>

<!-- more -->


<p>Ez a kis cucc arra k칠pes, hogy figyelje a projekt f치jljait v치ltoz치sok ut치n
kutatva, 칠s amikor v치ltozik valami, pl. elment칲nk egy f치jlt, akkor v칠gre tud
hajtani bizonyos m콤veleteket.</p>

<p>Vegy칲nk k칠t nagyon alap kis p칠ld치t:</p>

<p>Van egy PHP projekt칲nk, melyben PHPunit teszteket szeretn칠nk futtatni. Minden
egyes oszt치lyunkhoz tartozik, egy hasonl칩 nev콤 teszt oszt치ly, csak Test van a
v칠g칠n. Teh치t a User -t a UserTest, a Car-t a CarTest oszt치ly teszteli. Ekkor:</p>

<p>```ruby Guard konfigur치ci칩 PHPUnit-hoz https://github.com/guard/guard-phpunit T칬bb inf칩
guard 'phpunit', :tests_path => 'Tests', :cli => '--colors' do
  # Figyelj칲k az 칬sszes teszt oszt치ly v치ltoz치s치t
  watch(%r{<sup>.+Test.php$})</sup></p>

<p>  # Figyelj칲k az oszt치lyok v치ltoz치s치t, 칠s futtatjuk a megfelel콈 teszteket
  watch(%r{<sup>Classes/(.+).php})</sup> { |m| "Tests/#{m[1]}Test.php" }
end
```</p>

<p>Nem kell agg칩dni, ha a m치sodik esetn칠l az adott teszt oszt치ly nem l칠tezik,
akkor egyszer콤en nem t칬rt칠nik semmi.</p>

<p>A Guard-hoz rengeteg f칠le <a href="https://github.com/guard">plug-in</a> l칠tezik m치r,
de legrosszabb esetben lehets칠ges shell parancsokat is <a href="https://github.com/guard/guard-shell">futtatni</a>
f치jlv치ltoz치skor.</p>

<p>Amire 칠rdemes odafigyelni, az a f칲gg콈s칠gek. A Guard-nak egyr칠szt sz칲ks칠ge
van a platformunknak megfelel콈 f치jlv치ltoz치s-칠rz칠kel콈 plug-inre, illetve
mivel k칠pes minden platformon a platformnak megfelel콈en 칠rtes칤t칠st is
k칲ldeni, 칤gy ezeket a plug-injeit is megfelel콈en konfigur치lni kell.</p>

<p>N칠h치ny dolog, amire figyelni kell:</p>

<ul>
<li>Mac OS X 10.8-n칠l kor치bbi verzi칩ln치l sz칲ks칠ges a <a href="http://growl.info">Growl</a> telep칤t칠se
(10.8-hoz van plug-in a be칠p칤tett 칠rtes칤t칠si rendszer haszn치lat치ra)</li>
<li>Windows alatt a <a href="https://github.com/luislavena/win32console">win32console</a> gem n칠lk칲l nincsenek sz칤nek</li>
</ul>


<p>Emiatt 칠n mindig Gemfile seg칤ts칠g칠vel telep칤tem. Egy alap Gemfile 치lljon itt ehhez:</p>

<p>```ruby Gemfile Guard haszn치lat치hoz
group :development do
  # Guard
  gem 'guard', '~> 1.4.0'
  if RUBY_PLATFORM =~ /darwin/i</p>

<pre><code>if %x{sw_vers -productVersion}.strip =~ /^10\.8/
  gem 'terminal-notifier-guard'
else
  gem 'ruby_gntp'
end
gem 'rb-fsevent', '~&gt; 0.9.1', :require =&gt; false
</code></pre>

<p>  elsif RUBY_PLATFORM =~ /linux/i</p>

<pre><code>gem 'rb-inotify', :require =&gt; false 
</code></pre>

<p>  elsif RUBY_PLATFORM =~ /(mswin|mingw)/i</p>

<pre><code>gem 'win32console', :require =&gt; false
gem 'wdm', :require =&gt; false
</code></pre>

<p>  end</p>

<p>  # Guard plug-ins
  gem 'guard-phpunit'
end
```</p>

<p>A f칲gg콈s칠gek telep칤t칠se a <code>bundle install</code> m칤g a Guard futtat치sa a <code>bundle exec guard start</code> paranccsal zajlik.</p>

<p>A Guard f치jlt haszn치latba v칠tel el콈tt inicializ치lni is kell, ezt a <code>bundle exec guard init</code> paranccsal tehetj칲k meg.
Ha menet k칬zben telep칤t칲nk olyan plug-int, mely futtat치sra alkalmas (teh치t nem 칠rtes칤t콈 plug-in), akkor azt a
<code>bundle exec guard init PLUGIN_NAME</code> paranccsal tehetj칲k meg, a plug-in neve pedig mindig a guard- ut치n 치ll칩 r칠sz (pl. shell).
Egy칠bk칠nt a legt칬bb plug-in README f치jlja nagyon r칠szletes 칰tmutat칩t tartalmaz a plug-in haszn치lat치r칩l.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Qt ford칤t치s kezd콈knek]]></title>
    <link href="http://hron.me/blog/2012/04/qt-forditas-kezdoknek/"/>
    <updated>2012-04-20T15:59:00+02:00</updated>
    <id>http://hron.me/blog/2012/04/qt-forditas-kezdoknek</id>
    <content type="html"><![CDATA[<p>Nasz&oacute;val, ez a cikk itten arr&oacute;l fog sz&oacute;lni, hogy hogyan ford&iacute;tsunk magunknak forr&aacute;sb&oacute;l Qt-t &uacute;gy, hogy az ne piszk&iacute;tsa &ouml;ssze a rendszer&uuml;nket.</p>

<p>Hogy ez mi&eacute;rt is j&oacute;?</p>

<ul>
<li>A rendszer&uuml;nk r&eacute;gi Qt-t sz&aacute;ll&iacute;t, mi pedig egy &uacute;jhoz szeretn&eacute;nk fejleszteni</li>
<li>A Qt nyelvi f&aacute;jlokba akarunk belet&uacute;rni</li>
</ul>


<!-- more -->


<p>Az els콈 l&eacute;p&eacute;s a megfelel콈 git repo lekl&oacute;noz&aacute;sa. Ez &aacute;ltal&aacute;ban a git://gitorious.org/qt/qt.git, de haszn&aacute;lhatunk m&aacute;s kl&oacute;nokat is:</p>

<p><code>
hron@laptop workspace $ git clone git://gitorious.org/qt/qt.git &amp;amp;&amp;amp; cd qt
hron@laptop qt (master) $
</code></p>

<p>Egy p&aacute;r sz&oacute;t a promptr&oacute;l: az els콈 k&eacute;t szekci&oacute; mindenkinek ismert kell hogy legyen, ugye felhaszn&aacute;l&oacute;n&eacute;v@g&eacute;pn&eacute;v illetve az aktu&aacute;lis mappa neve. A z&aacute;r&oacute;jeles r&eacute;sz tr&uuml;kk&ouml;sebb, ide az aktu&aacute;lis git <em>branch</em> neve ker&uuml;l, hogy egy&eacute;rtelm콤 legyen, hol dolgozunk. &Aacute;ltal&aacute;ban az alap&eacute;rtelmezett branch a <strong>master</strong> nev콤, kl&oacute;noz&aacute;s ut&aacute;n teh&aacute;t ide jutunk.</p>

<p>Ezut&aacute;n ki kell v&aacute;lasztani a megfelel콈 branchet (a master szinte percr콈l-percre v&aacute;ltozik, azzal nem &eacute;rdemes foglalkozni). A lehet콈s&eacute;gek t&aacute;rh&aacute;z&aacute;t a "git branch -r" parancs mutatja meg, v&aacute;lasztani a "git checkout -b <em>branch</em> origin/<em>branch</em>" paranccsal tudunk. &Eacute;n most a 4.7-es branchet fogom el콈szedni:</p>

<p><code>
hron@laptop qt (master) $ git checkout -b 4.7 origin/4.7
hron@laptop qt (4.7) $
</code></p>

<p>Ezut&aacute;n kezd콈dhet az &eacute;rdemi ford&iacute;t&aacute;s. A ford&iacute;t&aacute;s ugyan nem autoconf/automake alap&uacute;, a kezdeti l&eacute;p&eacute;st m&eacute;gis a configure script megfelel콈 param&eacute;terekkel t&ouml;rt&eacute;n콈 futtat&aacute;sa jelenti:</p>

<p><code>
hron@laptop qt (4.7) $ ./configure -developer-build -opensource -confirm-license -nomake demos -nomake examples
hron@laptop qt (4.7) $
</code></p>

<p>A scriptnek van --help kapcsol&oacute;ja, mely ismerteti az &ouml;sszes haszn&aacute;lhat&oacute; kapcsol&oacute;t, &eacute;n az itt haszn&aacute;lt n&eacute;gyet emeln&eacute;m ki:</p>

<ul>
<li><strong>-developer-build</strong>: Arra utas&iacute;tja a ford&iacute;t&aacute;si rendszert, hogy ne a szok&aacute;sos /usr/lib/ jelleg콤 &uacute;tvonalon keresse a libeket, hanem az aktu&aacute;lis k&ouml;nyvt&aacute;rban</li>
<li><strong>-opensource</strong>: A ny&iacute;lt forr&aacute;s&uacute; verzi&oacute;t ford&iacute;tjuk</li>
<li><strong>-confirm-license</strong>: Egy kis k&ouml;nnyebbs&eacute;g, nem kell interakt&iacute;van elfogadni a licencet. Scriptel&eacute;sn&eacute;l hasznos.</li>
<li><strong>-nomake</strong>: A param&eacute;terk&eacute;nt megadott k&ouml;nyvt&aacute;rban lev콈 cuccokat nem fogja leford&iacute;tani. Nagyj&aacute;b&oacute;l a fenti k&eacute;t k&ouml;nyvt&aacute;r eset&eacute;ben van &eacute;rtelme haszn&aacute;lni, a t&ouml;bbin&eacute;l funkcioveszt&eacute;st kapunk ha haszn&aacute;ljuk (az src k&ouml;nyvt&aacute;r kiz&aacute;r&aacute;s&aacute;val meg nem kapunk semmit :-) ).</li>
</ul>


<p>Ezut&aacute;n egy kis molyol&aacute;s k&ouml;vetkezik, lefordul a <em>qmake</em> eszk&ouml;z, mely a Qt projektek ford&iacute;t&aacute;s&aacute;&eacute;rt felel콈s, majd ha m&aacute;r ott van, le is futtat&oacute;dik az &ouml;sszes qt-s cuccon, legener&aacute;lva a sz&uuml;ks&eacute;ges <em>Makefile</em>-okat.</p>

<p>Ezut&aacute;n a j&oacute;l ismert make parancs k&ouml;vetkezik, mely leforgatja a Qt forr&aacute;st.</p>

<p>Ha a nyelvi f&aacute;jlok friss&iacute;t&eacute;s&eacute;n t&ouml;rj&uuml;k a fej&uuml;nket, akkor ezen a ponton van m&eacute;g egy teend콈nk: ha eld&ouml;nt&ouml;tt&uuml;k mely nyelvi f&aacute;jlokkal akarunk dolgozni (a p&eacute;ld&aacute;ban ez a 'hu' lesz), akkor az al&aacute;bbi parancsra van sz&uuml;ks&eacute;g&uuml;nk:</p>

<p><code>
hron@laptop qt (4.7) $ make ts-hu
hron@laptop qt (4.7) $
</code></p>

<p>&Eacute;rtelemszer콤en, ha a spanyol f&aacute;jlokkal akarunk dolgozni, akkor a param&eacute;ter <em>ts-es</em> lesz. Fontos tudni, hogy ez csak a m&aacute;r regisztr&aacute;lt nyelvekre van meg, &uacute;j nyelvn&eacute;l el콈bb l&eacute;tre kell hozni a megfelel콈 TS f&aacute;jlokat, lem&aacute;solva egy m&aacute;r l&eacute;tez콈 f&aacute;jlt.</p>

<p>Ezut&aacute;n neki lehet esni a friss&iacute;tett f&aacute;jloknak a <em>Linguist</em> nev콤 programmal, mely a bin/ k&ouml;nyvt&aacute;rban tal&aacute;lhat&oacute;.</p>

<p>Tipp: ha csak 1-1 projekthez tartoz&oacute; f&aacute;jlt akarunk friss&iacute;teni, azt &iacute;gy tehetj&uuml;k meg:</p>

<p><code>
hron@laptop qt (4.7) $ make ts-designer-hu
 hron@laptop qt (4.7) $
</code></p>

<p>A fenti parancsa&nbsp; translations/designer_hu.ts f&aacute;jlt friss&iacute;ti be.</p>

<p><strong>Nagyon fontos</strong>: Ha beleny&uacute;lunk egy ts f&aacute;jlba, &eacute;s nem vagyunk az adott nyelv ford&iacute;t&oacute;i csapat&aacute;nak tagja, felt&eacute;tlen&uuml;l vegy&uuml;k fel a ford&iacute;t&oacute;(kk)al a kapcsolatot! Ha nem v&aacute;laszolnak, vagy nincs t&aacute;mpontunk hozz&aacute; hogy hol keress&uuml;k 콈ket; Oswald Buddenhagen vezeti a Qt ford&iacute;t&aacute;s&aacute;t, 콈t mindig meg lehet tal&aacute;lni az irc.freenode.net IRC szerveren, &aacute;ltal&aacute;ban ossi nick alatt.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A legjobb Git workflow - tov치bbfejlesztve]]></title>
    <link href="http://hron.me/blog/2012/04/a-legjobb-git-workflow-tovabbfejlesztve/"/>
    <updated>2012-04-18T23:06:00+02:00</updated>
    <id>http://hron.me/blog/2012/04/a-legjobb-git-workflow-tovabbfejlesztve</id>
    <content type="html"><![CDATA[<p>K&ouml;z&ouml;ns&eacute;gk&eacute;r&eacute;sre, most bevezetem az olvas&oacute;imat abba a Git repo kezel&eacute;si m&oacute;dszertanba, amit a saj&aacute;t projektjeimn&eacute;l haszn&aacute;lok.</p>

<p>Alapul az egyik tal&aacute;n legn&eacute;pszer콤bb Git workflow szolg&aacute;lt, melynek le&iacute;r&aacute;sa <a href="http://nvie.com/posts/a-successful-git-branching-model/" title="A successful git branching model">itt tekinthet콈 meg</a>.</p>

<!-- more -->


<p>L&aacute;ssuk az alapfogalmakat, amiket a le&iacute;r&aacute;sban haszn&aacute;lni fogok, ez az &eacute;n terminol&oacute;gi&aacute;m:</p>

<ul>
<li><strong>Master branch</strong>: A repo alap&eacute;rtelmezett branche. A frissen l&eacute;trehozott git repo-n&aacute;l ez a "master" nev콤 branch, de ak&aacute;rhogy is lehet h&iacute;vni.</li>
<li><strong>Develop branch</strong>: Ezen az &aacute;gon folyik a fejleszt&eacute;s, de k&ouml;zvetlen&uuml;l ide nem commitolunk (lsd. k&eacute;s콈bb)</li>
<li><strong>Feature branch</strong>: egy &uacute;j feature fejleszt&eacute;se zajlik  rajta. Ez lehet egy &uacute;j gomb &eacute;s a m&ouml;g&ouml;ttes k&oacute;d, lehet a tesztek &iacute;r&aacute;s&aacute;ra  szolg&aacute;l&oacute; branch, a l&eacute;nyeg, hogy az itt zajl&oacute; v&aacute;ltoz&aacute;sok vagy &uacute;j  funkcionalit&aacute;st adnak a projekthez, vagy annyira jelent콈sen m&oacute;dos&iacute;tanak  egy meglev콈 funkcionalit&aacute;st, ami m&aacute;r nem f&eacute;r bele a hotfix branchekbe.</li>
<li><strong>Hotfix branch</strong>: Ide els콈sorban hibajav&iacute;t&aacute;sok j&ouml;nnek,  amelyek j&ouml;hetnek valamilyen bugtrackerb콈l, vagy ak&aacute;r bemond&aacute;sra is, ez  m&aacute;r egy&eacute;ni metodika k&eacute;rd&eacute;se. A l&eacute;nyeg: ide olyan v&aacute;ltoztat&aacute;s nem  k&uuml;ldhet콈 be, mely nagy m&eacute;rt&eacute;kben v&aacute;ltoztat a funkcionalit&aacute;son.</li>
</ul>


<p>Sz&oacute;val. amikor indul a repo &eacute;letciklusa, akkor l&eacute;trej&ouml;n a master  branch. A kezd콈 commit &aacute;ltal&aacute;ban vagy egy .gitignore f&aacute;jl bek&uuml;ld&eacute;s&eacute;b콈l  &aacute;ll (ez a legt&ouml;bb esetben hasznos, ha megvan), vagy valami hasonl&oacute;,  jelent&eacute;ktelen v&aacute;ltoztat&aacute;sb&oacute;l. Rails projekt eset&eacute;ben &eacute;n azt szoktam  csin&aacute;lni, hogy a legener&aacute;lt &eacute;s kitiszt&iacute;tott projektf&aacute;t k&uuml;ld&ouml;m be, amiben  m&eacute;g semmi nincsen, csak a mapp&aacute;k vannak l&eacute;trehozva, illetve p&aacute;r dolog  felkonfigur&aacute;lva (pl. rspec, cucumber, meg hasonl&oacute;k). Mindenesetre az  alkalmaz&aacute;s itt kezdi meg &eacute;letciklus&aacute;t.</p>

<p>Ez ut&aacute;n r&ouml;gt&ouml;n le is &aacute;gaztatom a develop branchet, majd a develop  branchb콈l az els콈 feature branchet. Fontos, hogy minden feature &eacute;s  hotfix branch a develop &aacute;gb&oacute;l sz&aacute;rmazik.</p>

<p>A feature branchen elkezdem az els콈 dolgokat implement&aacute;lni, majd  amikor az els콈 feature k&eacute;sz (pl. van egy bel&eacute;p콈 fel&uuml;let), akkor azt  r&aacute;mergelem a develop branchre. A mergel&eacute;sek mindig szigor&uacute;an --no-ff  kapcsol&oacute;val t&ouml;rt&eacute;nnek, mert ez biztos&iacute;tja sz&aacute;munkra azt, hogy a k&eacute;s콈bbi  grafikus megjelen&iacute;t&eacute;sekn&eacute;l j&oacute;l elk&uuml;l&ouml;n&iacute;thet콈en l&aacute;tsz&oacute;djon, hogy honn&eacute;t  sz&aacute;rmazik a v&aacute;ltoztat&aacute;s.</p>

<p>P&eacute;lda:</p>

<p><code>
myproject (feature-add-loginform) $ git checkout develop
myproject (develop) $ git merge --no-ff feature-add-loginform
</code></p>

<p>A hotfix branchekkel ugyan&iacute;gy j&aacute;rok el.</p>

<p>Hogy ne legyen  konfliktus merge-l&eacute;skor, a feature/hotfix brancheket id콈nk&eacute;nt rebase-lem  a develop-hoz (csak ahhoz), hogy meglegyenek azok a v&aacute;ltoz&aacute;sok is,  amelyeket m&aacute;s branchen k&ouml;vettem el. Ez ugye pl. webalkalmaz&aacute;sn&aacute;l fontos,  hogy ha a diz&aacute;jnon v&aacute;ltoz&aacute;s van, vagy a js-hez &uacute;j funkcionalit&aacute;s  ker&uuml;lt, akkor azt egy, ett콈l f&uuml;ggelten feature fejleszt&eacute;se sor&aacute;n is  tudjam haszn&aacute;lni (tipikus p&eacute;lda erre az a pont, amikor az &aacute;tmeneti  combobox-okat lev&aacute;ltja egy automatikus kieg&eacute;sz&iacute;t&eacute;s alap&uacute; megold&aacute;s). Ez  egyr&eacute;szt k&eacute;nyelmi okokb&oacute;l fontos, m&aacute;sr&eacute;szt pedig az&eacute;rt, mert ilyenkor  m&aacute;r zajlik a <em>dogfooding</em>, vagyis a saj&aacute;t k&oacute;d felhaszn&aacute;l&oacute;i  szempontb&oacute;l t&ouml;rt&eacute;n콈 tesztel&eacute;se. Volt m&aacute;r, hogy itt j&ouml;ttek el콈 olyan  hib&aacute;k, melyeket sem a tesztek, sem az els콈 kattintgat&aacute;sok nem hoztak ki.</p>

<p>Van n&eacute;h&aacute;ny olyan eset, amikor k&ouml;zvetlen&uuml;l a develop &aacute;gra commitolok. A legf콈bb szempont ilyenkor, hogy ez csak olyan v&aacute;ltoz&aacute;s lehet, ami nagyon kev&eacute;s f&aacute;jlt &eacute;rint, illet콈leg a branchek nagy r&eacute;sz&eacute;nek fontos v&aacute;ltoztat&aacute;s. Ilyen lehet p&eacute;ld&aacute;ul a .gitignore f&aacute;jl felb콈v&iacute;t&eacute;se, ha valaki hirtelen boldog Mac tulajdonos lesz, &eacute;s a Mac f&aacute;jlrendszer csod&aacute;it (.DS_Store) ki szeretn&eacute;nk z&aacute;rni a projektb콈l. De ilyen lehet az is, amikor egy &aacute;ltalunk el&uuml;t&eacute;st jav&iacute;tunk ki egy nyelvi f&aacute;jlban, mert erre pl. felesleges lehet egy &uacute;j branchet sz&uuml;lni. Persze ez a fejleszt콈/fejleszt콈k &aacute;ltal k&ouml;vetett m&oacute;dszertant&oacute;l is er콈sen f&uuml;gghet.
Ilyenkor viszont fontos, hogy minden branch &eacute;rtes&uuml;lj&ouml;n a v&aacute;ltoz&aacute;sokr&oacute;l, &eacute;s rebase-zel maga al&aacute; tegye azokat.</p>

<p>Amikor a projekt el&eacute;rkezett egy <em>milestone</em>-hoz,  akkor t&ouml;rt&eacute;nik a master branchre mergel&eacute;s, k&ouml;zvetlen&uuml;l a develop  branch-r콈l. Ha a projekt olyan, hogy ez sz&uuml;ks&eacute;ges, ilyenkor a master  branchen tagelek is (ez f콈leg az&eacute;rt &eacute;rdekes, mert pl. a GitHub minden  tagelt branch-b콈l l&eacute;trehoz egy let&ouml;lthet콈 forr&aacute;s csomagot, &iacute;gy ezzel  nekem nem kell t&ouml;r콈dn&ouml;m).</p>

<p>A f콈 szempont a master-n&eacute;l, hogy itt  mindig stabil, minden v&aacute;ltoztat&aacute;st&oacute;l mentes k&oacute;d legyen, amely b&aacute;rmikor  b&aacute;rhova deployolhat&oacute;, &eacute;s azonnal m콤k&ouml;d콈k&eacute;pes.</p>

<p>&Eacute;rdekes k&eacute;rd&eacute;s,  hogy mi legyen azokkal a hotfix t&iacute;pus&uacute; v&aacute;ltoztat&aacute;sokkal, amelyek a  master branchez kellene hogy menjenek, hiszen az &eacute;les alkalmaz&aacute;sban van a  hiba, ugynakkor a develop &aacute;gon m&aacute;r mergelve van egy feature, amit nem  sz&iacute;vesen mergeln&eacute;nk r&aacute; a master &aacute;gra. Nos, &eacute;n &aacute;ltal&aacute;ban megpr&oacute;b&aacute;lok a  helyzethez igazodni. El콈sz&ouml;r is, meg kell n&eacute;zni, hogy az adott hiba  el콈j&ouml;tt-e m&aacute;r a develop &aacute;gon, &eacute;s fix&aacute;lva lett-e. Ha nem, akkor ez az  els콈 l&eacute;p&eacute;s, plusz a megfelel콈 tesztesetek legy&aacute;rt&aacute;sa, hogy a  tov&aacute;bbiakban ilyen probl&eacute;ma el콈 ne fordulhasson.
Ha a hiba nem kritikus, a legegyszer콤bb megold&aacute;s a hiba jav&iacute;t&aacute;s&aacute;t a k&ouml;vetkez콈 <em>milestone</em>-ig eltolni. De nyilv&aacute;n vannak kritkus hib&aacute;k is, l&aacute;ssuk mi a teend콈 ezekkel.</p>

<p>A  legegyszer콤bb eset, amikor m&eacute;g nem t&ouml;rt&eacute;nt mergel&eacute;s a develop-ra a  master &aacute;gra t&ouml;rt&eacute;nt mergel&eacute;s &oacute;ta, ilyenkor sim&aacute;n &aacute;t lehet venni a hotfix  branch jav&iacute;t&aacute;s&aacute;t.</p>

<p>M&aacute;s esetekben meg kell n&eacute;zni, hogy a  hotfix &aacute;ltal &eacute;rintett f&aacute;jlok milyen m&eacute;rt&eacute;kben v&aacute;ltoztak a master-hez  k&eacute;pest. Erre a git diff parancs ad lehet콈s&eacute;get. Ha a f&aacute;jl ett콈l a  v&aacute;ltoztat&aacute;st&oacute;l eltekintve nem v&aacute;ltozott, akkor a bek&uuml;ld&ouml;tt commit-nak  veszem a diff-j&eacute;t (git diff HEAD<sup>..HEAD),</sup> majd alkalmazom csak ezt a  jav&iacute;t&aacute;st a master branchre. Ilyenkor a k&ouml;vetkez콈 mergel&eacute;sn&eacute;l figyelni  kell, mert konfliktus l&eacute;phet fel, ezt sajnos egyedileg le kell kezelni.</p>

<p>Egy m&aacute;sik megold&aacute;sa a probl&eacute;m&aacute;nak, hogy mivel a master &aacute;g az gyakorlatilag a develop &aacute;g egy <em>snapshot</em>-ja,  &iacute;gy abb&oacute;l ind&iacute;tom a hotfix branchet, &eacute;s mind a k&eacute;t &aacute;gra visszamergelem.  Ez tal&aacute;n a legegyszer콤bb megold&aacute;sa a probl&eacute;m&aacute;nak - csakhogy  tapasztalatom szerint ez az, ami a legritk&aacute;bban is m콤k&ouml;dik. Ugyanis  nincs &eacute;rtelme &aacute;lmodozni, a master-r콈l ind&iacute;tott hotfix branchek az esetek  nagy r&eacute;sz&eacute;ben nem illeszkednek a develop &aacute;gra, conflict alakul ki, &eacute;s  el&eacute;g sok ny콤g van, mire oda beilleszkedik, plusz ut&aacute;na a master-ra  t&ouml;rt&eacute;n콈 mergel&eacute;skor megint kialakulhat conflict. Mindenesetre van, ahol  ez a megold&aacute;s is m콤k&ouml;dik.</p>

<p>Alternat&iacute;v megold&aacute;s lehet m&eacute;g a  cherry-pick haszn&aacute;lata, mellyel egy darab commit-ot tudunk a develop  branchb콈l &aacute;tvenni a masterre, a mergel&eacute;s kock&aacute;zata n&eacute;lk&uuml;l. Err콈l m&eacute;g  csak hallottam, nincs gyakorlatom vele, hogy milyen sz&aacute;zal&eacute;kban okozhat  conflict-ot, illetve hogy a --no-ff merge k&eacute;pes-e elkezelni az &aacute;tvett  commit-ot. Illetve ez is csak akkor m콤k&ouml;dik, ha nincsenek gy&ouml;keres  v&aacute;ltoz&aacute;sok a develop &aacute;gban erre a f&aacute;jlra n&eacute;zve.</p>

<p>Amit a  commit-okr&oacute;l m&eacute;g &eacute;rdemes elmondani: &eacute;n mindig &uacute;n. topic commit-okat  haszn&aacute;lok. Ez azt jelenti, hogy mindig igyekszem olyan commit-okat  gy&aacute;rtani, amelyek &ouml;n&aacute;ll&oacute;ak, &eacute;s pontosan egy dolgot csin&aacute;ljanak. Teh&aacute;t ha  pl. teszteket &iacute;rok, &eacute;s k&ouml;zben sz&uuml;letnek jav&iacute;t&aacute;sok is, amelyek a tesztek  lefut&aacute;s&aacute;hoz kellenek, nem nyitok mindig &uacute;j hotfix branchet (mert egy  lusta diszn&oacute; vagyok), hanem a tesztek &aacute;g&aacute;ba belerakom a v&aacute;ltoz&aacute;st is.  Mivel a tesztek az appra n&eacute;zve nem jelentenek funkcion&aacute;lis v&aacute;ltoz&aacute;st, a  jav&iacute;t&aacute;s viszont igen, &iacute;gy &eacute;n nem &eacute;rzem azt, hogy ennek kock&aacute;zata lenne.  Ellenben nagyon fontos &uuml;gyelni arra, hogy ilyenkor mindig pontosan  azokat a v&aacute;ltoztat&aacute;sokat k&uuml;ldj&uuml;k be, amelyeket azzal a committ-tal  jav&iacute;tunk. Ha kell, <em>hunk</em> (ez a v&aacute;ltoztat&aacute;sok egys&eacute;ge, a diff  kimenet&eacute;ben egy, h&aacute;rom kukaccal kezd콈d콈 sorral szepar&aacute;lt blokk) szinten  bontom sz&eacute;t a v&aacute;ltoz&aacute;sokat. Erre nagyon j&oacute; lehet콈s&eacute;get ad a git add  parancs -p kapcsol&oacute;ja.
Ennek a megold&aacute;snak a legf콈bb haszna az, hogy  b&aacute;rhol meg lehet bontani a develop branchet, b&aacute;rhol le lehet &aacute;gaztatni r&oacute;la egy &uacute;j branchet, mindig viszonylag konzisztens &aacute;llapotot fogunk kapni.</p>

<p>&Ouml;sszess&eacute;g&eacute;ben teh&aacute;t a legf콈bb alapelvek:</p>

<ul>
<li>A master branchre lehet콈leg csak mergel&eacute;s t&ouml;rt&eacute;njen, ide k&ouml;zvetlen&uuml;l (a kezd콈 commit-t&oacute;l eltekintve) ne k&uuml;ldj&uuml;nk semmit.</li>
<li>A develop branch-en lehet j&aacute;tszani, de &eacute;rdemes figyelni a konzisztenci&aacute;j&aacute;ra</li>
<li>Hotfix branchen a m콤k&ouml;d&eacute;st alapjaiban &eacute;rint콈 v&aacute;ltoztat&aacute;s nem t&ouml;rt&eacute;nhet</li>
<li>Mind a hotfix mind a feature brancheket &eacute;rdemes frissen tartani a develop-hoz k&eacute;pest, hogy ne &eacute;rjenek minket nagy meglepet&eacute;sek</li>
</ul>


<p>V&eacute;lem&eacute;nyeket itt alul lehet &iacute;rni, ahogy id콈m engedi reag&aacute;lni fogok r&aacute;juk.</p>
]]></content>
  </entry>
  
</feed>
