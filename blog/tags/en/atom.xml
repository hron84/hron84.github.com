<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: en | Hron's blog]]></title>
  <link href="http://hron.me/blog/tags/en/atom.xml" rel="self"/>
  <link href="http://hron.me/"/>
  <updated>2013-06-26T11:47:44+02:00</updated>
  <id>http://hron.me/</id>
  <author>
    <name><![CDATA[G치bor Garami]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rename Windows 8 Profile dir]]></title>
    <link href="http://hron.me/blog/2013/04/rename-windows-8-profile-dir/"/>
    <updated>2013-04-18T00:08:00+02:00</updated>
    <id>http://hron.me/blog/2013/04/rename-windows-8-profile-dir</id>
    <content type="html"><![CDATA[<p>So, I ran into a weird situation: when I installed Windows, I used Live account to create my user.
In preview version of Windows 8 it created a profile dir based on the user part of e-mail address
of the Live account, so from hrgy@live.com it created an user hrgy with same profile dir. However,
the final version is changed it to create account based on your first name, it was "G치bor" in this
case. Notice the accented second letter.</p>

<p>The problem with folders containing non-ASCII char in its name is obvious: not all program can handle
it correctly. It has a displaying problems in some apps, and some apps cannot create their files in
this profile.</p>

<p>The fix was not so easy but I now describe required steps.</p>

<p>First if you do not have an another administrator user than you, then you have to create it. Windows 8
does not allow to log into the built-in Administrator account anymore, so you have to create one in
Control Panel. It's pretty straighforward and net contains a bunch of howtos for it, so I skip describing
this step.</p>

<p>Now, log out from your account, and log in into the new one.</p>

<p>Start <code>regedit</code> and navigate to <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList</code></p>

<p>In the subkeys (subfolders) find one what displays your old dirname in <code>ProfileImagePath</code> attribute. In my
case the value was <code>C:\Users\G치bor</code>. Right click, edit and replace last part of the path to what you want to use.</p>

<p><strong>Important:</strong> Even if world collapsing, <strong>do not log in into your own account (what being modified)</strong>
until you finish these steps!</p>

<p>Then, you have to reboot into Safe mode. The easiest way is press <code>Shift + F8</code> during boot. If you
seeing the Windows splash displaying in "wrong" resolution then you are in Safe mode.</p>

<p><strong>Important:</strong> you have to log in into the newly created admin account, <em>not</em> into your own one!</p>

<p>Then you have to rename your profile folder. Start a command prompt in Safe mode, and type following:</p>

<pre><code>cd C:\Users
move old_name new_name
</code></pre>

<p>The <code>old_name</code> is the old name of your profile directory, the <code>new_name</code> is what you specified in RegEdit. In
my case it was:</p>

<pre><code>cd C:\Users
move G치bor hron
</code></pre>

<p>Now you are done! If you striclty follwed this tutorial, then if you reboot and log in into your account, you do not see
any change, except the %USERPROFILE% environment variable carries the new name.</p>

<p><strong>Note:</strong> I saw only one bug: iCloud Photo stream stored the full path of my Pictures folder in its database and I had to relocate it.
It's a bug in iCloud, not a Windows problem.</p>

<p><em>Disclaimer: This tutorial is tested by me but I do not guarantee anything. Take a backup from your important data before start doing
this. I am not responsible if your data lose, you cannot login anymore or your kitten vanishes.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails pre-commit hook]]></title>
    <link href="http://hron.me/blog/2013/02/rails-pre-commit-hook/"/>
    <updated>2013-02-12T23:23:00+01:00</updated>
    <id>http://hron.me/blog/2013/02/rails-pre-commit-hook</id>
    <content type="html"><![CDATA[<p>I just created this small hook for my Rails projects. It helps me to make my codebase clean.</p>

<p><div><script src='https://gist.github.com/4774014.js?file=git-pre-commit-hook.rb'></script>
<noscript><pre><code>#!/usr/bin/env ruby

require 'erb'
require 'yaml'
require 'pp'

lines = %x{git diff-index --cached --name-only HEAD}.split(/[\r\n]+/)

ENV['RAILS_ENV'] = 'test'

lines.each do |file|
  if File.exists?(file) and file =~ /\.(rb|rake|god)$/
    print &quot;[SYNTAX] #{file} - &quot;
    ret = system(&quot;ruby -c '#{file}'&quot;)
    exit 1 unless ret

    if file =~ /_test\.rb$/
      print &quot;[UNIT  ] #{file} - &quot;
      unitcmd = &quot;ruby -Ilib:test #{file}&quot;
      unitcmd = &quot;bundle exec #{unitcmd}&quot; if File.exists?('Gemfile')
      ret = system(unitcmd)
      exit 1 unless ret
    end

    if file =~ /_spec\.rb$/
      print &quot;[SPEC  ] #{file} - &quot;
      rspeccmd = &quot;rspec #{file}&quot;
      rspeccmd = &quot;bundle exec #{rspeccmd}&quot; if File.exists?('Gemfile')
      ret = system(rspeccmd)
      exit 1 unless ret
    end
  end

  if File.exists?(file) and File.basename(file) =~ /^(Capfile|Gemfile|Guardfile|Rakefile|config.ru)$/
    print &quot;[SYNTAX] #{file} - &quot;
    ret = system(&quot;ruby -c '#{file}'&quot;)
    exit 1 unless ret
  end

  if File.exists?(file) and file =~ /\.feature$/
    print &quot;[ (::) ] #{file} - &quot;
    ENV['CUCUMBER_FORMAT'] = 'progress'
    cuccmd = &quot;cucumber #{file}&quot;
    cuccmd = &quot;bundle exec #{cuccmd}&quot; if File.exists?('Gemfile')
    ret = system(cuccmd)
    exit 1 unless ret
  end

  if File.exists?(file) and file =~ /\.(yml|yaml)$/
    print &quot;[SYNTAX] #{file} - &quot;
    begin
      # Load with erb to avoid problems with cucumber's yml
      erb = ERB.new(IO.read(file)).result(binding)
      yaml = YAML.load(erb)
      puts &quot;Syntax OK&quot;
    rescue SyntaxError =&gt; ex
      puts ex.message
      exit 1
    rescue ArgumentError =&gt; ex
      puts ex.message
      exit 1
    end
  end
end
</code></pre></noscript></div>
</p>

<p>You can clone it at <a href="https://gist.github.com/hron84/4774014">Gist</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gitiles Install Howto]]></title>
    <link href="http://hron.me/blog/2013/01/gitiles-install-howto/"/>
    <updated>2013-01-30T17:12:00+01:00</updated>
    <id>http://hron.me/blog/2013/01/gitiles-install-howto</id>
    <content type="html"><![CDATA[<p>I sucked a bit with <a href="https://code.google.com/p/gitiles/">Gitiles</a>, Gerrit's Gitweb implementation, because this project lacks an INSTALL file.</p>

<p>So, basically you have to do following:</p>

<ul>
<li><p>First, check out of the source:</p>

<p> <code>git clone https://gerrit.googlesource.com/gitiles</code></p></li>
<li><p>After you cloned the source, compile it with <a href="http://maven.apache.org/">Maven</a>:</p>

<p> <code>mvn package -Dmaven.test.skip=true</code></p></li>
</ul>


<p>  Now, you got <strong>gitiles-war-1.0-SNAPSHOT.war</strong> in gitiles-war/target folder. Deploy it under your application server, in this case I put it to Jetty's webapps folder.</p>

<ul>
<li>Tricky part is coming: you will faced with an error message, what says some configuration options are missing. This is because you didn't created any configuration file yet. By default, webapp searches its configuration in the webapp root folder, but - because jetty explodes this folder every restart, I decided to put it to some more persistent place. I am do not run any other thing under this Jetty than Gerrit and Gitiles, so I created the gitiles.config under Jetty's etc folder:</li>
</ul>


<p>```text gitiles.config
[gitiles]</p>

<pre><code># Repositories placed here
basePath = /srv/git/repositories
# Do not check they are exported
exportAll = true
# This URL will be displayed as clone URL. DO NOT FORGET TRAILING SLASH!
baseGitUrl = ssh://cr.hron.me:29418/
# Title of site (doh)
siteTitle  = Gitiles - kingmax.hron.me:/srv/git/repositories
# I dunno why, but it is have to be configured.
canonicalHostName = kingmax.hron.me
</code></pre>

<p>```</p>

<ul>
<li>The config file above is cool, but Gitiles still crying... yeah, because you have to tell where it should find that. To do this, you must export a System property <strong>com.google.gitiles.configPath</strong>. I was <em>very</em> lazy, so I edited jetty.xml and before last closing tag I pasted this:</li>
</ul>


<p>```xml jetty.xml</p>

<pre><code>&lt;Call class="java.lang.System" name="setProperty"&gt;
    &lt;Arg&gt;com.google.gitiles.configPath&lt;/Arg&gt;
    &lt;Arg&gt;&lt;SystemProperty name="jetty.home" default="." /&gt;/etc/gitiles.config&lt;/Arg&gt;
&lt;/Call&gt;
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Logging with Logstash]]></title>
    <link href="http://hron.me/blog/2012/10/logging-with-logstash/"/>
    <updated>2012-10-27T22:33:00+02:00</updated>
    <id>http://hron.me/blog/2012/10/logging-with-logstash</id>
    <content type="html"><![CDATA[<p>In these days I started looking up for an opensource, easy-to-use central logging system.
I read a lot of articles on the internet, and I found two good solution,
<a href="http://www.graylog2.org">Graylog2</a> and <a href="http://logstash.net/">LogStash</a>. Both system can
operate as syslog server and store our logs in database. I tried both system, and I
experienced both have small problems - but some of these problems are different.</p>

<h2>Graylog2</h2>

<p>Graylog has a very good-looking interface and a relative easy configuration file. It has
a lot of parameters, but the default configuraiton file is well-documented and easy to read.</p>

<p>Graylog uses a MongoDB for store some small stuffs and ElasticSearch for store and search logs.
The main advantage of this solution is the separated web interface. It can be installed anywhere,
it just need a some small configurations to connect to same ES/Mongo instances as Graylog server uses.</p>

<p>The web ui makes easy to search and filter logs, backlist some entries, and create a "channels" what is
a named filter setting, where you can follow what happening in a simple context.</p>

<p>But as I started use web interface and the server itself in everyday tasks, I found two problems:</p>

<ul>
<li>Web interface is does not make easy to write filters, because nor the interface, nor the documentation
not describe how filters will be matched against messages. Because these filters are simple regular
expressions, it is needed to know how to search some specific things. I sucked with it a lot of time
until I found a method to find something. It is need a lot of improvement.</li>
<li>Graylog seems does not take care about its input. After a week I found logging is stopped working. After
some investigation, I discovered the ElasticSearch eaten a lot of resources and generating a huge log.
After reading log I found the ElasticSearch is broken on some invalid characters in index files. I
tried to restart ES server and leave to recover itself for a hour but no luck, it stuck in recovering state.
Because I am not know well ES and graylog I started ask Google about these problems, but I did not find a
good solution for me. So I decided to move on from Graylog.</li>
</ul>


<h2>LogStash</h2>

<p>LogStash is a more robust logging solution. It is similar as syslog-ng but it does not restrict itself to working
as Syslog server (with other words: get infos from input like syslog server) but it can chew anything what is a text
stuff. It can use a lot of things as a log source, e.g.:</p>

<ul>
<li>Syslog server (it can act as syslog server, but see below)</li>
<li>Plain file</li>
<li>Raw TCP/UDP socket</li>
<li>Output of any executable</li>
<li>IRC/Jabber channels</li>
<li>Twitter</li>
<li>Stdin</li>
<li>Windows Eventlog</li>
<li>and so on...</li>
</ul>


<p>And it has a numerous output format too. What is important for me is it can use ElasticSearch and some No-SQL
databases as log-storing backend.</p>

<p>It has a built-in web interface for searching in log records, but <a href="https://github.com/rashidkpc/Kibana/">Kibana</a>
is a little better Web interface to search against ElasticSearch, it makes searching/filtering easier.</p>

<p>My current configuration is very easy:</p>

<ul>
<li>There is a central syslog server, provided by LogStash</li>
<li>All my server is logging here via RSyslog (default syslog server of Debian Linux)</li>
<li>LogStash is configured to store log messages in ElasticSearch after some parsing</li>
</ul>


<p>Basically, I followed the <a href="http://cookbook.logstash.net/recipes/syslog-pri/">official recipe</a> for this setup except
one thing: somehow I couldn't get working the date parser in the way what recipe says. So I tricked it out.</p>

<p>First, I created an Rsyslog config part, what I uploaded to /etc/rsyslog.d on every server:</p>

<p><code>text /etc/rsyslog.d/to-logstash.conf
$template LOGSTASH,"&lt;%PRI%&gt;%timegenerated:::date-rfc3164-buggyday% %HOSTNAME% %APP-NAME%: %msg:::drop-last-lf%\n"
$ActionForwardDefaultTemplate LOGSTASH
*.*   @1.2.3.4:514
</code></p>

<p>Note the <code>%timegenerated:::date-rfc3164-buggyday%</code> directive. The documentation of Rsyslog says it is basically
pads a day number with zero if it is smaller than 10. It is introduced to emulate a syslog-ng 'bug'.</p>

<p>After it I created a following configuration for logstash:</p>

<p>```text LogStash configuration
input {
  tcp {</p>

<pre><code>port =&gt; 514
type =&gt; syslog
</code></pre>

<p>  }</p>

<p>  udp {</p>

<pre><code>port =&gt; 514
type =&gt; syslog
</code></pre>

<p>  }
}</p>

<p>filter {
  grok {</p>

<pre><code>  type =&gt; "syslog"
  pattern =&gt; [ "&lt;%{POSINT:syslog_pri}&gt;%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{PROG:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" ]
  add_field =&gt; [ "received_at", "%{@timestamp}" ]
  add_field =&gt; [ "received_from", "%{@source_host}" ]
</code></pre>

<p>  }
  syslog_pri {</p>

<pre><code>  type =&gt; "syslog"
</code></pre>

<p>  }</p>

<p>  date {</p>

<pre><code>  type =&gt; "syslog"
</code></pre>

<p>  #    syslog_timestamp => [ "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]</p>

<pre><code>  syslog_timestamp =&gt; [ "MMM dd HH:mm:ss" ]
</code></pre>

<p>  }</p>

<p>  mutate {</p>

<pre><code>  type =&gt; "syslog"
  exclude_tags =&gt; "_grokparsefailure"
  replace =&gt; [ "@source_host", "%{syslog_hostname}" ]
  replace =&gt; [ "@message", "%{syslog_message}" ]
</code></pre>

<p>  }
  mutate {</p>

<pre><code>  type =&gt; "syslog"
  remove =&gt; [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
</code></pre>

<p>  }
}</p>

<p>output {
  elasticsearch {</p>

<pre><code>index =&gt; "syslog-%{+YYYY.MM.dd}"
embedded =&gt; false
</code></pre>

<p>  }</p>

<p>  #stdout { debug => true debug_format => json }
}</p>

<h1>vim: ts=2 sw=2 et</h1>

<p>```</p>

<p>Note the commented out date mapping. This is what original recipe says but I always got an exception
related to parser and DateFormat what complaining about invalid data in the date. With buggyday hack
on Rsyslog side I made dates 2-digit long, so it will always be parsed, I hope. It will reveals at least
Nov 1.</p>

<p>The last output stuff is just for debugging, it displays the parsed object in JSON format, this is a way
how can you check your all filter working correctly.</p>

<p>I sucked with parsing the message because my old rsyslog template has a typo and I could not imagine, what
failing.
After some digging, I found jls-grok RubyGem is contains a same parser what LogStash uses, so you can
check your filters via IRB. Just make sure you using 1.9.3 ruby, because Ruby 1.8 throws a SyntaxError
when you try <code>require 'grok-pure'</code> (what is recommended, because the simple 'grok' is searching a C lib).</p>

<p>```ruby Simple example for testing Grok filter
require 'rubygems'
require 'grok-pure'</p>

<p>grok = Grok.new</p>

<h1>I extracted patterns dir from jar package</h1>

<p>Dir.glob('patterns/*').each { |f| grok.add_patterns_from_file f }
s="Oct 27 19:01:09"
pattern = '%{SYSLOGTIMESTAMP:syslog_timestamp}'
grok.compile(pattern)
p grok.match(s).match.to_a # => ["Oct 27 19:01:09", "Oct 27 19:01:09", "Oct", "27", "19:01:09", "19", "01", "09"]
```</p>

<p>You can use exactly same pattern as you use in LogStash configuration file.</p>

<p><strong>Note:</strong> If you see a <code>_grokparsefailure</code> tag in your tag list, then you do something wrong. This means
the filter what you using in first filter does not match correctly on your syslog message from Rsyslog.
The good news is LogStash stop evaluating filters on the first failing in debug mode, and leave @message
untouched (if you see the second mutate from end, you can see we replace @message with the content of
syslog_message, and remove unneccessary fields in the last mutate filter). If somehow it falls through
the grok filter and removes the original (raw) message, then simply comment out the last two filter by
prefixing lines with a hashmark.</p>

<p>As you see in the config  use an external ES server, not the embedded one, because I currently have a
working and configured ES instance, and I would like to use that. No other reason to not use embedded
ES server: if you currently not have an ES instance, then simply use what shipped with LogStash.</p>

<p>The embedded web interface of LogStash is a bit tricky thing, because I could not start as documentation says
via the java command, I had to extract the jar file and run standalone to check its user interface.
Don't expect something cool: It is just a textfield with a button and contains a link with a basic
query string what filters messages generated today.</p>

<h2>Conclusion</h2>

<p>I think Graylog is a great logging solution, but it needs some love for prevent crashing ES server with
invalid characters in the stored data. But the web interface and easy configuration makes it very,
really very lovely.</p>

<p>LogStash is a good solution if you want to handle multiple log sources or you want to validate/manipulate
your log messages or you want to distribute logs to multiple destinations. I think LogStash is a little
overkill if you just want a central syslog server, however - this is working as expected. So I took my
two cent on LogStash and not on Graylog - even if I would like to prefer Graylog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brno - A very different place]]></title>
    <link href="http://hron.me/blog/2012/03/brno-a-very-different-place/"/>
    <updated>2012-03-15T03:10:00+01:00</updated>
    <id>http://hron.me/blog/2012/03/brno-a-very-different-place</id>
    <content type="html"><![CDATA[<p>I am arrived from Brno. This is a very beautiful town and a very good place. If I need to compare with Budapest, the whole Brno looks like the centre of Budapest but not at now but in 30-40 years ago.</p>

<p>The mass transit is a surprise. Before I started I read the main vehicle is a tram but I didn't expect how it looks like in the reality. If you take a look for the city you understand: if there is a wider road, they place tramway and expand an existing line to it or start a new line. There are some buses but as I think they goes where the terrain is too step and the tram cannot climb up on it. During the two days while I was in the town, I saw only one bus. Not one bus line but one vehicle (this wear number 84 btw :-) ).</p>

<p>This system is interesting from other aspects too. The town is splitted to zones (z&oacute;ny) and the tickets are contains some time for travel and permission to cross some zone-borders. The most expensive ticket is valid in 5 zone and few hours. But, if you want to buy some tickets, especially if you want to buy them from a small shops (all newspaper-stand sells tickets, and all place where you see "J&Iacute;ZDENKA"), you need ask it by it's price. I choosen this even if there is a ticket machine in every stop, because as I saw most machines do not know about other languages but Czech. And the buttons are not titled except the ticket selection button. So, there wasn't a help to handle them if you do not know the language (I think there are some machines what can say in foreign languages and there are some machines what titled correctly, but I didn't meet with them). I used machines to write down the price of the tickets, to ask them correctly from the sellers (ticket is a fixed-price stuff, so do not matter where you buy it).</p>

<p>I choosen the Hotel Brno because it offered a cheapest room in booking.com (where is a correct description about places and the services). The hotel had a very good transport possibilities and placed at a silent, nice place. The room wasn't too big but for two people when they woulnd't like stay in the room for a whole day is absolute correct. Because I was alone this was more than enough for me.</p>

<p>The terrain under the city is quite hilly. I never saw a too fat people under the two days and I think I understand why :-)</p>

<p>As @kozka told me the office of RedHat is placed near the universities. Currently RedHat occupies a whole building but the next building is under construction so they growing fast. As I saw some levels are equipped recently (I smelled the fresh painting) so they are growing really fast.</p>

<p>The people are very nice and they help you even if you do not understand what they tell you.</p>

<p>The other thing what surprised me is the moral on the roads. If you stop at the pedestrian crossing, the cars are stops even if there is a rush hour. It seems like a reflex. I will need condition me back to the hungarian moral to not start crossing the road because the cars are not stop every time for you.</p>

<p>Btw the interview was good I think I passed on it, but I didn't got a reply from RH, but they informed me I will got a result today. And I collected two business card too :-)</p>
]]></content>
  </entry>
  
</feed>
