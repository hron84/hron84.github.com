<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hron's blog]]></title>
  <link href="http://hron.me/atom.xml" rel="self"/>
  <link href="http://hron.me/"/>
  <updated>2013-06-26T11:47:44+02:00</updated>
  <id>http://hron.me/</id>
  <author>
    <name><![CDATA[Gábor Garami]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gento - Para vagy nem para]]></title>
    <link href="http://hron.me/blog/2013/06/gento-para-vagy-nem-para/"/>
    <updated>2013-06-25T19:48:00+02:00</updated>
    <id>http://hron.me/blog/2013/06/gento-para-vagy-nem-para</id>
    <content type="html"><![CDATA[<p>Twitteren volt egy ilyen üzenetváltás:</p>

<blockquote><p>@hron84: Kiprobaltam megint a #gentoo -t. Mar elfelejtettem, hogy mennyit kell
varni egy firefoxra. [&#8230;]</p>

<p>@team4world: @hron84 lehet én is kipróbálom. Mennyire parás egy frissítés?</p>

<p>@hron84: @team4world Ha mindenbol csak stabil verziot hasznalsz, akkor abszolut
nem para. Ha elkezdesz a testing arch-csal ismerkedni, figyelni kell.</p>

<p>@hron84: @team4world Lehet este osszeszedek egy cikket az ajanlott konfigrol.</p>

<p>@team4world: @hron84 az nagyon jó lenne!</p></blockquote>

<p>Itt tartunk tehát most. Nem aznap este lett ugyan összeszedve, de hát az &#8220;aznap&#8221;
szó nem is szerepelt a twittben :-). Na jó, evezzünk komolyabb vizekre.</p>

<p>Előrebocsátom, hogy ez nem egy Gentoo tutorial lesz, nem fogok minden fogalmat
elmagyarázni, csak a legszükségesebbeket. Ha nem értesz valamit, ott a <a href="ihttp://www.gentoo.org/doc/en/handbook/">Gentoo
Handbook</a>, ott a
<a href="http://wiki.gentoo.org/">Gentoo Wiki</a>, olvass utána.  Ennek elsősorban
terjedelmi okai vannak, a Gentoo-ról szóló irományokkal egy könyvtárat meg lehet
tölteni (sőt, bizonyos értelemben ez már
<a href="http://www.gentoo.org/doc/index.xml">megtörtént</a>), ez meg itt csak egy blog.</p>

<h2>Para vagy nem para?</h2>

<p>Nehéz kérdés, mert mindenkinek mást jelent a &#8220;parás&#8221;. Én, aki cirka 3-3.5 évet
tuti lehúzott Gentoo desktop mellett, mást érzek parásnak, mint az, aki most
adja ki élete első emerge parancsát. Szóval az első körös válaszom kicsit
sántít, mert valójában nincs egzakt válasz a dologra.</p>

<p>Van, akinek para az, hogy egy Firefoxra - géptől függően - fél és két óra között
kell várni. Nekem nem volt az, mert én ezzel már tisztában voltam, így a
telepítés során előbb a Google Chrome-t tettem fel, és csak részben azért,
mert az elmúlt két évben ez vált az elsődleges böngészőmmé, jobban belejátszott,
hogy ez csak bináris formában van jelen (elérhető a Chromium is, forrásból
fordul, de ezt még binárisan se szeretem, néha ugyanis bugosabb, mint a Chrome,
nem tudom, miért).</p>

<p>Van, akinek para az, hogy több, ún. <strong>slot</strong> van, ami annyit takar, hogy egy
adott nevű csomagból többféle verzió is lehet a gépünkön (gondoljunk a PHP-re,
az 5.3 és az 5.4 az két különböző PHP-nak számít), és ha nem az alapértelmezett
slot verziót szeretnénk, akkor célzottan kell telepíteni és maszkolni azt, amit
nem szeretnénk (esetünkben én nem vagyok olyan nagy PHP 5.4 fan, akkor sem, ha a
hardcore PHP-sok ezért megszólnak, szóval én hanyagolom azt a verziót).</p>

<p>Szóval hogy mi para és mi nem, az egyénfüggő. Nagyon fontos dolog, hogy a Gentoo
egy teljesen más hozzáállást igényel, mint a legtöbb disztribúció. Ez elsősorban
arra irányul, hogy pontosan tisztában kell lenned azzal, hogy mit és hogyan
szeretnéd, valamint nagyon oda kell figyelned arra, hogy mit csinálsz. Ha
valamit nem értesz, nem lehet elbliccelni, utána kell olvasni, át kell gondolni,
sokszor. De cserébe egy végletekig testreszabható rendszert kapsz, és ez nagyon
sokszor megéri.</p>

<h2>Ajánlott hardverek</h2>

<p>Töprengtem, hogy ne az legyen az alcím, hogy &#8220;Milyen hardvert ne vegyek&#8221;, de
aztán arra gondoltam, hogy nem leszek ennyire destruktív.</p>

<p>Szóval, Gentoo esetében legyen egy jó procid, lehetőleg sok maggal,
HyperThreading kiemelten jó, ha van és be is van kapcsolva. Minél több
processzort listáz a <code>/proc/cpuinfo</code>, annál hamarább végzel a telepítéssel.</p>

<p>Legyen továbbá sok RAM-od. 2G RAM alatt eszünkbe se jusson Gentoo-t telepíteni!
Tapasztalataim szerint 3-4G RAM az, amivel már tűrhető (pontosabban kivárható)
idő alatt összeáll valami rendszernek már nevezhető tárgy.</p>

<p>A winyó kiemelten fontos. Nem csak a tárhely (a gyökérre lehet nyugodtan 30G-t
szánni, meghálálja a rendszer, a home legyen külön partíció) fontos, de a
merevlemez pörgési sebessége is. Ha 5400 RPM-es merevlemezünk van, ne egy bödön,
hanem két bödön kávét készítsünk be. Ezt az infót szokás elrejteni a merevlemez
címkéjén, vagy akár le is hagyni, így telepítés előtt mindenképp nézzünk el a
Google felé, a merevlemez típusszámával, az első három találat a gyártó
datasheetjére fog vinni, ha nem, tegyük hozzá, hogy &#8216;speed&#8217;. SSD felhasználók
itt komoly előnnyel indulnak.</p>

<h2>Mit rakjak fel?</h2>

<p>Kezdőknél ez nagyon gyakori kérdés, és a kellemetlen élmények nagy része az ezen
kérdésre adott rossz válaszokból adódik. Tisztában kell lennünk azzal, hogy a
Gentoo egy <em>forrásalapú</em> rendszer, vagyis a <em>bináris</em> rendszerekkel ellentétben
itt a legtöbb csomag a <strong>gépünkön, forrásból fordul</strong>, legyen szó a GCC-ről vagy
a Gitről. Van néhány olyan csomag, ami elérhető binárisban is, vagy épp
kizárólag abban mert a gyártó nem tette elérhetővé a szoftver forrását. Ez
utóbbira példa az Adobe Flash playere, az előbbire pedig a LibreOffice, mert
erről köztudott, hogy még erős gépen is fél nap egy fordítás.</p>

<p>Én az alábbi metodikát követem:</p>

<ul>
<li>Először összerakok egy alaprendszert. Legyen konzolom, legyen egy friss és
jól mőködő kernelem, Grub (1-es mert én azt szeretem), hálózatom, meg más
effélék, egyszóval álljon meg a saját lábán a rendszer, ne kelljen hozzá
LiveCD. Szerencsés esetben ez olyan 2 óra alatt abszolválható feladat,
kezdőknek se sokkal több.</li>
<li>Következő lépés: Legyen egy alap grafikus felületem. Itt általában már
felteszem a kérdést: most rögtön akarok a rendszerrel dolgozni, vagy van időm
hogy mindent klappoljon? Ha az első a válasz, akkor mindenféle preferenciát
figyelmen kívül hagyva, komolyabb USE flag állítgatások nélkül felszórok egy
IceWM-et, egy Google Chrome-t, meg valami terminált, mondjuk XTerm-et. Ez
<strong>nem</strong> eredményez összkomfortos rendszert, ennek csak az a célja, hogy
miközben a ház épül-szépül, legyen hol dolgozni meg aludni. Amennyiben
ráérek, átugrom ezt a pontot.</li>
<li><p>Ezután rá lehet térni a preferenciáknak megfelelő rendszer telepítésére.
Először mindig az USE flag állítgatásokat kezdem el. Mivel én GNOME-fan
vagyok, így a make.conf -ba mindenképpen bekerülnek a <code>gnome</code>, <code>gtk</code>, <code>avahi</code>
flagek, ezen felül PulseAudio-ellenes vagyok, így a <code>alsa</code> és <code>-pulseaudio</code>
is. Elég jó alapbeállításokat lehet szerezni az <code>eseletc profile list</code>
kimenete alapján kiadott <code>eselect profile set &lt;szám&gt;</code> paranccsal is, ahol a
<code>&lt;szám&gt;</code> a lista elemei mellett látható számot jelenti, kockás zárójelek
nélkül.
Sorrendileg először mindig a konzolos cuccokat szoktam felszórni, nem csak
azért, mert ezek hamar fordulnak, hanem mert ezeket utána már tudom
használni, amíg a grafikus cuccok születnek. A teljesség igénye nélkül egy
kis lista:</p>

<ul>
<li>flaggie: hasznos cucc a csomagonkénti USE flag es keyword állításra. Ezen
felül tud licenceket is elfogadni, de én általában minden licencre
rábólintok, mert így könnyebb az életem. A /usr/portage/licenses alatt
lehet kultúrálódni egyébként.</li>
<li>portage-utils: újabban része a stage3 alaprendszernek. Hasznos kis utilityk
győjteménye, a <code>q --help</code> parancs nagyon szolgálatkészen mutatja be őket
egyenként.</li>
<li>eix: A Google helyi megfelelője :-). Alapvetően csomagkeresgélésre
használható, részletes információkkal szolgál arról, hogy milyen csomagok
érhetőek el a rendszerben. A kézikönyvekben ajánlott <code>emerge --sync</code>
parancs helyett (ha már fenn van az eix<code>mindig az</code>eix-sync` parancsot
használjuk, mert ez frissíti az eix adatbázisát is a sync végén, plusz ad
egy kedves listát az új/frissült/törölt csomagokról. Ezt gondosan
tanulmányozzuk.</li>
<li>gentoolkit: Szintén hasznos csomagkezelő gyűjtemény. Én egy parancsot
használok belőle permanensen, a többit csak szükség esetén, ez pedig a
glsa-check. Mind desktopon, mind pedig szerveren kiemelten fontosnak tartom
ugyanis, hogy ne legyen fenn olyan csomag, melyben ismert sebezhetőség van.
Egy idő után hajlamos az ember rászokni arra, hogy ha egy frissebb verzió
bugos lenne egy adott csomagból, akkor a bugos verziót és afelettieket
kimaszkolja, majd az egészet elfelejtse. Ilyenkor jó a glsa-check, ami
figyelmeztet, hogy bizony-bizony abba a verzióba már találtak egy komoly
bugot, és talán érdemes lehet megfontolni a frissítést.</li>
<li>eselect és pluginjei: maga az eselect szintén az alaprendszer része, a
pluginjei pedig a legtöbb esetben a hozzátartozó csomaggal kerülnek fel. Az
update-alternatives-nek felel meg, csak kissé okosabb és színesebb. Érdemes
ismerkedni vele.</li>
<li>bash-completion: akinél a Tab billentyűről már lekopott a festék (mint
nálam :-) ), annak kötelező elem. Konfigurőlni eselect-tel lehet, hogy mely
kiegészítések legyenek engedélyezve. Figyeljünk, hogy alapértelmezés
szerint per-user állítgatjuk ezeket, globális engedélyezéshez használjuk a
<code>--global</code> kapcsolót.</li>
<li>mc: kell-e bemutatni a Midnight Commandert? Szerintem nem. Figyeljünk, hogy
kapjon <code>samba</code> és <code>sftp</code> flageket valahonnan, különben félkarú óriás. A
<code>slang</code> flag pedig a szép magyar felülethez segít hozzá minket.</li>
<li>nano: Ha mcedit pártiak vagyunk, akkor nem érdekes, ha vim/emacs pártiak,
nézzünk rá erre a kis editorra, amíg kedvencünk fordul. Syntax coloring,
keresés, vágólap&#8230; és egyszerő használat. Része az alaprenszernek.</li>
<li>sudo: sajnos nem része az alaprendszernek ez a kötelező kis program. Tegyük
fel, alig van függősége.</li>
<li>layman: a külső csomagtárólók kezelője. Okosan paraméterezve rögtön
feldobja a 3 legnépszerűbb verziókezelt is, függőségként.</li>
</ul>


<p>Ezután jön a grafikus rendszer. GNOME pártiként én a gnome-light csomaggal
indítok, ez egy metacsomag, semmit nem telepít, csak függőségei vannak, mint
egy rossz drogosnak. Viszont mindent felrak, ami egy alap GNOME desktophoz
kell. Emellé érdemes beütemezni a xorg-x11 csomagot is, ami a grafikus
felület megjelenítését szolgáló X11 szervert rakja fel.
Figyeljünk arra, hogy ha sehol másutt nem is, de itt mindenképpen használjuk
az emerge <code>--ask</code> vagy <code>--pretend</code> kapcsolóinak egyikét,
hogy kiírja, mit telepítene. Azért fontos, mert első körben be
kell lőni a videókártya és a beviteli eszközök típusát a make.conf -ban, és
itt egész jó tippeket kapunk a lehetséges értékekről a xorg-drivers sorában.
Ne feledjük, hogy a mínusz jel mindig kivonást jelöl, vagyis az nincs
kiválasztva. Beviteli eszköznek általában a <code>keyboard</code>-ot, a <code>mouse</code>-t és az
<code>evdev</code>-et szoktam választani (ez utóbbi mindenképp kell), tapipad mániákusok
ne feledjék a <code>synaptics</code>-ot is kérni az eladótól a meglepetések elkerülése
okán.
Kell egy jó login manager is, GNOME esetében ez a GDN, bár én most LightDM-et
raktam fel, csak úgy próbából. Nem rossz, de a GDM jobb.</p>

<p>Most jövök rá, hogy KDE  fanok is vannak itt. Nekik rossz hírem van: nem
nagyon tudok mit ajánlani, mert ritkán vetemedek KDE használatra, mostanság
ez a
gyakoriság a sohához tendál. Asszem a kdebase-startkde csomag visz el az
alaprendszerig, kdm csomag van, és a kde-l10n csomagtól lehet várni
lokalizációt. A xorg-x11 pedig itt is kötelező elem.</p>

<p>Figyeljünk arra, hogy amennyiben nem KDE desktop a cél, első két körben
tiltsuk a <code>qt4</code> USE flaget, mert ez magával hozná a Qt grafikus könyvtár
telepítését, ami elég hosszadalmas móka. KDE-s álmok esetében viszont épp
ellenkezőleg: engedélyezzük, méghozzá minél koraibb szakaszban, a KDE-s
cuccok nagy része le fogja fikázni a rendszerünket, ha nincs mindenütt Qt
támogatás.</p>

<p>Grafikus cuccokra ajánlatok:</p>

<ul>
<li>Porthole: Gtk alapú csomagkezelő, Debianon Synaptic-nak hívnak egy ehhez
nagyon hasonló cuccot. Az USE flag kezelőjének használatát lehetőleg
mellőzzük, a Ctrl+R megnyomására feljövő parancssorból használjuk a
flaggie-t. Igy nem érnek meglepetések egy frissítésnél. KDE rendszerhez a
Kuroo jobb, de a Kuroo4 fejlesztése még igen aktívan tart, nem tudom,
mennyire stabil a cucc. USE flageket itt is inkább flaggie-vel, bár a régi
Kuroo (a KDE 3-as) rendesen kezelte a package.use fájlt.</li>
<li>Gitg: Roppant hasznos cucc, ha Git-tel dolgozunk. Soronként stage-elhető
commit és history tallózó segíti a munkát.</li>
<li>NetworkManager: furcsa, de nem alapértelmezett a telepítése. Desktopon,
wifi-mentes környezetben nincs is rá szükség, laptopon viszont
kötelező elem, a hálózati konfigokat másképp nem fogjuk tudni kényelmesen
managelni. A hasonló nevő (csak végig kisbetős) USE flag beállítása
szintén fontos. Régebben volt valami PolicyKites para, de úgy tudom, az
már megoldódott, mert más disztróban is volt, és azokban már meg van
oldva.</li>
</ul>
</li>
</ul>


<h2>Frissítés</h2>

<p>Ide jön az, amit első körben válaszoltam a kérdezőnek: ha mindig csak stabil
cuccokkal dolgozol, akkor nincs para, a Gentoo fejlesztőknél elég szigorú a QA,
ha nincs elég community visszajelzés a csomagről, akkor nem is lesz stabil.
Viszont amíg van komoly hiba vele, szintén nem lesz az. Vagyis stabil csomag
általában csak stabil dologból lesz. Néha előfordulnak csomagolói melléfogások,
véletlen stabilnak jelölések, de ez szimpla emberi mulasztás, és nagyon-nagyon
ritka, mindenesetre érdemes hetente ellátogatni a Gentoo főoldalára, és
csekkolni a híreket.</p>

<p>Azért arra mindenképp figyeljünk, hogy <strong>legalább hetente egyszer futtassuk meg
a frissítő parancsot</strong> (ez az <code>emerge -DuNa world</code>), célszerően hétvégén, vagy
lefekvés előtt. Reggelre tuti végez. Ha nagyon nincs időnk, havinál ritkább
frissítést akkor se ütemezzünk, különben nagyon sokat kell várnunk.</p>

<p>Para akkor szokott lenni, ha külső csomagtárolókból (layman) teszel fel
testinges (~ arch-os, ez egy tilde jellel prefixelt architektúra nevet, pl.
~amd64 jelent) csomagokat. Nagy para meg akkor, ha nagyon bevállalós vagy, és
kipróbálsz pl. live ebuildeket (közvetlenül verziókezelőből forduló csomagokat),
vagy két csillaggal megjelölt unstable cuccokat (a live ebuildek egyébként ez
utóbbiak részhalmazát képezik). Kezdőknek és középhaladóknak nagy ívben
kerülendő terület ez.</p>

<p>A fenti parancsot használva néha megjelennek sárga USE flagek is a csomagok
mellett. Ez azért van, mert a <code>-N</code> kapcsoló a USE flag frissülésekre is rámegy,
ez ugyanis sokszor valamilyen plusz támogatást is jelent, verzióváltás nélkül.
Bekapcsolt <em>ccache</em> mellett, ha csak kikapcsolt flag került be, a csomagok
secc-pecc lefordulnak, ha van, akkor pedig gazdagabbak leszünk egy, az
igényeinknek jobban megfelelő csomagnak (amennyiben az USE flageket a saját, és
nem a szomszéd igényei alapján állítottuk be).</p>

<p>A frissítéseknél lehet azért trükközni. A <code>-DuNa</code> mindent felsorol, ami épp
frissülni akar, de ha mondjuk nem akarunk egy Firefox forgatásba belekezdeni,
akkor csinálhatjuk úgy is, hogy kézzel felsoroljuk a frissítendő csomagokat egy
<code>emerge -u1</code> parancs argumentumaiként, verziószám nélkül, kihagyva a Firefox-ot,
egy későbbi időpontban frissítve azt.</p>

<p>Nagyjából ennyi lenne. Elég hosszúra nyúlt ez az írás is, nem véletlenül mondtam
az elején, hogy könyvtárakat lehet megtölteni a Gentoo-ról szóló ismeret
anyagokkal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rename Windows 8 Profile dir]]></title>
    <link href="http://hron.me/blog/2013/04/rename-windows-8-profile-dir/"/>
    <updated>2013-04-18T00:08:00+02:00</updated>
    <id>http://hron.me/blog/2013/04/rename-windows-8-profile-dir</id>
    <content type="html"><![CDATA[<p>So, I ran into a weird situation: when I installed Windows, I used Live account to create my user.
In preview version of Windows 8 it created a profile dir based on the user part of e-mail address
of the Live account, so from hrgy@live.com it created an user hrgy with same profile dir. However,
the final version is changed it to create account based on your first name, it was &#8220;Gábor&#8221; in this
case. Notice the accented second letter.</p>

<p>The problem with folders containing non-ASCII char in its name is obvious: not all program can handle
it correctly. It has a displaying problems in some apps, and some apps cannot create their files in
this profile.</p>

<p>The fix was not so easy but I now describe required steps.</p>

<p>First if you do not have an another administrator user than you, then you have to create it. Windows 8
does not allow to log into the built-in Administrator account anymore, so you have to create one in
Control Panel. It&#8217;s pretty straighforward and net contains a bunch of howtos for it, so I skip describing
this step.</p>

<p>Now, log out from your account, and log in into the new one.</p>

<p>Start <code>regedit</code> and navigate to <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList</code></p>

<p>In the subkeys (subfolders) find one what displays your old dirname in <code>ProfileImagePath</code> attribute. In my
case the value was <code>C:\Users\Gábor</code>. Right click, edit and replace last part of the path to what you want to use.</p>

<p><strong>Important:</strong> Even if world collapsing, <strong>do not log in into your own account (what being modified)</strong>
until you finish these steps!</p>

<p>Then, you have to reboot into Safe mode. The easiest way is press <code>Shift + F8</code> during boot. If you
seeing the Windows splash displaying in &#8220;wrong&#8221; resolution then you are in Safe mode.</p>

<p><strong>Important:</strong> you have to log in into the newly created admin account, <em>not</em> into your own one!</p>

<p>Then you have to rename your profile folder. Start a command prompt in Safe mode, and type following:</p>

<pre><code>cd C:\Users
move old_name new_name
</code></pre>

<p>The <code>old_name</code> is the old name of your profile directory, the <code>new_name</code> is what you specified in RegEdit. In
my case it was:</p>

<pre><code>cd C:\Users
move Gábor hron
</code></pre>

<p>Now you are done! If you striclty follwed this tutorial, then if you reboot and log in into your account, you do not see
any change, except the %USERPROFILE% environment variable carries the new name.</p>

<p><strong>Note:</strong> I saw only one bug: iCloud Photo stream stored the full path of my Pictures folder in its database and I had to relocate it.
It&#8217;s a bug in iCloud, not a Windows problem.</p>

<p><em>Disclaimer: This tutorial is tested by me but I do not guarantee anything. Take a backup from your important data before start doing
this. I am not responsible if your data lose, you cannot login anymore or your kitten vanishes.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx és PHP]]></title>
    <link href="http://hron.me/blog/2013/03/nginx-es-php/"/>
    <updated>2013-03-17T11:32:00+01:00</updated>
    <id>http://hron.me/blog/2013/03/nginx-es-php</id>
    <content type="html"><![CDATA[<p>Az <a href="http://hron.me/blog/2013/01/nginx-bevezeto/">előző</a> cikkben alapszinten megismerkedtünk az Nginx-szel,
valamint megtudtuk, mitől és miben gyorsabb, mint a kihívójának szánt Apache.</p>

<p>Ebben, és a következő cikkben azt vizsgáljuk, hogy hogyan tudunk egy PHP alapú site-t futtatni vele, például
egy Drupal alapú portált.</p>

<!-- more -->


<h2>PHP kicsit másként</h2>

<p>A legtöbben tisztában vannak azzal, hogy a PHP-t alapvetően kétféleképpen lehet futtatni: Apache modulként
és CGI-ként. A két módszer közül az előbbi elterjedtebb, mert a CGI-s futtatás nagy terhet ró a kiszolgáló
webszerverre, hiszne minden egyes lekéréshez külön PHP interpretert kell forkolni.</p>

<p>Az Apache modulos futtatásnak viszont van egy pár hátránya, amiről nem mindig esik szó:</p>

<ul>
<li>Problémákhoz vezethet, ha szálkezeléses (threading) Apache-on belül használjuk</li>
<li>Ugyanazzal az userrel fut, mint az őt hostoló Apache folyamat</li>
<li>Az életciklusa szorosan össze van kötve az őt hostoló Apache folyamattal</li>
</ul>


<p>Ebből a leginkább problematikus a második pont. Az Apache-t ugyanis alapvetően kétféleképp szokás futtatni:</p>

<ul>
<li>Minden site ugyanazzal a felhasználóval fut (www-data, wwwrun, apache, httpd, &#8230;).
Ennek hátrányai nyilvánvalóak: bármely site kódja képes lehet írni/olvasni bármely másik site könyvtárát</li>
<li>Minden site különböző felhasználóval fut, de a fő Apache folyamat root userként (ITK modul).</li>
</ul>


<p>A második probléma megértéséhez kicsit bele kell túrni az Apache lelkivilágába. A fő Apache folyamat ugyanis az,
amelyik a 80-as (443-as, stb) porton figyel, majd bejövő kérésnél a kérés fejlécét megvizsgálva dönti el, hogy
milyen felhasználó nevében indítsa el a gyermekfolyamatot. Azonban - és ez nagyon fontos - amennyiben bármilyen
sérülékenység van a HTTP kéréseket feldolgozó kódrészletben, a támadó ezt kihasználva egy root felhasználói jogokkal
futó folyamat belsejében találja magát - ami teljes hozzáférést biztosít számára a rendszer minden komponenséhez és
adatához. A fő Apache folyamatnak viszont muszáj root userként futnia, mert csak így tud adott felhasználóval
gyermekfolyamatot indítani.</p>

<p>Mi hát a megoldás? Egy teljesen új futtatási mód: a FastCGI!
A FastCGI ötvözi a CGI és a modulos PHP előnyeit: bármilyen felhasználóval elindulhat, viszont egynél több lekérést is ki
tud szolgálni. Ezen felül teljesen elkülönítetten fut a webszervertől, egy többé-kevésbé standard protokollon kommunikálva
vele, így képes lehet akár bebörtönözve is futni (chroot, jail), de akár egy teljesen különálló gépen is futhat.</p>

<p>Működését tekintve lényegesen egyszerübb folyamatról van szó: itt is egy darab, root felhasználóként futó felügyelő folyamat
(control process) fut, ám ő nem foglalkozik semmilyen szinten a bejövő kérések feldolgozásával, hanem amint bejön egy, rögtön
elkezd egy szabad feldolgozó (worker) szálat keresni, ha nem talál, akkor pedig indít egy újat. A feldolgozó szál az, ami először
beleolvas a kérés fejlécébe.
Ennek megfelelően a kéréseket nem a site-ok neve alapján osztja el, hanem az alapján, hogy mely portjára érkezett a kérés (a feldolgozó
folyamatokat is ennek megfelelően lehet konfigurálni). Ez azt jelenti, hogy futtató felhasználónként egy portra (vagy unix socketre) van
szükségünk a futtatáshoz.</p>

<p>PHP esetében a FastCGI futtatási mód egyébként nem annyira újdonság, már a 4-es verzióhoz is készült egy olyan patchkészlet, mely lehetővé
tette a webalkalmazások ilyen módon való futtatását, azóta pedig minden PHP főverzióhoz elkészült, illetve az 5.3-as verziótól már szerves
része a fő kódbázisnak is a FastCGI futtatási lehetőség. A továbbiakban ezzel foglalkozunk.</p>

<p>Tekintve, hogy az Nginx-hez nem készült PHP modul, és CGI-ket sem tud futtatni, a PHP integrációjának egyetlen újta-módja a FastCGI-s futtatás.</p>

<h2>Egy FastCGI worker születése</h2>

<p>A FastCGI használatba vételéhez fel kell telepíteni az ehhez szükséges csomagot, mely a legtöbbször <code>php-fpm</code>, <code>php5-fpm</code> vagy <code>php53-fpm</code>
néven található meg a rendszerben. Van néhány olyan Linux disztribúció, mely alapból nem szállítja ezt a futtatási módot, de szinte minden
ilyenhez létezik külső csomagfejlesztők által biztosított csomag.</p>

<p>Az FPM konfigja alapvetően két részből áll: a globális beállításokból, és az egyes ún. worker poolok konfigurálásából. A globális részben
általában nincs túl sok dolgunk, ezt a csomagfejlesztők már jól beállították, hiszen itt olyasmiket lehet csak állítani, mint a naplófájlok
útvonala, vagy a folyamatazonosítót tartalmazó fájl útvonala.</p>

<p>Ami számunkra sokkal-sokkal érdekesebb, az az egyes workerek konfigurálása. Három fő dolgot kell beállítani:</p>

<ul>
<li>Milyen felhasználó nevében fusson</li>
<li>Hol figyeljen</li>
<li>Milyen stratégiát használjon a gyermekfolyamatok menedzselése során</li>
</ul>


<p>Lássunk egy tipikus worker konfigot (csak a cikkben érdekes részeket hagytam meg, ennél több lehetőség is van):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[www]</span>
</span><span class='line'><span class="c">; The address on which to accept FastCGI requests.</span>
</span><span class='line'><span class="c">; Valid syntaxes are:</span>
</span><span class='line'><span class="c">;   &#39;ip.add.re.ss:port&#39;    - to listen on a TCP socket to a specific address on</span>
</span><span class='line'><span class="c">;                            a specific port;</span>
</span><span class='line'><span class="c">;   &#39;port&#39;                 - to listen on a TCP socket to all addresses on a</span>
</span><span class='line'><span class="c">;                            specific port;</span>
</span><span class='line'><span class="c">;   &#39;/path/to/unix/socket&#39; - to listen on a unix socket.</span>
</span><span class='line'><span class="c">; Note: This value is mandatory.</span>
</span><span class='line'><span class="na">listen</span> <span class="o">=</span> <span class="s">127.0.0.1:9000</span>
</span><span class='line'><span class="c">;listen = /var/run/php-fpm/www.sock</span>
</span><span class='line'>
</span><span class='line'><span class="c">; Unix user/group of processes</span>
</span><span class='line'><span class="c">; Note: The user is mandatory. If the group is not set, the default user&#39;s group</span>
</span><span class='line'><span class="c">;       will be used.</span>
</span><span class='line'><span class="na">user</span> <span class="o">=</span> <span class="s">nobody</span>
</span><span class='line'><span class="na">group</span> <span class="o">=</span> <span class="s">www</span>
</span><span class='line'>
</span><span class='line'><span class="c">; Choose how the process manager will control the number of child processes.</span>
</span><span class='line'><span class="c">; Possible Values:</span>
</span><span class='line'><span class="c">;   static  - a fixed number (pm.max_children) of child processes;</span>
</span><span class='line'><span class="c">;   dynamic - the number of child processes are set dynamically based on the</span>
</span><span class='line'><span class="c">;             following directives:</span>
</span><span class='line'><span class="c">;             pm.max_children      - the maximum number of children that can</span>
</span><span class='line'><span class="c">;                                    be alive at the same time.</span>
</span><span class='line'><span class="c">;             pm.start_servers     - the number of children created on startup.</span>
</span><span class='line'><span class="c">;             pm.min_spare_servers - the minimum number of children in &#39;idle&#39;</span>
</span><span class='line'><span class="c">;                                    state (waiting to process). If the number</span>
</span><span class='line'><span class="c">;                                    of &#39;idle&#39; processes is less than this</span>
</span><span class='line'><span class="c">;                                    number then some children will be created.</span>
</span><span class='line'><span class="c">;             pm.max_spare_servers - the maximum number of children in &#39;idle&#39;</span>
</span><span class='line'><span class="c">;                                    state (waiting to process). If the number</span>
</span><span class='line'><span class="c">;                                    of &#39;idle&#39; processes is greater than this</span>
</span><span class='line'><span class="c">;                                    number then some children will be killed.</span>
</span><span class='line'><span class="c">;  ondemand - no children are created at startup. Children will be forked when</span>
</span><span class='line'><span class="c">;             new requests will connect. The following parameter are used:</span>
</span><span class='line'><span class="c">;             pm.max_children           - the maximum number of children that</span>
</span><span class='line'><span class="c">;                                         can be alive at the same time.</span>
</span><span class='line'><span class="c">;             pm.process_idle_timeout   - The number of seconds after which</span>
</span><span class='line'><span class="c">;                                         an idle process will be killed.</span>
</span><span class='line'><span class="c">; Note: This value is mandatory.</span>
</span><span class='line'><span class="na">pm</span> <span class="o">=</span> <span class="s">ondemand</span>
</span><span class='line'>
</span><span class='line'><span class="c">; The number of child processes to be created when pm is set to &#39;static&#39; and the</span>
</span><span class='line'><span class="c">; maximum number of child processes to be created when pm is set to &#39;dynamic&#39;.</span>
</span><span class='line'><span class="c">; This value sets the limit on the number of simultaneous requests that will be</span>
</span><span class='line'><span class="c">; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.</span>
</span><span class='line'><span class="c">; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP</span>
</span><span class='line'><span class="c">; CGI.</span>
</span><span class='line'><span class="c">; Note: Used when pm is set to either &#39;static&#39; or &#39;dynamic&#39;</span>
</span><span class='line'><span class="c">; Note: This value is mandatory.</span>
</span><span class='line'><span class="na">pm.max_children</span> <span class="o">=</span> <span class="s">20</span>
</span><span class='line'><span class="na">pm.process_idle_timeout</span> <span class="o">=</span> <span class="s">10s</span>
</span><span class='line'>
</span><span class='line'><span class="c">; The number of child processes created on startup.</span>
</span><span class='line'><span class="c">; Note: Used only when pm is set to &#39;dynamic&#39;</span>
</span><span class='line'><span class="c">; Default Value: min_spare_servers + (max_spare_servers - min_spare_servers) / 2</span>
</span><span class='line'><span class="c">;pm.start_servers = 20</span>
</span><span class='line'>
</span><span class='line'><span class="c">; The desired minimum number of idle server processes.</span>
</span><span class='line'><span class="c">; Note: Used only when pm is set to &#39;dynamic&#39;</span>
</span><span class='line'><span class="c">; Note: Mandatory when pm is set to &#39;dynamic&#39;</span>
</span><span class='line'><span class="c">; pm.min_spare_servers = 5</span>
</span><span class='line'>
</span><span class='line'><span class="c">; The desired maximum number of idle server processes.</span>
</span><span class='line'><span class="c">; Note: Used only when pm is set to &#39;dynamic&#39;</span>
</span><span class='line'><span class="c">; Note: Mandatory when pm is set to &#39;dynamic&#39;</span>
</span><span class='line'><span class="c">; pm.max_spare_servers = 20</span>
</span><span class='line'>
</span><span class='line'><span class="c">; The number of requests each child process should execute before respawning.</span>
</span><span class='line'><span class="c">; This can be useful to work around memory leaks in 3rd party libraries. For</span>
</span><span class='line'><span class="c">; endless request processing specify &#39;0&#39;. Equivalent to PHP_FCGI_MAX_REQUESTS.</span>
</span><span class='line'><span class="c">; Default Value: 0</span>
</span><span class='line'><span class="c">;pm.max_requests = 500</span>
</span><span class='line'>
</span><span class='line'><span class="c">; Chroot to this directory at the start. This value must be defined as an</span>
</span><span class='line'><span class="c">; absolute path. When this value is not set, chroot is not used.</span>
</span><span class='line'><span class="c">; Note: you can prefix with &#39;$prefix&#39; to chroot to the pool prefix or one</span>
</span><span class='line'><span class="c">; of its subdirectories. If the pool prefix is not set, the global prefix</span>
</span><span class='line'><span class="c">; will be used instead.</span>
</span><span class='line'><span class="c">; Note: chrooting is a great security feature and should be used whenever </span>
</span><span class='line'><span class="c">;       possible. However, all PHP paths will be relative to the chroot</span>
</span><span class='line'><span class="c">;       (error_log, sessions.save_path, ...).</span>
</span><span class='line'><span class="c">; Default Value: not set</span>
</span><span class='line'><span class="c">;chroot = </span>
</span><span class='line'><span class="c">; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from</span>
</span><span class='line'><span class="c">; the current environment.</span>
</span><span class='line'><span class="c">; Default Value: clean env</span>
</span><span class='line'><span class="c">;env[HOSTNAME] = $HOSTNAME</span>
</span><span class='line'><span class="c">;env[PATH] = /usr/local/bin:/usr/bin:/bin</span>
</span><span class='line'>
</span><span class='line'><span class="c">; Additional php.ini defines, specific to this pool of workers. These settings</span>
</span><span class='line'><span class="c">; overwrite the values previously defined in the php.ini. The directives are the</span>
</span><span class='line'><span class="c">; same as the PHP SAPI:</span>
</span><span class='line'><span class="c">;   php_value/php_flag             - you can set classic ini defines which can</span>
</span><span class='line'><span class="c">;                                    be overwritten from PHP call &#39;ini_set&#39;. </span>
</span><span class='line'><span class="c">;   php_admin_value/php_admin_flag - these directives won&#39;t be overwritten by</span>
</span><span class='line'><span class="c">;                                     PHP call &#39;ini_set&#39;</span>
</span><span class='line'><span class="c">; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.</span>
</span><span class='line'>
</span><span class='line'><span class="c">; Default Value: nothing is defined by default except the values in php.ini and</span>
</span><span class='line'><span class="c">;                specified at startup with the -d argument</span>
</span><span class='line'><span class="na">php_admin_value[sendmail_path]</span> <span class="o">=</span> <span class="s">/usr/sbin/sendmail -t -i -f www@railwayhosting.hu</span>
</span><span class='line'><span class="c">;php_flag[display_errors] = off</span>
</span><span class='line'><span class="c">;php_admin_value[error_log] = /var/log/fpm-php.www.log</span>
</span><span class='line'><span class="c">;php_admin_flag[log_errors] = on</span>
</span><span class='line'><span class="c">;php_admin_value[memory_limit] = 32M</span>
</span></code></pre></td></tr></table></div></figure>


<p>Fuh, kicsit hosszú lett, de nem akartam kivenni a magyarázó megjegyzéseket, mert
rettentő hasznosak - noha a végleges konfig fájlból ezeket ki lehet gyomlálni</p>

<p>Szóval, ahogy látjuk, a konfig a port megadásával indul (<code>listen</code>, 10. sor), hogy hol akarjuk majd elérni a
workereket. Ez lehet TCP port is, vagy egy ún. Unix socket, ami valójában nem más, mint egy speciális
fájl, amit ugyan közvetlenül nem lehet sem írni sem olvasni, viszont kiválóan használható folyamatok
közti kommunikációra. Ez utóbbi gyetlen korlátja, hogy kialakítása miatt csak egy gépen belül működik.</p>

<p>A következő két opció (<code>user</code> és <code>group</code>, 11-12. sorok) adja meg, hogy milyen felhasználó és csoport nevében
fussanak a worker folyamatok. Ez határozza meg, hogy a PHP feldolgozó milyen fájlokat/mappákat írhat és olvashat,
tehát minden jogosultságnak eszerint kell alakulnia a webalkalmazás fájljain/mappáin.</p>

<p>Ezután következik a worker folyamatok menedzselésének szabályozása (19-74. sorok).
A konfig fájl kommentjei elég részletesen bemutatnak minden opciót, így én arra fókuszálnék,
hogy melyik főbb stratégiát mikor érdemes használni:</p>

<ul>
<li><strong>ondemand:</strong> Fejlesztéshez ez a legjobb. Nem terheli a gépet feleslegesen kihasználatlan worker folyamatokkal,
illetve nincs esélye hogy &#8220;beleragad&#8221; valami régebbi módosítás. Nagyon gyér látogatottságú, gyors
válaszidőt nem igénylő oldalak esetében lehet még hasznos, például valami statisztika oldalnál.</li>
<li><strong>static:</strong> Nevéből adódóan mindig egy fix worker készlettel dolgozik. Olyan oldalaknál hasznos, aminek előre
tervezhető a terhelése, pl. intranetes oldalaknál, ahol mindig körülbelül ugyanannyi felhasználóra kell
felkészülni</li>
<li><strong>dynamic:</strong> Ez az, amit általánosan használunk publikus website-ok esetén. Konfigurációs opciói nagyjából
hasonlóképpen alakulnak, mint a Prefork modullal futtatott Apache hasonló opciói, bár itt-ott van némi eltérés.</li>
</ul>


<p>Sorban ezután nyílik lehetőség a chroot beállítására (85. sor). Fontos tudni, hogy a FastCGI-s PHP csak a worker folyamat elindulása
<strong>után</strong> vált be chroot-ba, így a worker elindulásához szükséges programkönyvtáraknak nem kell a chroot részét képezniük, csak
a különböző beépülő modulok által igényelt dolgoknak kell ott lenniük (pl. az XML modulokhoz a libxml2-nek). Ez a tizedére
csökkenti a chroot méretét.</p>

<p>Végül két külön szekcióban a környezeti változókat (<code>env</code>) adhatjuk meg, illetve a közös php.ini opciókat bírálhatjuk felül,
hasonlóan, mint az Apache modulként futtatott PHP esetében.</p>

<p>Nagyjából ennyiből áll egy PHP worker beállítása. A következő részben összekötjük az Nginx-et és a PHP-t, illetve ismételten
szó kerül a teljesítményről is.</p>

<p><em>Folytatjuk</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Házi, magam sütöttem]]></title>
    <link href="http://hron.me/blog/2013/03/hazi/"/>
    <updated>2013-03-03T16:23:00+01:00</updated>
    <id>http://hron.me/blog/2013/03/hazi</id>
    <content type="html"><![CDATA[<p>A cím az utolsó betűig igaz - de csak addig. Pár hete (hmm&#8230; hónapja?) jártam-keltem a KÖKI Terminálon nyílt Tescoban, és nem tudtam elmenni egy fahéjas sütemény mellett, nevetséges áron volt, &#8220;Hamar kész&#8221; - hirdette a felirat. Naná hogy vettem.</p>

<p>Ma jutottam el odáig, hogy megint eszembe jutott (egy fenét, pár napja kerestem valamit a fagyasztóban és szembejött), mondom pocsékba ne vesszen már, megcsinálom.</p>

<p>Szóval, vettem egy nagy levegőt, meg egy még nagyobb tepsit (úgy értem, a levegőnél&#8230;) és belevágtam. A címke szerint 80 percet kell pihentetni, hát gondoltam, ez nem olyan betű szerinti dolog, hogy percre kellene betartani, ebédcsinálás előtt kiraktam, ebéd + pihi után álltam neki megcsinálni. Volt az 90-120 perc is, de ki számolja&#8230;</p>

<p>Aztán olyat mondott a címke, hogy vegyek sütőpapírt, borítsam a tepisbe, és utána rá a sütit. Na most nekem elég sokféle papír kószál itthon, sütőpapír az pont nem. Mivel már belevágtam (az ilyet nem szabad visszafagyasztani, mert elég undorító lesz utána) így a sütőpapírt kicseréltem alufóliára, mert az volt itthon. A csere egyszerű volt, tepsiből nem létező sütőpapír kidob, alufólia beterít.</p>

<p>A következő utasítás az volt, hogy 185 fokon kell sütni. Mivel nekem csak ilyen nempontos gázsütőm van, belöktem 5-ös fokozatra, és felhúztam az órát öt percre, ha nagyon elszaladna a ló, ott még lehet korrigálni mondjuk egy 4-es fokozattal. Kimentem, semmi extra, rápörgettem még 5-öt a kisvekkerre (a címke 10-12 perces sütést ír, de ez valami sablonból van, sosem vettem még olyan terméket, amit tényleg meg lehett volna csinálni ennyi idő alatt. A jobbik esetben nyers volt, a rosszabbikban&#8230; hát&#8230; érdekesen sötét).</p>

<p>Csörgésre lustán kiballagtam (+1-2 perc), megvizsgáltam úgy szemileg, meg megbökdöstem a kés hegyével, lagymatag és puha volt, szóval kollektív döntésként született, hogy kell neki még 5 perc. Kisvekker orrát megtekertem megint.</p>

<p>Miután megint egy cikk kellős közepébe csörgött bele a határidő, így úgy döntöttem, hogy egy életem, egy halálom, én bizony ezt nem fogom visszarakni a sütőbe, lett légyen akármilyen is az a sütemény. Végül nem volt szükség ilyen kemény elhatározásra, a süti magától is nagyon szép állagú lett, picit barna, de az nem baj.</p>

<p><a target="_blank" title="Suti @ Tepsi" href="http://static.hron.me/imgpaste/blog/IMG_20130303_160141.jpg"><img src="http://static.hron.me/imgpaste/blog/IMG_20130303_160141.jpg" alt="Suti @ Tepsi" width="324" height="245" /></a></p>

<p>A kiszedéssel viszont megszenvedtem. Mondjuk úgy, hogy nem véletlen ajánlanak ehhez sütőpapírt, bár az is csak felezi a kiszedési időt, ellenben megkönnyíteni nem fogja. A fahéjas töltelék ugyanis elég ragaszkodó természetű, viszont engem annyira nem kedvel, inkább az alufólia iránt mutatott élénk érdeklődést. Végül több, mint 20 perces hősies küzdelem után rá tudtam beszélni arra, hogy egy rongyos, összetépett, ragacsos alufólia közel sem annyira vonzó, mint egy szép új kéztőrlővel leterített tiszta tányér.</p>

<p><a target="_blank" title="Suti @ Tanyer" href="http://static.hron.me/imgpaste/blog/IMG_20130303_161610.jpg"><img src="http://static.hron.me/imgpaste/blog/IMG_20130303_161610.jpg" alt="Suti @ Tanyer" width="324" height="245" /></a></p>

<p>Tanulságok:</p>

<ul>
<li>Kell venni egy tekercs sütőpapírt, akkor is, ha csak szökőévente egyszer támad ilyen ötletem.
Mivel nem romlik meg, nem szagosodik meg, valamint alig foglal helyet, így mindenképpen megéri,
főleg, mert elég sok időt megspórol.</li>
<li>Sose higyjünk a címkére írt sütési utasításnak vakon. Mindig ellenőrizzük szemileg a készülő
termék állagát, mert azt a címkét Átlag Istvánné szül. Mindegy Jolán számára írták, nem pedig nekünk.</li>
</ul>


<p>Ettől eltekintve ízre semmi probléma, a kicsit megkaramellizálódott alap pedig abszolút nem okoz problémát.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails pre-commit hook]]></title>
    <link href="http://hron.me/blog/2013/02/rails-pre-commit-hook/"/>
    <updated>2013-02-12T23:23:00+01:00</updated>
    <id>http://hron.me/blog/2013/02/rails-pre-commit-hook</id>
    <content type="html"><![CDATA[<p>I just created this small hook for my Rails projects. It helps me to make my codebase clean.</p>

<div><script src='https://gist.github.com/4774014.js?file=git-pre-commit-hook.rb'></script>
<noscript><pre><code>#!/usr/bin/env ruby

require 'erb'
require 'yaml'
require 'pp'

lines = %x{git diff-index --cached --name-only HEAD}.split(/[\r\n]+/)

ENV['RAILS_ENV'] = 'test'

lines.each do |file|
  if File.exists?(file) and file =~ /\.(rb|rake|god)$/
    print &quot;[SYNTAX] #{file} - &quot;
    ret = system(&quot;ruby -c '#{file}'&quot;)
    exit 1 unless ret

    if file =~ /_test\.rb$/
      print &quot;[UNIT  ] #{file} - &quot;
      unitcmd = &quot;ruby -Ilib:test #{file}&quot;
      unitcmd = &quot;bundle exec #{unitcmd}&quot; if File.exists?('Gemfile')
      ret = system(unitcmd)
      exit 1 unless ret
    end

    if file =~ /_spec\.rb$/
      print &quot;[SPEC  ] #{file} - &quot;
      rspeccmd = &quot;rspec #{file}&quot;
      rspeccmd = &quot;bundle exec #{rspeccmd}&quot; if File.exists?('Gemfile')
      ret = system(rspeccmd)
      exit 1 unless ret
    end
  end

  if File.exists?(file) and File.basename(file) =~ /^(Capfile|Gemfile|Guardfile|Rakefile|config.ru)$/
    print &quot;[SYNTAX] #{file} - &quot;
    ret = system(&quot;ruby -c '#{file}'&quot;)
    exit 1 unless ret
  end

  if File.exists?(file) and file =~ /\.feature$/
    print &quot;[ (::) ] #{file} - &quot;
    ENV['CUCUMBER_FORMAT'] = 'progress'
    cuccmd = &quot;cucumber #{file}&quot;
    cuccmd = &quot;bundle exec #{cuccmd}&quot; if File.exists?('Gemfile')
    ret = system(cuccmd)
    exit 1 unless ret
  end

  if File.exists?(file) and file =~ /\.(yml|yaml)$/
    print &quot;[SYNTAX] #{file} - &quot;
    begin
      # Load with erb to avoid problems with cucumber's yml
      erb = ERB.new(IO.read(file)).result(binding)
      yaml = YAML.load(erb)
      puts &quot;Syntax OK&quot;
    rescue SyntaxError =&gt; ex
      puts ex.message
      exit 1
    rescue ArgumentError =&gt; ex
      puts ex.message
      exit 1
    end
  end
end
</code></pre></noscript></div>


<p>You can clone it at <a href="https://gist.github.com/hron84/4774014">Gist</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gitiles Install Howto]]></title>
    <link href="http://hron.me/blog/2013/01/gitiles-install-howto/"/>
    <updated>2013-01-30T17:12:00+01:00</updated>
    <id>http://hron.me/blog/2013/01/gitiles-install-howto</id>
    <content type="html"><![CDATA[<p>I sucked a bit with <a href="https://code.google.com/p/gitiles/">Gitiles</a>, Gerrit&#8217;s Gitweb implementation, because this project lacks an INSTALL file.</p>

<p>So, basically you have to do following:</p>

<ul>
<li><p>First, check out of the source:</p>

<p> <code>git clone https://gerrit.googlesource.com/gitiles</code></p></li>
<li><p>After you cloned the source, compile it with <a href="http://maven.apache.org/">Maven</a>:</p>

<p> <code>mvn package -Dmaven.test.skip=true</code></p></li>
</ul>


<p>  Now, you got <strong>gitiles-war-1.0-SNAPSHOT.war</strong> in gitiles-war/target folder. Deploy it under your application server, in this case I put it to Jetty&#8217;s webapps folder.</p>

<ul>
<li>Tricky part is coming: you will faced with an error message, what says some configuration options are missing. This is because you didn&#8217;t created any configuration file yet. By default, webapp searches its configuration in the webapp root folder, but - because jetty explodes this folder every restart, I decided to put it to some more persistent place. I am do not run any other thing under this Jetty than Gerrit and Gitiles, so I created the gitiles.config under Jetty&#8217;s etc folder:</li>
</ul>


<figure class='code'><figcaption><span>gitiles.config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[gitiles]
</span><span class='line'>    # Repositories placed here
</span><span class='line'>    basePath = /srv/git/repositories
</span><span class='line'>    # Do not check they are exported
</span><span class='line'>    exportAll = true
</span><span class='line'>    # This URL will be displayed as clone URL. DO NOT FORGET TRAILING SLASH!
</span><span class='line'>    baseGitUrl = ssh://cr.hron.me:29418/
</span><span class='line'>    # Title of site (doh)
</span><span class='line'>    siteTitle  = Gitiles - kingmax.hron.me:/srv/git/repositories
</span><span class='line'>    # I dunno why, but it is have to be configured.
</span><span class='line'>    canonicalHostName = kingmax.hron.me
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>The config file above is cool, but Gitiles still crying&#8230; yeah, because you have to tell where it should find that. To do this, you must export a System property <strong>com.google.gitiles.configPath</strong>. I was <em>very</em> lazy, so I edited jetty.xml and before last closing tag I pasted this:</li>
</ul>


<figure class='code'><figcaption><span>jetty.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Call</span> <span class="na">class=</span><span class="s">&quot;java.lang.System&quot;</span> <span class="na">name=</span><span class="s">&quot;setProperty&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;</span>com.google.gitiles.configPath<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Arg&gt;&lt;SystemProperty</span> <span class="na">name=</span><span class="s">&quot;jetty.home&quot;</span> <span class="na">default=</span><span class="s">&quot;.&quot;</span> <span class="nt">/&gt;</span>/etc/gitiles.config<span class="nt">&lt;/Arg&gt;</span>
</span><span class='line'><span class="nt">&lt;/Call&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx - Bevezetés]]></title>
    <link href="http://hron.me/blog/2013/01/nginx-bevezeto/"/>
    <updated>2013-01-21T17:51:00+01:00</updated>
    <id>http://hron.me/blog/2013/01/nginx-bevezeto</id>
    <content type="html"><![CDATA[<p>Ezen cikk a tervek szerint egy sorozat része lesz, amely majd szép lassan (ahogy időm engedi) kerül ki a blogra.</p>

<p>Lássuk tehát az első részt, mely - ahogy a cím is utal rá - egyfajta általános bemutatása lesz ennek a pici webszervernek.</p>

<h2>Mi az Nginx?</h2>

<p>Az <a href="http://www.nginx.org/">Nginx</a> neve az angol Engine X (X motor) kifejezésből származik, ejteni is eszerint kell, tehát <code>ˈen-jən eks</code>.</p>

<p>Magát a motort egy Igor Sysoev nevű srác fejleszti 2002 óta, a kód maga 2004-ben lett nyilvános. Az elsődleges cél egy
pehelysúlyú, ugynakkor skálázható webszerver létrehozása volt, mely képes egy online tartalomszolgáltatónál felmerülő legtöbb
problémával megbirkózni, például az ún. C10K problémával, a legtöbb akkori webszervernek ugyanis problémát okozott egyidejűleg több,
mint 10 000 kapcsolatot kezelni.</p>

<p>Jelenleg az Nginx a világ harmadik legnépszerűbb webszervere, a <a href="http://news.netcraft.com/archives/2012/">2012-es NetCraft felmérés</a> szerint az összes mért oldal 12.07%-át
Nginx segítségével szolgálják ki.</p>

<h2>Az Nginx előnyei</h2>

<p>De mi teszi oly népszerűvé ezt a furcsa nevű webszervert? Mi az, amiért egyre-másra jelennek meg leírások, tutorialok hozzá, ami
a legbiztosabb jele egy termék népszerűségének?</p>

<p>Az egyik kétségtelen ok a gyorsaság. Az Nginx statikus fájlok kiszolgálásában és proxyként is sokkal nagyobb sebességgel szolgál ki
elődjeinél. A Wordpress.com <a href="http://highscalability.com/blog/2012/9/26/wordpresscom-serves-70000-reqsec-and-over-15-gbitsec-of-traf.html">mérései</a> szerint - megfelelő gép mellett - az átlagos 70000 req/s simán elérhető vele.</p>

<p>Ennek az egyik oka az, hogy az Nginx nem feltétlenül forkol mindig külön processzt vagy szálat az új kapcsolatoknak, ahogy pl. az Apache
egyes feldolgozómoduljai (prefork, ITK) teszik, sőt erre nincs is szüksége, mert eseményalapú a feldolgozása, így nem csak több kapcsolatot,
de több eseményt is le tud egyetlen feldolgozó szál kezelni. Ennek köszönhető egyébként az is, hogy hasonló terhelés mellett a memóriaigénye
messze elmarad a klasszikus webszerverekétől. Erről bővebben <a href="http://www.ichilton.co.uk/blog/web/nginx-and-why-you-should-be-running-it-instead-of-or-at-least-in-front-of-apache-380.html">itt</a> lehet olvasni.</p>

<p>A másik oka az, hogy az Nginx sokkal agresszívebben cachel a memóriában az elődjeinél. Megfelelő konfigurálás és többé-kevésbé fix (nem, vagy ritkán
változó) tartalom mellett elérhető az, hogy gyakorlatilag a memóriából történjen a kiszolgálás.</p>

<p>A pufferelés egyébként nagyon sokrétűen konfigurálható, ugyanakkor nem a legkönnyebben emészthető téma.</p>

<p>Előnye még a jó minőségű dokumentáció. A legtöbb modulnak nagyon részletes dokumentációja van, néhány konkrét használati eseteket is bemutat,
mely teljes biztonsággal átvehető egy az egyben a saját konfigurációnkba.</p>

<p>További előnyeként szokták sorolni a konfigurációs fájl könnyű érthetőségét. Akik valamilyen C szintaxisú nyelvben (PHP, Perl, C/C++, Java, stb)
programoznak, azoknak nagyon is ismerős lehetnek a blokkok és a sorvégi pontosvesszök, melyekből a konfiguráció felépül.</p>

<p><em>A következő cikkben az Nginx és a PHP kapcsolatát fogom bemutatni, és példákon keresztül szemlélteni</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Avatar történelem]]></title>
    <link href="http://hron.me/blog/2012/12/avatar-tortenelem/"/>
    <updated>2012-12-21T08:59:00+01:00</updated>
    <id>http://hron.me/blog/2012/12/avatar-tortenelem</id>
    <content type="html"><![CDATA[<p>Este újra megnéztem az Avatar-t, éjjel pedig furcsa álmom volt. Gyakorlatilag továbbálmodtam a történetet, pedig ez ritka eset nálam.</p>

<p>Szóval, a sztori lényege az, hogy Jake, miután az emberek többsége elhagyja a bolygót, két ottmaradt tudóssal nekiáll felfedezni azt. Az gondolom
már a filmből is mindenki számára világos volt, hogy ez gyakorlatilag egy hatalmas, dúsan burjánzó dzsungel. Ami nem, az az, hogy a bolygón
vannak olyan helyek, &#8220;szent helyek&#8221;, ahova még a Navik se mennek túl sűrűn. Jake bemerészkedik az egyik ilyen helyre (amit persze a népe nem igazán helyesel,
de nem igazán tiltják meg, bár figyelmeztetik őt a veszélyre). Mint kiderül, ezek a helyek valójában romok, egy fejlett, de letűnt civilizáció romjai.</p>

<p>Ha hasonlítani kellene, akkor a földi dél-amerikai civilizációhoz hasonlítanám, azonban annál sokkal fejlettebb, idősebb civilizációról van szó. Azt tudjuk,
hogy a ma ismert Navik együtt élnek a természettel, igyekeznek minél kevesebb kárt okozni. Nos, elődeik kapcsolata a természettel ennél sokkal bonyolultabb
volt. Bár ők is természetimádó nép voltak, azért az nem okozott nekik gondot, hogy a nagy erdőségekből kis ligeteket csináljanak, miközben terjeszkedtek.</p>

<p>No, de vissza a sztorihoz. Szóval Jake bemerészkedik az egyik ilyen romba, felderíti, és találnak pár érdekes leletet, köztük néhány vésetekkel teli kőtáblát.
Ezeken főképp képek láthatóak, írás szinte alig, de annyit azért sikerül kiolvasni belőle, hogy itt egy fejlett civilizáció lakott, elég nagy lélekszámmal.
Találtak néhány térképet is a holdról, illetve olyan szintű leírásokat az óriásbolygóról, ami egyértelművé teszi, hogy űrutazásra képes fajról van szó.</p>

<p>Egy másik romban, találnak egy furcsa, fallal lezárt helységet. Majd&#8217; egy hónapjuk rámegy, mire sikerül kitalálni, hogy jussanak be. Bent két asztalt találnak,
két-két székkel, a mennyezeten pedig fura díszítésű panelek lógnak a két asztal felett. Az egyik kutató, aki korábban azt próbálta meg kitalálni, hogy milyen jellegű
mezőgazdasága volt a civilizációnak, fáradtan roskadt le az egyik székre&#8230; majd meglepően gyorsan el is aludt. Néhány perc múlva felébredt, és elmondta, hogy rájött
a megoldásra, ilyen és ilyen eszközöket használtak, stb. Mivel erre vonatkozóan eddig semmilyen bizonyítékot nem leltek, persze mindenki kételkedett a szavában.
Pár nappal később azonban felfedeztek pár mezőgazdasági témájú vésetet, ami pontosan megfelelt a kutató által vázoltaknak. Néhány további kísérlet után rájöttek, hogy
a szoba egyfajta tudástárként működik, letölti a betérő fejébe azokat a válaszokat, melyekre kiváncsi.</p>

<p>Jake közben talál egy kötáblát, tele neveknek és dátumoknak tűnő vésetekkel. Ő is kipróbálja a szobát, és valami különös történik&#8230;</p>

<p>Az a tábla valóban neveket tartalmazott, méghozzá különböző uralkodók neveit. Amikor Jake leül a szobában, egy név jár folyamatosan a fejében, a szoba pedig hozzáférhetővé
teszi számára ezen uralkodó naplóját. Mint kiderül, a Navik ősei nem volt egységes faj, az egyes klánok közt folyamatos volt a viszálykodás. Az az uralkodó, akinek a
naplójához Jake hozzáfért, az utolsók egyike volt. A faj hosszú életű volt, a száz helyi év teljesen átlagos kornak számított, a mai embernél talán valahol 50-60 évnek felel meg.
Az uralkodó naplójába gondosan feljegyezte az általa vívott harcok minden eseményét. Pusztító harcok voltak ezek, rengeteg áldozattal. A naplóbejegyzésekből azonban az is kiderül,
hogy írójuk belefásult a harcba, értelmetlennek találja, ő maga már nem is nagyon támadt, csak a városát védelmezte. Mivel tisztában van azzal, hogy nem győzhet, összedob egy csapatot nőkből és gyerekekből, akiket beküld az egyik erdőbe. Pár évvel később egy - közelebbről meg nem nevezett - fegyver elpusztítja az egész civilizációt, a naplót író uralkodó is teljesen véletlenül menekül meg.</p>

<p>Csatlakozik a menekültek csapatához, és elhatározzák, hogy újrakezdik, de az alapoktól. Megtiltja, hogy visszamenjenek a romokhoz (nem mintha nagyon lenne miért&#8230;), és
elkezdenek az ősi módon élni, gyűjtögetni, vadászni&#8230; Ő maga is csak egyszer megy vissza - a halála előtt nem sokkal -, hogy befejezze a naplóját.</p>

<p>A Navik faja tehát újrakezdés, visszatértek ősi gyökereikhez, és teljesen elfeledték a múltat.</p>

<p>Jake és csapata úgy dönt, hogy erről nem szólnak a Naviknak. Ha egyszer maguktól megtalálják a tudástárt, hát legyen, de nem látják értelmét annak, hogy ezt a népet
megbolygassák ilyen szörnyű emlékekkel.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails - polimorf világ]]></title>
    <link href="http://hron.me/blog/2012/12/rails-polimorf-vilag/"/>
    <updated>2012-12-13T07:23:00+01:00</updated>
    <id>http://hron.me/blog/2012/12/rails-polimorf-vilag</id>
    <content type="html"><![CDATA[<p>Azért vannak dolgok, amikkel lehet szépeket szívni.</p>

<p>A feladat valami olyasmi volt, hogy kell egy újrafelhasználható &#8220;cím&#8221; osztály, ami külön táblára is képeződne le, hogy ne a megfelelő táblákat terheljük feleslegesen, plusz a címek amúgy se mindig kellenek pl. a felhasználókezeléshez. Azért kell újrafelhasználhatónak lennie, mert két különböző dolog is használ címeket a rendszerben.</p>

<p>Nem akarom nagyon húzni az időt, az alábbi kód született rá:</p>

<figure class='code'><figcaption><span>Polimophic user profile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Address</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:addressable</span><span class="p">,</span> <span class="ss">:polymorphic</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span>  <span class="ss">:addresses</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:addressable</span>
</span><span class='line'>  <span class="n">has_one</span>   <span class="ss">:billing_address</span> <span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:addressable</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s1">&#39;Address&#39;</span><span class="p">,</span> <span class="ss">:conditions</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:billable</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:shippable</span> <span class="o">=&gt;</span> <span class="kp">false</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">has_one</span>   <span class="ss">:shipping_address</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:addressable</span><span class="p">,</span> <span class="ss">:class_name</span> <span class="o">=&gt;</span> <span class="s1">&#39;Address&#39;</span><span class="p">,</span> <span class="ss">:conditions</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:shippable</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:billable</span> <span class="o">=&gt;</span> <span class="kp">false</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Erre kedves barátom azt mondaná, hogy szép baleset. És akkor még nagyon finoman fogalmazna. Nézzük, mik azok a buktatók, amin át lehet esni egy ilyet nézve:</p>

<ul>
<li>A has_many asszociáció ugye azért kell, hogy legyen valami, ami polimorf. Elvben bele lehet suvasztani a has_one mellé is, de nekem egyébként is kell tudnom a címeket egyben
lekérni, akkor meg miért ne emelném ki?</li>
<li>Az előbbi asszociáció alapján definiálunk két hozzárendelést. Ugye itt a hangsúly a :conditions hashen van, ez mondja meg, hogy a polimorf tömbből mely adatok kellenek
(pontosabban, hogy az asszociáció alapján generált query-ben a WHERE feltétel hogyan bővüljön)</li>
<li>Az egyik trükk az, hogy mindenképp meg kell adni az osztályt is, ugyanis a has_one asszociáció <em>nem</em> kéri le ezt az infót a hivatkozott polimorf asszociációtól, hanem saját
maga áll neki találgatni - természetesen rosszul.</li>
<li>A másik trükk pedig, hogy mivel ez egy kétparaméteres, egymást kölcsönösen kizáró feltétel, így <em>mindkettőt</em> meg kell adni, különben létrehozáskor előjöhet olyan csúfság, hogy
valaki meghinteli a dupla false-t - vagyis úgy mentünk el pl. egy billing címet, hogy az elvész az :addresses tömb nevű fekete lyukban (van értelme amúgy a dupla false-nak is,
csak abból nem billing meg shipping címek lesznek, hanem csak címek). Azaz, mentéskor a billing_address-en keresztül mentünk, de a mentés után a billing_address pont ugyanolyan
<code>nil</code> lesz, mint előtte volt vala.</li>
</ul>


<p>Azért ezzel is sikerült egy jó órát szívni&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RedisHash - this hash is a db!]]></title>
    <link href="http://hron.me/blog/2012/11/redishash-this-hash-is-a-db/"/>
    <updated>2012-11-23T17:52:00+01:00</updated>
    <id>http://hron.me/blog/2012/11/redishash-this-hash-is-a-db</id>
    <content type="html"><![CDATA[<p>I started to understand how [Redis] is working and how can I use it in my projects. In my current project I collect some informations with background jobs, and store these informations in Redis. I choosen this way because these data should not be really persistent (that&#8217;s why I not decided to use MySQL as storage) because it can be collected quickly again if vanishes (it collected periodically) but I would like to access it quickly.</p>

<p>Redis has a beautiful interface to handle data. However, I usually like if the data storing logic is separated from my business logic. After some thinking I decided to store object in a easiest way I can: I store them in a &#8220;smart&#8221; hash. Basically, all hashes are key-value store, and Redis is a key-value store too. So, I extended ruby&#8217;s <code>Hash</code> class, and overriden some methods&#8230;</p>

<!-- more -->




<figure class='code'><figcaption><span>RedisHash code</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;redis&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;json&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">RedisHash</span> <span class="o">&lt;</span> <span class="no">Hash</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:redis</span><span class="p">,</span> <span class="ss">:redkey</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">METHODS</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:append</span><span class="p">,</span> <span class="ss">:blpop</span><span class="p">,</span> <span class="ss">:brpop</span><span class="p">,</span> <span class="ss">:brpoplpush</span><span class="p">,</span> <span class="ss">:decr</span><span class="p">,</span> <span class="ss">:decrby</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:del</span><span class="p">,</span> <span class="ss">:exists</span><span class="p">,</span> <span class="ss">:expire</span><span class="p">,</span> <span class="ss">:expireat</span><span class="p">,</span> <span class="ss">:get</span><span class="p">,</span> <span class="ss">:getbit</span><span class="p">,</span> <span class="ss">:getrange</span><span class="p">,</span> <span class="ss">:getset</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:hdel</span><span class="p">,</span> <span class="ss">:hexists</span><span class="p">,</span> <span class="ss">:hget</span><span class="p">,</span> <span class="ss">:hgetall</span><span class="p">,</span> <span class="ss">:hincrby</span><span class="p">,</span> <span class="ss">:hkeys</span><span class="p">,</span> <span class="ss">:hlen</span><span class="p">,</span> <span class="ss">:hmget</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:hmset</span><span class="p">,</span> <span class="ss">:hset</span><span class="p">,</span> <span class="ss">:hsetnx</span><span class="p">,</span> <span class="ss">:hvals</span><span class="p">,</span> <span class="ss">:incr</span><span class="p">,</span> <span class="ss">:incrby</span><span class="p">,</span> <span class="ss">:lindex</span><span class="p">,</span> <span class="ss">:linsert</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:llen</span><span class="p">,</span> <span class="ss">:lpop</span><span class="p">,</span> <span class="ss">:lpush</span><span class="p">,</span> <span class="ss">:lpushx</span><span class="p">,</span> <span class="ss">:lrange</span><span class="p">,</span> <span class="ss">:lrem</span><span class="p">,</span> <span class="ss">:lset</span><span class="p">,</span> <span class="ss">:ltrim</span><span class="p">,</span> <span class="ss">:move</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:persist</span><span class="p">,</span> <span class="ss">:ping</span><span class="p">,</span> <span class="ss">:publish</span><span class="p">,</span> <span class="ss">:rename</span><span class="p">,</span> <span class="ss">:renamenx</span><span class="p">,</span> <span class="ss">:rpop</span><span class="p">,</span> <span class="ss">:rpoplpush</span><span class="p">,</span> <span class="ss">:rpush</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:rpushx</span><span class="p">,</span> <span class="ss">:sadd</span><span class="p">,</span> <span class="ss">:scard</span><span class="p">,</span> <span class="ss">:sdiff</span><span class="p">,</span> <span class="ss">:sdiffstore</span><span class="p">,</span> <span class="ss">:set</span><span class="p">,</span> <span class="ss">:setbit</span><span class="p">,</span> <span class="ss">:setex</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:setnx</span><span class="p">,</span> <span class="ss">:setrange</span><span class="p">,</span> <span class="ss">:sinter</span><span class="p">,</span> <span class="ss">:sinterstore</span><span class="p">,</span> <span class="ss">:sismember</span><span class="p">,</span> <span class="ss">:smembers</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:smove</span><span class="p">,</span> <span class="ss">:sort</span><span class="p">,</span> <span class="ss">:spop</span><span class="p">,</span> <span class="ss">:srandmember</span><span class="p">,</span> <span class="ss">:srem</span><span class="p">,</span> <span class="ss">:strlen</span><span class="p">,</span> <span class="ss">:subscribe</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:sunion</span><span class="p">,</span> <span class="ss">:sunionstore</span><span class="p">,</span> <span class="ss">:ttl</span><span class="p">,</span> <span class="ss">:type</span><span class="p">,</span> <span class="ss">:unsubscribe</span><span class="p">,</span> <span class="ss">:watch</span><span class="p">,</span> <span class="ss">:zadd</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:zcard</span><span class="p">,</span> <span class="ss">:zcount</span><span class="p">,</span> <span class="ss">:zincrby</span><span class="p">,</span> <span class="ss">:zinterstore</span><span class="p">,</span> <span class="ss">:zrange</span><span class="p">,</span> <span class="ss">:zrangebyscore</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:zrank</span><span class="p">,</span> <span class="ss">:zrem</span><span class="p">,</span> <span class="ss">:zremrangebyrank</span><span class="p">,</span> <span class="ss">:zremrangebyscore</span><span class="p">,</span> <span class="ss">:zrevrange</span><span class="p">,</span>
</span><span class='line'>             <span class="ss">:zrevrangebyscore</span><span class="p">,</span> <span class="ss">:zrevrank</span><span class="p">,</span> <span class="ss">:zscore</span><span class="p">,</span> <span class="ss">:zunionstore</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">redis</span> <span class="o">=</span> <span class="no">Redis</span><span class="o">.</span><span class="n">current</span><span class="p">)</span>
</span><span class='line'>    <span class="n">key</span> <span class="o">=</span> <span class="n">key</span><span class="o">.</span><span class="n">to_redis_key</span> <span class="k">if</span> <span class="n">key</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:to_redis_key</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@redkey</span> <span class="o">=</span> <span class="n">key</span>
</span><span class='line'>    <span class="vi">@redis</span> <span class="o">=</span> <span class="n">redis</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Mimics the similar hash method, but gets value from Redis</span>
</span><span class='line'>  <span class="c1"># @param [Object] key Key in the sky</span>
</span><span class='line'>  <span class="c1"># @return [Object] a value for key</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">[]</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>    <span class="n">key</span> <span class="o">=</span> <span class="n">key</span><span class="o">.</span><span class="n">to_redis_key</span> <span class="k">if</span> <span class="n">key</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:to_redis_key</span><span class="p">)</span>
</span><span class='line'>    <span class="n">realkey</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">redkey</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">value</span> <span class="o">=</span> <span class="vi">@redis</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">realkey</span><span class="p">)</span>
</span><span class='line'>    <span class="n">value</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="kp">nil</span> <span class="p">:</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="k">rescue</span> <span class="nb">eval</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Mimics the similar hash method, but sets the value in Redis</span>
</span><span class='line'>  <span class="c1"># @param [Object] key   Key in the sky</span>
</span><span class='line'>  <span class="c1"># @param [Object] value a value for key</span>
</span><span class='line'>  <span class="c1"># @return [Object] an passed value</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">[]=</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="n">key</span> <span class="o">=</span> <span class="n">key</span><span class="o">.</span><span class="n">to_redis_key</span> <span class="k">if</span> <span class="n">key</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:to_redis_key</span><span class="p">)</span>
</span><span class='line'>    <span class="n">realkey</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">redkey</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="vi">@redis</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">realkey</span><span class="p">,</span> <span class="n">value</span><span class="o">.</span><span class="n">to_json</span><span class="p">)</span>
</span><span class='line'>    <span class="n">value</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Mimics the similar hash method, but gets the list of the keys from Redis</span>
</span><span class='line'>  <span class="c1"># @return [Array] array of keys</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">keys</span>
</span><span class='line'>    <span class="c1"># Because a limitation of this implementation, we filter out keys what not in our scope</span>
</span><span class='line'>    <span class="n">redis</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">find_all</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="o">|</span> <span class="n">k</span><span class="o">.</span><span class="n">starts_with?</span><span class="p">(</span><span class="n">redkey</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="o">|</span> <span class="n">k</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/^</span><span class="si">#{</span><span class="n">redkey</span><span class="si">}</span><span class="sr">:/</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Mimics the similar hash method, but removes the key from Redis</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">delete</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>    <span class="n">realkey</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">redkey</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">oldval</span> <span class="o">=</span> <span class="nb">self</span><span class="o">[</span><span class="n">key</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@redis</span><span class="o">.</span><span class="n">del</span><span class="p">(</span><span class="n">realkey</span><span class="p">)</span>
</span><span class='line'>    <span class="n">oldval</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">clear</span>
</span><span class='line'>    <span class="n">each_key</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="o">|</span> <span class="n">delete</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">each_key</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="n">keys</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="o">|</span>
</span><span class='line'>      <span class="k">yield</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">inspect</span>
</span><span class='line'>    <span class="n">s</span> <span class="o">=</span> <span class="s2">&quot;RedisHash(%s)&quot;</span>
</span><span class='line'>    <span class="n">keyz</span> <span class="o">=</span> <span class="n">keys</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="o">].</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="o">|</span> <span class="n">k</span><span class="o">.</span><span class="n">to_sym</span><span class="o">.</span><span class="n">inspect</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">keyz</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;, ...&quot;</span> <span class="k">if</span> <span class="n">keys</span><span class="o">.</span><span class="n">size</span> <span class="o">&gt;</span> <span class="mi">10</span>
</span><span class='line'>    <span class="nb">sprintf</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">keyz</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">METHODS</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">meth</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">class_eval</span> <span class="o">&lt;&lt;-</span><span class="no">EVAL</span>
</span><span class='line'><span class="sh">      def #{meth}(*args, &amp;block)</span>
</span><span class='line'><span class="sh">        redis.send(:#{meth}, self, *args, &amp;block)</span>
</span><span class='line'><span class="sh">      end</span>
</span><span class='line'><span class="no">    EVAL</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>It is a really naive implementation and I didn&#8217;t checked all hash methods to be working against this class, but a most used ones are working correctly.</p>

<p>A special thing where this class is differs from &#8220;normal&#8221; hashes is this is needs an initialization via constructor.</p>

<p><code>RedisHash</code>&#8217;s constructor takes two parameter. First is a symbol, this will identify our hash. Be careful when you choose this key: it should be unique in the Redis server because if you reconnect again to this hash, you can get stored data again. It works like a database name in MySQL.</p>

<p>The second parameter is an existing Redis connection. If you do not pass it, be careful you have to initialize <code>Redis.current</code> connection before you call anything on this hash.</p>

<p>Take the following example:</p>

<figure class='code'><figcaption><span>Collection server</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">count_log_files</span><span class="p">(</span><span class="n">dir</span><span class="p">)</span>
</span><span class='line'>  <span class="n">rdb</span> <span class="o">=</span> <span class="no">RedisHash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:dirs</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">directory?</span><span class="p">(</span><span class="n">dir</span><span class="p">)</span>
</span><span class='line'>    <span class="n">entries</span> <span class="o">=</span> <span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2">/*&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">entries</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">entry</span><span class="o">|</span>
</span><span class='line'>      <span class="n">collect_log_files</span><span class="p">(</span><span class="n">entry</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">file</span> <span class="o">=</span> <span class="n">dir</span>
</span><span class='line'>    <span class="n">dir</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">file</span> <span class="o">=~</span> <span class="sr">/\.log$/</span>
</span><span class='line'>      <span class="n">rdb</span><span class="o">[</span><span class="n">dir</span><span class="o">]</span> <span class="o">=</span> <span class="n">rdb</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="n">dir</span><span class="p">)</span> <span class="p">?</span> <span class="mi">1</span> <span class="p">:</span> <span class="n">rdb</span><span class="o">[</span><span class="n">dir</span><span class="o">]</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Collection client</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rdb</span> <span class="o">=</span> <span class="no">RedisHash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:dirs</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">rdb</span><span class="o">.</span><span class="n">each_pair</span> <span class="k">do</span> <span class="o">|</span><span class="n">dir</span><span class="p">,</span> <span class="n">count</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2"> has </span><span class="si">#{</span><span class="n">count</span><span class="si">}</span><span class="s2"> log(s)&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The two service can run separatedly (on separated server too) without knowing anything about each other. In both server and client side after initialization, you can treat RedisHash as a normal ruby hash - you can assign or query a value or iterate over keys and values. And these operations immediatelly executed on your Redis db.</p>

<p>If you note, I defined some methods on the hash what can help us to manage our Redis db. It can be useful if you want to get or set some special value what stored in your DB.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMine és TeamCity]]></title>
    <link href="http://hron.me/blog/2012/11/rubymine-es-teamcity/"/>
    <updated>2012-11-11T11:08:00+01:00</updated>
    <id>http://hron.me/blog/2012/11/rubymine-es-teamcity</id>
    <content type="html"><![CDATA[<p>Már régóta keresek egy olyan IDE-t, ami képes nem csak projektszinten kezelni és szintaxis-kiemelést adni a Ruby/Rails projektjeimnek,
de magát a nyelvet is &#8220;beszéli&#8221;, vagyis van például kódkiegészítés, refaktorálás, figyelmeztetések, etc, etc.
Az általam eddig ismert legkomolyabb IDE, a NetBeans is csak elég alapszinten beszélte a Ruby nyelvet - aztán ki is vették belőle a támogatást,
jelenleg a plugin folyamatosan haláltusáját vívja, 7.2-höz már meg sem jelent semmiféle verzió.</p>

<p>Egy StackOverflow böngészés során akadtam rá a JetBrains <a href="http://www.jetbrains.com/ruby/">RubyMine</a> nevű IDE-jére. Saját bevallásuk szerint az
eszköz képes nyelvi szinten is kezelni a Ruby-t, illetve támogatja az összes nagyobb teszkörnyezetet. Mivel amúgy is épp indítottam egy projektet,
úgy gondoltam, adok neki egy esélyt, hát legfeljebb letörlöm, és folytatom az eddigi módon, TextMate és Vim párossal. Szerencsére csalódtam. Pozitívan.
Hatalmasat.</p>

<p>A RubyMine ugyanis nem csak egyszerűen jó, hanem - amennyire tudom - a maga nemében jelenleg páratlan a piacon azzal, hogy tényleg hozza azt, amit ígér,
vagyis teljes mértékben támogatja a Ruby nyelvet és a Rails keretrendszert, sőt, még ennél is tovább megy, beépített támogatása van a lokalizációk kezeléséhez,
grafikusan mutatja, hogy mely mdoeljeink vannak adatbázisban, képes a Rails projekt szerkezetét Rails-aspektusú nézetben mutatni (ahol nem mappák és fájlok vannak,
hanem kategóriák, pl. Controllers, Models, Helpers), a kontrollerek akcióihoz hozzá tudja rendelni a nézeteket, partialokat, a refaktor során pedig olyan mélységekbe is
lemegy, amiről álmodni sem mertem soha - egy modell átnevezésekor képes a nézetekben is utánanézni az útvonal metódusoknak, és megfelelően átnevezni azokat!</p>

<p>Ezen felül csak úgy mellékesen, képes kezelni az <a href="http://rvm.io">RVM</a>-et, támogatja a <a href="http://gembundler.com/">Bundler</a>t, a Rails generátorokat, a Rake taszkokat, SCSS-t meg CoffeeScript-et, &#8230; meg ilyen kis semmiségeket is.</p>

<p>Az egyetlen probléma vele a kissé hiperaktív kódkiegészítése, ha leírok egy nyilat, rögtön ugrana rá, pedig én magamtól szoktam szóközt is ütni utána, de azzal meg
elfogadom az első lehetőséget is egyben - ami általában rossz ötlet. Biztos le lehet valahogy beszélni róla, majd utánanézek (de ha valaki tudja a tuti megoldást,
a komment doboz mindig nyitott az ilyesmikre :-) ), egyelőre még elviselem.</p>

<p>Jelenleg folyamatosan használom az épp aktív projektemhez, teljesen jól szolgál, bár még képességeinek csak szerény részét használom. Most egyelőre a 30 napos
próbaidőszakban vagyunk (dicséretes, hogy ez alatt sem ugrál föl valami kis ablak indításkor, hogy még 22.45 nap van hátra, és mostazonnal vedd meg - ez rém undorító,
ha tetszik, úgyis megveszem - főleg, mert lejár -, ha meg nem tetszik, akkor ez a kapacitálás csak ront a dolgon), ám azt gondolom, hogy a 66 euro a személyes licencért abszolút megéri.</p>

<p>Amit nem használok belőle (sem), az a Git integráció, nekem a git még mindig parancssoros dolgot jelent, egyszerűbb kiadni a <code>git co feature-awesome-stuff</code> parancsot,
mint GUI-ban kikattintgatni. Legalábbis szerintem.</p>

<p>A JetBrains honlapját tallózgatva (ismét) ráakadtam a <a href="http://www.jetbrains.com/teamcity/">TeamCity</a> nevű CI szerverre is, ezzel egyszer volt már egy futó kapcsolatom, de
valamiért nem sikerült telepíteni, és a végén Jenkins lett belőle. Most ismét kapott tőlem egy lehetőséget, hogy elinduljon, és meggyőzzön. Ezúttal mindkettő sikerült is neki.</p>

<p>A TeamCity-ről azt érdemes tudni, hogy egy olyan Continous Integration szerver (továbbiakban CI szerver), melyet nagyon egyszerű kezelni, és nagyon jól áttekinthető felületet
ad, még egy felületes szemlélő számára is (ezt muszáj volt elsütni :-) ).</p>

<p>A RubyMine fejlesztők blogján pedig találtam egy <a href="http://blog.jetbrains.com/ruby/2009/11/jetbrains-teamcity-continuous-integration-for-ruby/">írást</a>, mely borzasztóan felcsigázta a kíváncsiságomat.
Azt merték ugyanis állítani, hogy  TeamCity beépítetten képes kezelni a RSpec és a Cucumber tesztek kimenetét, arrol riportot készít, hibáról értesít. Plusz, a TeamCity beépítetten támogatja az XMPP alapú notifikációt, amit pl. a Jenkins csak pluginnel tud.</p>

<p>Sajnos a TeamCity egyik hiányossága, hogy ő viszont már csak korlátozott mértékben képes kezelni a Bundlert: képes felismerni a létét, és azon keresztül futtatni a rake taszkokat, de már pl. egy <code>bundle install</code> -t képtelen elengedni, azt kézzel kell egy külön Build Step-ben, viszonylag kacifántosan megoldani. Végül sikerült, de azért nem voltam felhőtlenül boldog.
Viszont az első teszteredmények feledtették velem az ezen a téren történt csalódást, mert pontosan azt kaptam, amit elvártam: mindenféle külön konfiguráció nélkül jelenítete meg a Cucumber es RSpec tesztek eredményét, ráadásul egy egészen barátságos felületen.</p>

<p>Tényleg nem JetBrains reklámnak szánom ezt a postot, de azért annyira érződik mindkét terméken, hogy ezeket olyanok fejlesztik, akik láttak már közelről Rails projektet, meg RVM-et, meg ilyesmit&#8230; például a Jenkins Ruby pluginjénél nem volt ilyen érzésem.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Logging with Logstash]]></title>
    <link href="http://hron.me/blog/2012/10/logging-with-logstash/"/>
    <updated>2012-10-27T22:33:00+02:00</updated>
    <id>http://hron.me/blog/2012/10/logging-with-logstash</id>
    <content type="html"><![CDATA[<p>In these days I started looking up for an opensource, easy-to-use central logging system.
I read a lot of articles on the internet, and I found two good solution,
<a href="http://www.graylog2.org">Graylog2</a> and <a href="http://logstash.net/">LogStash</a>. Both system can
operate as syslog server and store our logs in database. I tried both system, and I
experienced both have small problems - but some of these problems are different.</p>

<h2>Graylog2</h2>

<p>Graylog has a very good-looking interface and a relative easy configuration file. It has
a lot of parameters, but the default configuraiton file is well-documented and easy to read.</p>

<p>Graylog uses a MongoDB for store some small stuffs and ElasticSearch for store and search logs.
The main advantage of this solution is the separated web interface. It can be installed anywhere,
it just need a some small configurations to connect to same ES/Mongo instances as Graylog server uses.</p>

<p>The web ui makes easy to search and filter logs, backlist some entries, and create a &#8220;channels&#8221; what is
a named filter setting, where you can follow what happening in a simple context.</p>

<p>But as I started use web interface and the server itself in everyday tasks, I found two problems:</p>

<ul>
<li>Web interface is does not make easy to write filters, because nor the interface, nor the documentation
not describe how filters will be matched against messages. Because these filters are simple regular
expressions, it is needed to know how to search some specific things. I sucked with it a lot of time
until I found a method to find something. It is need a lot of improvement.</li>
<li>Graylog seems does not take care about its input. After a week I found logging is stopped working. After
some investigation, I discovered the ElasticSearch eaten a lot of resources and generating a huge log.
After reading log I found the ElasticSearch is broken on some invalid characters in index files. I
tried to restart ES server and leave to recover itself for a hour but no luck, it stuck in recovering state.
Because I am not know well ES and graylog I started ask Google about these problems, but I did not find a
good solution for me. So I decided to move on from Graylog.</li>
</ul>


<h2>LogStash</h2>

<p>LogStash is a more robust logging solution. It is similar as syslog-ng but it does not restrict itself to working
as Syslog server (with other words: get infos from input like syslog server) but it can chew anything what is a text
stuff. It can use a lot of things as a log source, e.g.:</p>

<ul>
<li>Syslog server (it can act as syslog server, but see below)</li>
<li>Plain file</li>
<li>Raw TCP/UDP socket</li>
<li>Output of any executable</li>
<li>IRC/Jabber channels</li>
<li>Twitter</li>
<li>Stdin</li>
<li>Windows Eventlog</li>
<li>and so on&#8230;</li>
</ul>


<p>And it has a numerous output format too. What is important for me is it can use ElasticSearch and some No-SQL
databases as log-storing backend.</p>

<p>It has a built-in web interface for searching in log records, but <a href="https://github.com/rashidkpc/Kibana/">Kibana</a>
is a little better Web interface to search against ElasticSearch, it makes searching/filtering easier.</p>

<p>My current configuration is very easy:</p>

<ul>
<li>There is a central syslog server, provided by LogStash</li>
<li>All my server is logging here via RSyslog (default syslog server of Debian Linux)</li>
<li>LogStash is configured to store log messages in ElasticSearch after some parsing</li>
</ul>


<p>Basically, I followed the <a href="http://cookbook.logstash.net/recipes/syslog-pri/">official recipe</a> for this setup except
one thing: somehow I couldn&#8217;t get working the date parser in the way what recipe says. So I tricked it out.</p>

<p>First, I created an Rsyslog config part, what I uploaded to /etc/rsyslog.d on every server:</p>

<figure class='code'><figcaption><span>/etc/rsyslog.d/to-logstash.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$template LOGSTASH,&quot;&lt;%PRI%&gt;%timegenerated:::date-rfc3164-buggyday% %HOSTNAME% %APP-NAME%: %msg:::drop-last-lf%\n&quot;
</span><span class='line'>$ActionForwardDefaultTemplate LOGSTASH
</span><span class='line'>*.*   @1.2.3.4:514
</span></code></pre></td></tr></table></div></figure>


<p>Note the <code>%timegenerated:::date-rfc3164-buggyday%</code> directive. The documentation of Rsyslog says it is basically
pads a day number with zero if it is smaller than 10. It is introduced to emulate a syslog-ng &#8216;bug&#8217;.</p>

<p>After it I created a following configuration for logstash:</p>

<figure class='code'><figcaption><span>LogStash configuration</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>input {
</span><span class='line'>  tcp {
</span><span class='line'>    port =&gt; 514
</span><span class='line'>    type =&gt; syslog
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  udp {
</span><span class='line'>    port =&gt; 514
</span><span class='line'>    type =&gt; syslog
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>filter {
</span><span class='line'>  grok {
</span><span class='line'>      type =&gt; &quot;syslog&quot;
</span><span class='line'>      pattern =&gt; [ &quot;&lt;%{POSINT:syslog_pri}&gt;%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{PROG:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}&quot; ]
</span><span class='line'>      add_field =&gt; [ &quot;received_at&quot;, &quot;%{@timestamp}&quot; ]
</span><span class='line'>      add_field =&gt; [ &quot;received_from&quot;, &quot;%{@source_host}&quot; ]
</span><span class='line'>  }
</span><span class='line'>  syslog_pri {
</span><span class='line'>      type =&gt; &quot;syslog&quot;
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  date {
</span><span class='line'>      type =&gt; &quot;syslog&quot;
</span><span class='line'>  #    syslog_timestamp =&gt; [ &quot;MMM  d HH:mm:ss&quot;, &quot;MMM dd HH:mm:ss&quot; ]
</span><span class='line'>      syslog_timestamp =&gt; [ &quot;MMM dd HH:mm:ss&quot; ]
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  mutate {
</span><span class='line'>      type =&gt; &quot;syslog&quot;
</span><span class='line'>      exclude_tags =&gt; &quot;_grokparsefailure&quot;
</span><span class='line'>      replace =&gt; [ &quot;@source_host&quot;, &quot;%{syslog_hostname}&quot; ]
</span><span class='line'>      replace =&gt; [ &quot;@message&quot;, &quot;%{syslog_message}&quot; ]
</span><span class='line'>  }
</span><span class='line'>  mutate {
</span><span class='line'>      type =&gt; &quot;syslog&quot;
</span><span class='line'>      remove =&gt; [ &quot;syslog_hostname&quot;, &quot;syslog_message&quot;, &quot;syslog_timestamp&quot; ]
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>output {
</span><span class='line'>  elasticsearch {
</span><span class='line'>    index =&gt; &quot;syslog-%{+YYYY.MM.dd}&quot;
</span><span class='line'>    embedded =&gt; false
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  #stdout { debug =&gt; true debug_format =&gt; json }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># vim: ts=2 sw=2 et
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Note the commented out date mapping. This is what original recipe says but I always got an exception
related to parser and DateFormat what complaining about invalid data in the date. With buggyday hack
on Rsyslog side I made dates 2-digit long, so it will always be parsed, I hope. It will reveals at least
Nov 1.</p>

<p>The last output stuff is just for debugging, it displays the parsed object in JSON format, this is a way
how can you check your all filter working correctly.</p>

<p>I sucked with parsing the message because my old rsyslog template has a typo and I could not imagine, what
failing.
After some digging, I found jls-grok RubyGem is contains a same parser what LogStash uses, so you can
check your filters via IRB. Just make sure you using 1.9.3 ruby, because Ruby 1.8 throws a SyntaxError
when you try <code>require 'grok-pure'</code> (what is recommended, because the simple &#8216;grok&#8217; is searching a C lib).</p>

<figure class='code'><figcaption><span>Simple example for testing Grok filter</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;grok-pure&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">grok</span> <span class="o">=</span> <span class="no">Grok</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># I extracted patterns dir from jar package</span>
</span><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;patterns/*&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">grok</span><span class="o">.</span><span class="n">add_patterns_from_file</span> <span class="n">f</span> <span class="p">}</span>
</span><span class='line'><span class="n">s</span><span class="o">=</span><span class="s2">&quot;Oct 27 19:01:09&quot;</span>
</span><span class='line'><span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;%{SYSLOGTIMESTAMP:syslog_timestamp}&#39;</span>
</span><span class='line'><span class="n">grok</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="n">pattern</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">grok</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="o">.</span><span class="n">match</span><span class="o">.</span><span class="n">to_a</span> <span class="c1"># =&gt; [&quot;Oct 27 19:01:09&quot;, &quot;Oct 27 19:01:09&quot;, &quot;Oct&quot;, &quot;27&quot;, &quot;19:01:09&quot;, &quot;19&quot;, &quot;01&quot;, &quot;09&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can use exactly same pattern as you use in LogStash configuration file.</p>

<p><strong>Note:</strong> If you see a <code>_grokparsefailure</code> tag in your tag list, then you do something wrong. This means
the filter what you using in first filter does not match correctly on your syslog message from Rsyslog.
The good news is LogStash stop evaluating filters on the first failing in debug mode, and leave @message
untouched (if you see the second mutate from end, you can see we replace @message with the content of
syslog_message, and remove unneccessary fields in the last mutate filter). If somehow it falls through
the grok filter and removes the original (raw) message, then simply comment out the last two filter by
prefixing lines with a hashmark.</p>

<p>As you see in the config  use an external ES server, not the embedded one, because I currently have a
working and configured ES instance, and I would like to use that. No other reason to not use embedded
ES server: if you currently not have an ES instance, then simply use what shipped with LogStash.</p>

<p>The embedded web interface of LogStash is a bit tricky thing, because I could not start as documentation says
via the java command, I had to extract the jar file and run standalone to check its user interface.
Don&#8217;t expect something cool: It is just a textfield with a button and contains a link with a basic
query string what filters messages generated today.</p>

<h2>Conclusion</h2>

<p>I think Graylog is a great logging solution, but it needs some love for prevent crashing ES server with
invalid characters in the stored data. But the web interface and easy configuration makes it very,
really very lovely.</p>

<p>LogStash is a good solution if you want to handle multiple log sources or you want to validate/manipulate
your log messages or you want to distribute logs to multiple destinations. I think LogStash is a little
overkill if you just want a central syslog server, however - this is working as expected. So I took my
two cent on LogStash and not on Graylog - even if I would like to prefer Graylog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Guard - projektjeink testőre]]></title>
    <link href="http://hron.me/blog/2012/10/guard-projektjeink-testore/"/>
    <updated>2012-10-23T14:37:00+02:00</updated>
    <id>http://hron.me/blog/2012/10/guard-projektjeink-testore</id>
    <content type="html"><![CDATA[<p>Nem olyan régen ismerkedtem meg a <a href="https://github.com/guard/guard">guard</a> nevű
gemmel, ami egy nagyon hasznos kis szerszám annak, aki Rails fejlesztésre adja
a fejét, de plug-injei révén például PHP fejlesztők is profitálhatnak a tudásából.</p>

<!-- more -->


<p>Ez a kis cucc arra képes, hogy figyelje a projekt fájljait változások után
kutatva, és amikor változik valami, pl. elmentünk egy fájlt, akkor végre tud
hajtani bizonyos műveleteket.</p>

<p>Vegyünk két nagyon alap kis példát:</p>

<p>Van egy PHP projektünk, melyben PHPunit teszteket szeretnénk futtatni. Minden
egyes osztályunkhoz tartozik, egy hasonló nevű teszt osztály, csak Test van a
végén. Tehát a User -t a UserTest, a Car-t a CarTest osztály teszteli. Ekkor:</p>

<figure class='code'><figcaption><span>Guard konfiguráció PHPUnit-hoz </span><a href='https://github.com/guard/guard-phpunit'>Több infó</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">guard</span> <span class="s1">&#39;phpunit&#39;</span><span class="p">,</span> <span class="ss">:tests_path</span> <span class="o">=&gt;</span> <span class="s1">&#39;Tests&#39;</span><span class="p">,</span> <span class="ss">:cli</span> <span class="o">=&gt;</span> <span class="s1">&#39;--colors&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># Figyeljük az összes teszt osztály változását</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^.+Test\.php$}</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Figyeljük az osztályok változását, és futtatjuk a megfelelő teszteket</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^Classes/(.+)\.php}</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">m</span><span class="o">|</span> <span class="s2">&quot;Tests/</span><span class="si">#{</span><span class="n">m</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">Test.php&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nem kell aggódni, ha a második esetnél az adott teszt osztály nem létezik,
akkor egyszerűen nem történik semmi.</p>

<p>A Guard-hoz rengeteg féle <a href="https://github.com/guard">plug-in</a> létezik már,
de legrosszabb esetben lehetséges shell parancsokat is <a href="https://github.com/guard/guard-shell">futtatni</a>
fájlváltozáskor.</p>

<p>Amire érdemes odafigyelni, az a függőségek. A Guard-nak egyrészt szüksége
van a platformunknak megfelelő fájlváltozás-érzékelő plug-inre, illetve
mivel képes minden platformon a platformnak megfelelően értesítést is
küldeni, így ezeket a plug-injeit is megfelelően konfigurálni kell.</p>

<p>Néhány dolog, amire figyelni kell:</p>

<ul>
<li>Mac OS X 10.8-nél korábbi verziólnál szükséges a <a href="http://growl.info">Growl</a> telepítése
(10.8-hoz van plug-in a beépített értesítési rendszer használatára)</li>
<li>Windows alatt a <a href="https://github.com/luislavena/win32console">win32console</a> gem nélkül nincsenek színek</li>
</ul>


<p>Emiatt én mindig Gemfile segítségével telepítem. Egy alap Gemfile álljon itt ehhez:</p>

<figure class='code'><figcaption><span>Gemfile Guard használatához</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># Guard</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;guard&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.4.0&#39;</span>
</span><span class='line'>  <span class="k">if</span> <span class="no">RUBY_PLATFORM</span> <span class="o">=~</span> <span class="sr">/darwin/i</span>
</span><span class='line'>    <span class="k">if</span> <span class="sx">%x{sw_vers -productVersion}</span><span class="o">.</span><span class="n">strip</span> <span class="o">=~</span> <span class="sr">/^10\.8/</span>
</span><span class='line'>      <span class="n">gem</span> <span class="s1">&#39;terminal-notifier-guard&#39;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">gem</span> <span class="s1">&#39;ruby_gntp&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">gem</span> <span class="s1">&#39;rb-fsevent&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.9.1&#39;</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="no">RUBY_PLATFORM</span> <span class="o">=~</span> <span class="sr">/linux/i</span>
</span><span class='line'>    <span class="n">gem</span> <span class="s1">&#39;rb-inotify&#39;</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="no">RUBY_PLATFORM</span> <span class="o">=~</span> <span class="sr">/(mswin|mingw)/i</span>
</span><span class='line'>    <span class="n">gem</span> <span class="s1">&#39;win32console&#39;</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">gem</span> <span class="s1">&#39;wdm&#39;</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Guard plug-ins</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;guard-phpunit&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>A függőségek telepítése a <code>bundle install</code> míg a Guard futtatása a <code>bundle exec guard start</code> paranccsal zajlik.</p>

<p>A Guard fájlt használatba vétel előtt inicializálni is kell, ezt a <code>bundle exec guard init</code> paranccsal tehetjük meg.
Ha menet közben telepítünk olyan plug-int, mely futtatásra alkalmas (tehát nem értesítő plug-in), akkor azt a
<code>bundle exec guard init PLUGIN_NAME</code> paranccsal tehetjük meg, a plug-in neve pedig mindig a guard- után álló rész (pl. shell).
Egyébként a legtöbb plug-in README fájlja nagyon részletes útmutatót tartalmaz a plug-in használatáról.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub powa]]></title>
    <link href="http://hron.me/blog/2012/10/github-powa/"/>
    <updated>2012-10-21T01:53:00+02:00</updated>
    <id>http://hron.me/blog/2012/10/github-powa</id>
    <content type="html"><![CDATA[<p>Egy régóta dédelgetett álom vált ma valóra: végre megtaláltam a megfelelő környezetet arra, hogy felköltözzem a GitHub-ra.
Már régóta tervezgettem a költözést, egészen pontosan azóta, amióta olvastam a <a href="http://pages.github.com">GitHub Pages</a>
szolgáltatásról - már nem tudom, hol. Mert igazából ez az, ami nekem kell: egy szövegfájl, amibe beleírom a gondolataimat,
néhány egyszerű trükk, amivel megformázom, és végül pár gombnyomás, amivel beküldöm.</p>

<!-- more -->


<h2>Blogtörténelem</h2>

<p>Eredetileg Wordpress alapú blogom volt. Az túlzás lenne, hogy szerettem, mondjuk, hogy kedveltem. Mármint a blogot. Az adminfelületét már
nem annyira, azt pedig főleg nem, hogy állandóan nyüzsgött valami miatt. Most ez a plugin frissült, most a Wordpress frissült,
most épp valami spam van&#8230; őszintén szólva egy idő után azt vettem észre, hogy belépek azzal, hogy na most cikket írok, aztán
a végén plugint frissítettem - a cikkre meg valahogy elszállt az ihlet.</p>

<p>Ezután volt egy hosszabb időszak, amikor saját készítésű (Rails alapú, mi más? :-) ) blogmotoron futottak a dolgok. Ez is zsákutcának
bizonyult, bár másért, mint a WP: nem volt elég szabadidőm arra, hogy igényesen megcsináljam. Zavart az, hogy lehetne sokkal jobb is.</p>

<p>A legutolsó időszak a <a href="http://posterous.com/">Posterous</a>-on zajlott. Imádnivaló blogszolgáltatás - apróbb és nagyobb hibákkal.
Az első és - számomra - legzavaróbb bugja az URL generálással volt kapcsolatos. Nem tudom, ki-hogy van vele, én nem rajongok a generált
ID-re végződő URL-ekért. No nem mintha seo mániás lennék, egyszerűen zavarja a szépérzékemet. Volt olyan cikk a blogon, amit 5x kellett
elmenteni, hogy végre észrevegye magát a motor, hogy én itt bizony címet adtam a bejegyzésnek. De ez nem is lenne gond, ha felül lehetne
bírálni az automatát, mert bepöttyentem én azt a három ékezetmentes szót kötőjellel elválaszva, amit ő generálna ki - csakhogy erre esély
sem volt.</p>

<p>A másik bug inkább csak szomorú mint zavaró volt: semmilyen kódformázási lehetőség nem volt. Beszúrhattál &lt;code&gt; taget a cikkbe, és
ennyi. Még rendes class-t sem tudtam neki adni, mert a motor leirtott minden egyénieskedési törekvést, így nem jöhettek szóba a JS alapú
kódszinezők sem.</p>

<p>A harmadik problémát a Posterous cloud-szerű működése jelentette. Nem tetszettek a beépített témák, sajátot akartam. Ezt végül véghez is
vittem, de a témához tartozó fájlokat egyszerűen nem tudtam a bloggal együtt tároltatni, egy külön helyről kellett szedni őket. Ezzel addig
nincs is baj, amíg egy reggel arra nem ébredek, hogy a blog képeit, CSS-eit, egyéb izémicsodáit tároló hely elérhetetlen. Ez azt
eredményezi, hogy van egy olvashatatlan blogom. Nem egy kellemes dolog.</p>

<p>Most viszont úgy néz ki, a <strong>GitHub Pages</strong> és az <a href="http://octopress.org">Octopress</a> megoldotta minden problémámat.
Nincs frissítési kötelezettség, az oldal plain HTML-ben tárolódik; a cikkeket az éppen aktuális kedvenc editoromban írhatom meg;
használhatom a kedvenc leírónyelvemet, a <a href="http://daringfireball.net/projects/markdown/">Markdown</a>-t, a cikkek URL-je automatikusan
generálódik, ha nem jó, beleszólhatok; a spammentességről pedig a <a href="http://disqus.com">Disqus</a> gondoskodik.</p>

<p>Az egyetlen dolog, ami hibádzik, és ezt nagyon szerettem a Posterous-ban, hogy ha ráküldtem e-mailben egy képet,
azt képes volt bejegyzéssé alakítani, és kirakni. Viszont szerencsére ez egy nagyon könnyen megvalósítható funkció.</p>

<p>Összességében úgy gondolom, hogy keveset veszítettem, de azt mind visszanyertem abban, hogy ez a blog nem igényel gondozást.
Nem kell aggódnom a spamek miatt, nem kell várakoznom a frissítésekre, nem kell tűnődni, hogy hogyan illesszek be kódot olvashatóan,
és nem kell túl sokat fejlesztenem se.</p>

<p><strong>PS</strong>: sajnos a Posterous-os kommenteket nem tudom ide áthozni, azok elvesztek számotokra. Szerencsére (?) nem volt túl sok&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Valamit másképpen]]></title>
    <link href="http://hron.me/blog/2012/09/valamit-maskeppen/"/>
    <updated>2012-09-09T01:14:58+02:00</updated>
    <id>http://hron.me/blog/2012/09/valamit-maskeppen</id>
    <content type="html"><![CDATA[<p>A HUP-on bedobott <a href="http://hup.hu/szavazasok/20120908/mit_tennel_az_utolso_napodon">szavaz&aacute;s</a>&nbsp;gondolkodtatott el azon, hogy csin&aacute;ln&eacute;k-e valamit alapvet&ouml;en m&aacute;sk&eacute;ppen, ha &uacute;jrakezdhetn&eacute;m az &eacute;letemet. Nagyon cs&aacute;b&iacute;t&oacute; a lehet&ouml;s&eacute;g, mert hib&aacute;ztam, nem is egyszer, sokszor, n&eacute;ha kicsit, n&eacute;ha nagyot.</p>

<p>Akkor &eacute;s ott &uacute;gy &eacute;reztem, hogy nagyon gyorsan meg kellene nyomni a backspace gombot, &eacute;s nekifutni megint. De ut&oacute;lag visszan&eacute;zve mindig r&aacute;j&ouml;v&ouml;k, hogy h&uuml;lyes&eacute;g lett volna. Mert akkor egy csom&oacute; j&oacute; dolog sem t&ouml;rt&eacute;nt volna meg velem az &eacute;letben.</p>

<p>Tal&aacute;n egyetlen esem&eacute;ny van, amit megakad&aacute;lyozn&eacute;k, b&aacute;r jelenleg nem tudom felm&eacute;rni, mekkora hat&aacute;sa lenne: a tavalyel&ouml;tt ny&aacute;ri esem&eacute;nyeket. Az az egy h&oacute;napnyi k&iacute;nl&oacute;d&aacute;s lehet, hogy megsp&oacute;rolhat&oacute; lett volna. Nem biztos, de lehet.</p>

<p>De a t&ouml;bbin nem v&aacute;ltoztatn&eacute;k. S&ouml;t, m&eacute;g csak azt sem szeretn&eacute;m, hogy eg&eacute;szs&eacute;gesen sz&uuml;lessek. Nem volt egyszer&uuml; a betegs&eacute;gemmel, ez t&eacute;ny. &Eacute;s azt is tudom, hogy a k&ouml;rnyezetemnek sem volt egyszer&uuml;. De ha nem annak sz&uuml;letek, akinek, ma nem lehetek az, aki, &eacute;s nem lehetnek azok a bar&aacute;taim, akik. A k&eacute;t legjobb bar&aacute;tomat &uacute;gy ismertem meg, hogy interneten k&eacute;rtek t&ouml;lem seg&iacute;ts&eacute;get. Eg&eacute;szs&eacute;gesk&eacute;nt tal&aacute;n nem &uuml;ln&eacute;k ennyit a g&eacute;p el&ouml;tt, hiszen nagyon impulz&iacute;v &eacute;s akt&iacute;v emberke vagyok egy&eacute;bk&eacute;nt, de ez azzal j&aacute;r, hogy lemaradn&eacute;k mindenr&ouml;l, ami most fontos.
Emiatt gondolom azt, hogy - b&aacute;r kellemetlen, de - nem baj az, ami van velem. &Eacute;n egy picit m&aacute;s vagyok, n&aacute;lam ez az &#8220;eg&eacute;szs&eacute;ges&#8221;.</p>

<p>V&aacute;lasztan&eacute;k-e m&aacute;sik csal&aacute;dot, k&ouml;rnyezetet? Aki k&ouml;zelebbr&ouml;l ismer, tudja, hogy n&aacute;lam m&eacute;g ez sem egy egyszer&uuml; eld&ouml;ntend&ouml; k&eacute;rd&eacute;s. De &uacute;gy gondolom, nem. Nem volt sima &eacute;letem, voltak g&ouml;r&ouml;ngy&ouml;k, bukkan&oacute;k, hegyek &eacute;s v&ouml;lgyek. Volt, amikor nagy volt a s&ouml;t&eacute;t, volt amikor sok volt a f&eacute;ny. De hiszem, hogy ezek is seg&iacute;tettek olyann&aacute; form&aacute;lni, amilyen most vagyok.&nbsp;</p>

<p>Csak n&eacute;h&aacute;ny dolog van, amiken v&aacute;ltoztatn&eacute;k. P&aacute;r &eacute;letvitelbeli apr&oacute;s&aacute;g. P&aacute;r apr&oacute; t&aacute;rgy, amire jobban vigy&aacute;zn&eacute;k. &Eacute;s n&eacute;h&aacute;ny ember, akikkel egy kicsit t&ouml;bb id&ouml;t t&ouml;lten&eacute;k, kicsit jobban szeretn&eacute;m &ouml;ket, mert &uacute;gy &eacute;rzem, ad&oacute;s maradtam. De ez minden.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Continous deployment, vagy afféle]]></title>
    <link href="http://hron.me/blog/2012/06/continous-deployment-vagy-affele/"/>
    <updated>2012-06-07T00:56:00+02:00</updated>
    <id>http://hron.me/blog/2012/06/continous-deployment-vagy-affele</id>
    <content type="html"><![CDATA[<p>Az ember a netet olvasgatva &eacute;rdekes dolgokra tud bukkanni, illetve sokszor nagyon j&oacute; &ouml;tleteket lehet kapni puszt&aacute;n a m&aacute;sok &iacute;r&aacute;saib&oacute;l.</p>

<p><a href="http://infokukac.com/2011/11/csak-egy-gombnyomas%E2%80%A6/">Info@ &iacute;rt</a> arr&oacute;l, hogy n&aacute;luk hogy ker&uuml;lt bevezet&eacute;sre az, hogy a tesztel&ouml;k gombnyom&aacute;sra deployolnak a teszt rendszerre verzi&oacute;kat. B&aacute;r n&aacute;lam max 1 tesztel&ouml; lenne, &eacute;s &ouml;t sem szeretn&eacute;m a Jenkins k&ouml;zel&eacute;be engedni, az&eacute;rt elgondolkodtatott a dolog: mi volna, ha a Jenkins egyr&eacute;szt monitorozn&aacute; a deploy &aacute;gat (ez n&aacute;lam a master &aacute;g, <a href="http://hron.me/blog/2012/04/a-legjobb-git-workflow-tovabbfejlesztve/">amint azt m&aacute;r eml&iacute;tettem</a>), ezen v&eacute;grehajtana egy deployment tesztet is a staging k&ouml;rnyezetre (ezzel lenne egy folyamatosan friss teszt k&ouml;rnyezet), illetve adott esetben meg lehetne k&eacute;rni &ouml;t arra, hogy, legyen m&aacute;r kedves az &eacute;les szerverre is kidobni az aktu&aacute;l k&oacute;dot.</p>

<p>Ez amennyire bonyolultan hangzik, annyira egyszer&uuml; volt megoldani. Egyr&eacute;szt a staging &eacute;s az &eacute;les szerverre fel kellett venni a Jenkins saj&aacute;t SSH kulcs&aacute;t (m&aacute;r r&eacute;gebbr&ouml;l volt ilyenem, mert a Jenkins slave-k kezel&eacute;s&eacute;hez kell), m&aacute;sr&eacute;szt kellett k&eacute;t olyan jobot csin&aacute;lni, amelyek elv&eacute;gzik a fent eml&iacute;tett k&eacute;t m&uuml;veletet.</p>

<p>Ut&aacute;na fogtam, lem&aacute;soltam azt a jobot, ami a norm&aacute;l (nem deployol&oacute;s) teszteket csin&aacute;lja, hozz&aacute;csaptam m&eacute;g egy l&eacute;p&eacute;st, miszerint deployoljon is a staging k&ouml;rnyezetbe. Illetve &aacute;t&iacute;rtam, hogy a master &aacute;gat figyelje.
Annyit m&eacute;g egyszer&uuml;s&iacute;tettem a dolgon, hogy egyik tesztn&eacute;l sem csin&aacute;lok coverage m&eacute;r&eacute;st, mert ez csak lass&iacute;tja a tesztek futtat&aacute;s&aacute;t, de &eacute;rdemi eredm&eacute;nyt nem ad hozz&aacute; a teszthez, hiszen itt a tesztek lefut&aacute;sa is csak az&eacute;rt fontos, hogy ha valaki v&eacute;letlen&uuml;l r&aacute;comittolt volna az &eacute;les &aacute;gra, miel&ouml;tt lefutna a deployment teszt, az m&eacute;g kibukjon. De &aacute;ltal&aacute;ban senki nem szokott.</p>

<p>Az &eacute;les deploy job annyiban volt k&uuml;l&ouml;nb&ouml;z&ouml; ett&ouml;l, hogy itt m&eacute;g kikapcsoltam a pollingoz&aacute;st is, mert ezt k&eacute;zzel (na j&oacute;, XMPP-n kereszt&uuml;l) fogom triggerelni, &eacute;s csak akkor, ha a staging k&ouml;rnyezetbe rendben kiker&uuml;lt a k&oacute;d, illetve mindenki j&oacute;v&aacute;hagyta a m&uuml;k&ouml;d&eacute;st is. Egy&eacute;bk&eacute;nt az el&ouml;z&ouml; job m&aacute;solata volt.</p>

<p>&Iacute;gy gyakorlatilag az van, hogy amikor release van, akkor szok&aacute;s szerint mergelek egyet a master &aacute;gra, ezt felnyomom a git rep&oacute;ba, majd neki&aacute;llok t&uuml;relmetlen&uuml;l lesni az IM kliensem ablak&aacute;t. N&eacute;mi id&ouml; eltelt&eacute;vel a Jenkins besz&oacute;l, hogy (j&oacute; esetben) az aktu&aacute;lis job &aacute;tment minden l&eacute;p&eacute;sen, &eacute;s k&eacute;szen &aacute;ll az &eacute;les&iacute;t&eacute;sre. Ekkor megk&eacute;rem a jenkins-t, hogy deployoljon (jenkins, build project-deploy now), ez &aacute;tfuttatja m&eacute;g egyszer a teszteket, majd kiteszi az &eacute;les szerverre a k&oacute;dot, &uacute;jraind&iacute;tja a thin webszervert hozz&aacute;, &eacute;s k&eacute;sz is. Mivel mind a teszteknek mind a deploymentnek r&eacute;sze az adatb&aacute;zis friss&iacute;t&eacute;se is (rake db:migrate), &iacute;gy nem fordulhat el&ouml;, hogy a db s&eacute;ma miatt halunk meg.</p>

<p>Az&eacute;rt itt m&eacute;g nincs v&eacute;ge a t&ouml;rt&eacute;netnek, a k&ouml;vetkez&ouml; l&eacute;p&eacute;s az, hogy ellen&ouml;rizni kell, hogy az app fel is bootolt-e tisztess&eacute;gesen. Sajnos a thin webszervernek megvan az a kellemetlen tulajdons&aacute;ga, hogy csak azt v&aacute;rja meg, am&iacute;g &ouml; maga meg a k&ouml;rnyezete felbootol, miel&ouml;tt forkol, mag&aacute;t a rails appot nem v&aacute;rja be. Vagyis lehet, hogy &uacute;gy kapsz HTTP 500-at, hogy am&uacute;gy a thin azt jelezte vissza, hogy sikeresen elindult (a deployment utols&oacute; mozzanata az appszerver &uacute;jraind&iacute;t&aacute;sa). Egyel&ouml;re most a k&eacute;zi mel&oacute; is j&oacute;, a j&ouml;v&ouml;ben meg sztem lesz egy negat&iacute;v teszt, egy fix oldalra fogok egy curl-t h&iacute;vni, ha HTTP 200 j&ouml;n vissza, m&aacute;r j&oacute;k vagyunk.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Qt fordítás kezdőknek]]></title>
    <link href="http://hron.me/blog/2012/04/qt-forditas-kezdoknek/"/>
    <updated>2012-04-20T15:59:00+02:00</updated>
    <id>http://hron.me/blog/2012/04/qt-forditas-kezdoknek</id>
    <content type="html"><![CDATA[<p>Nasz&oacute;val, ez a cikk itten arr&oacute;l fog sz&oacute;lni, hogy hogyan ford&iacute;tsunk magunknak forr&aacute;sb&oacute;l Qt-t &uacute;gy, hogy az ne piszk&iacute;tsa &ouml;ssze a rendszer&uuml;nket.</p>

<p>Hogy ez mi&eacute;rt is j&oacute;?</p>

<ul>
<li>A rendszer&uuml;nk r&eacute;gi Qt-t sz&aacute;ll&iacute;t, mi pedig egy &uacute;jhoz szeretn&eacute;nk fejleszteni</li>
<li>A Qt nyelvi f&aacute;jlokba akarunk belet&uacute;rni</li>
</ul>


<!-- more -->


<p>Az első l&eacute;p&eacute;s a megfelelő git repo lekl&oacute;noz&aacute;sa. Ez &aacute;ltal&aacute;ban a git://gitorious.org/qt/qt.git, de haszn&aacute;lhatunk m&aacute;s kl&oacute;nokat is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hron@laptop workspace $ git clone git://gitorious.org/qt/qt.git &amp;&amp; cd qt
</span><span class='line'>hron@laptop qt (master) $</span></code></pre></td></tr></table></div></figure>


<p>Egy p&aacute;r sz&oacute;t a promptr&oacute;l: az első k&eacute;t szekci&oacute; mindenkinek ismert kell hogy legyen, ugye felhaszn&aacute;l&oacute;n&eacute;v@g&eacute;pn&eacute;v illetve az aktu&aacute;lis mappa neve. A z&aacute;r&oacute;jeles r&eacute;sz tr&uuml;kk&ouml;sebb, ide az aktu&aacute;lis git <em>branch</em> neve ker&uuml;l, hogy egy&eacute;rtelmű legyen, hol dolgozunk. &Aacute;ltal&aacute;ban az alap&eacute;rtelmezett branch a <strong>master</strong> nevű, kl&oacute;noz&aacute;s ut&aacute;n teh&aacute;t ide jutunk.</p>

<p>Ezut&aacute;n ki kell v&aacute;lasztani a megfelelő branchet (a master szinte percről-percre v&aacute;ltozik, azzal nem &eacute;rdemes foglalkozni). A lehetős&eacute;gek t&aacute;rh&aacute;z&aacute;t a &#8220;git branch -r&#8221; parancs mutatja meg, v&aacute;lasztani a &#8220;git checkout -b <em>branch</em> origin/<em>branch</em>&#8221; paranccsal tudunk. &Eacute;n most a 4.7-es branchet fogom előszedni:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hron@laptop qt (master) $ git checkout -b 4.7 origin/4.7
</span><span class='line'>hron@laptop qt (4.7) $</span></code></pre></td></tr></table></div></figure>


<p>Ezut&aacute;n kezdődhet az &eacute;rdemi ford&iacute;t&aacute;s. A ford&iacute;t&aacute;s ugyan nem autoconf/automake alap&uacute;, a kezdeti l&eacute;p&eacute;st m&eacute;gis a configure script megfelelő param&eacute;terekkel t&ouml;rt&eacute;nő futtat&aacute;sa jelenti:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hron@laptop qt (4.7) $ ./configure -developer-build -opensource -confirm-license -nomake demos -nomake examples 
</span><span class='line'>hron@laptop qt (4.7) $</span></code></pre></td></tr></table></div></figure>


<p>A scriptnek van &#8211;help kapcsol&oacute;ja, mely ismerteti az &ouml;sszes haszn&aacute;lhat&oacute; kapcsol&oacute;t, &eacute;n az itt haszn&aacute;lt n&eacute;gyet emeln&eacute;m ki:</p>

<ul>
<li><strong>-developer-build</strong>: Arra utas&iacute;tja a ford&iacute;t&aacute;si rendszert, hogy ne a szok&aacute;sos /usr/lib/ jellegű &uacute;tvonalon keresse a libeket, hanem az aktu&aacute;lis k&ouml;nyvt&aacute;rban</li>
<li><strong>-opensource</strong>: A ny&iacute;lt forr&aacute;s&uacute; verzi&oacute;t ford&iacute;tjuk</li>
<li><strong>-confirm-license</strong>: Egy kis k&ouml;nnyebbs&eacute;g, nem kell interakt&iacute;van elfogadni a licencet. Scriptel&eacute;sn&eacute;l hasznos.</li>
<li><strong>-nomake</strong>: A param&eacute;terk&eacute;nt megadott k&ouml;nyvt&aacute;rban levő cuccokat nem fogja leford&iacute;tani. Nagyj&aacute;b&oacute;l a fenti k&eacute;t k&ouml;nyvt&aacute;r eset&eacute;ben van &eacute;rtelme haszn&aacute;lni, a t&ouml;bbin&eacute;l funkcioveszt&eacute;st kapunk ha haszn&aacute;ljuk (az src k&ouml;nyvt&aacute;r kiz&aacute;r&aacute;s&aacute;val meg nem kapunk semmit :-) ).</li>
</ul>


<p>Ezut&aacute;n egy kis molyol&aacute;s k&ouml;vetkezik, lefordul a <em>qmake</em> eszk&ouml;z, mely a Qt projektek ford&iacute;t&aacute;s&aacute;&eacute;rt felelős, majd ha m&aacute;r ott van, le is futtat&oacute;dik az &ouml;sszes qt-s cuccon, legener&aacute;lva a sz&uuml;ks&eacute;ges <em>Makefile</em>-okat.</p>

<p>Ezut&aacute;n a j&oacute;l ismert make parancs k&ouml;vetkezik, mely leforgatja a Qt forr&aacute;st.</p>

<p>Ha a nyelvi f&aacute;jlok friss&iacute;t&eacute;s&eacute;n t&ouml;rj&uuml;k a fej&uuml;nket, akkor ezen a ponton van m&eacute;g egy teendőnk: ha eld&ouml;nt&ouml;tt&uuml;k mely nyelvi f&aacute;jlokkal akarunk dolgozni (a p&eacute;ld&aacute;ban ez a &#8216;hu&#8217; lesz), akkor az al&aacute;bbi parancsra van sz&uuml;ks&eacute;g&uuml;nk:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hron@laptop qt (4.7) $ make ts-hu
</span><span class='line'>hron@laptop qt (4.7) $</span></code></pre></td></tr></table></div></figure>


<p>&Eacute;rtelemszerűen, ha a spanyol f&aacute;jlokkal akarunk dolgozni, akkor a param&eacute;ter <em>ts-es</em> lesz. Fontos tudni, hogy ez csak a m&aacute;r regisztr&aacute;lt nyelvekre van meg, &uacute;j nyelvn&eacute;l előbb l&eacute;tre kell hozni a megfelelő TS f&aacute;jlokat, lem&aacute;solva egy m&aacute;r l&eacute;tező f&aacute;jlt.</p>

<p>Ezut&aacute;n neki lehet esni a friss&iacute;tett f&aacute;jloknak a <em>Linguist</em> nevű programmal, mely a bin/ k&ouml;nyvt&aacute;rban tal&aacute;lhat&oacute;.</p>

<p>Tipp: ha csak 1-1 projekthez tartoz&oacute; f&aacute;jlt akarunk friss&iacute;teni, azt &iacute;gy tehetj&uuml;k meg:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hron@laptop qt (4.7) $ make ts-designer-hu
</span><span class='line'> hron@laptop qt (4.7) $</span></code></pre></td></tr></table></div></figure>


<p>A fenti parancsa&nbsp; translations/designer_hu.ts f&aacute;jlt friss&iacute;ti be.</p>

<p><strong>Nagyon fontos</strong>: Ha beleny&uacute;lunk egy ts f&aacute;jlba, &eacute;s nem vagyunk az adott nyelv ford&iacute;t&oacute;i csapat&aacute;nak tagja, felt&eacute;tlen&uuml;l vegy&uuml;k fel a ford&iacute;t&oacute;(kk)al a kapcsolatot! Ha nem v&aacute;laszolnak, vagy nincs t&aacute;mpontunk hozz&aacute; hogy hol keress&uuml;k őket; Oswald Buddenhagen vezeti a Qt ford&iacute;t&aacute;s&aacute;t, őt mindig meg lehet tal&aacute;lni az irc.freenode.net IRC szerveren, &aacute;ltal&aacute;ban ossi nick alatt.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A legjobb Git workflow - továbbfejlesztve]]></title>
    <link href="http://hron.me/blog/2012/04/a-legjobb-git-workflow-tovabbfejlesztve/"/>
    <updated>2012-04-18T23:06:00+02:00</updated>
    <id>http://hron.me/blog/2012/04/a-legjobb-git-workflow-tovabbfejlesztve</id>
    <content type="html"><![CDATA[<p>K&ouml;z&ouml;ns&eacute;gk&eacute;r&eacute;sre, most bevezetem az olvas&oacute;imat abba a Git repo kezel&eacute;si m&oacute;dszertanba, amit a saj&aacute;t projektjeimn&eacute;l haszn&aacute;lok.</p>

<p>Alapul az egyik tal&aacute;n legn&eacute;pszerűbb Git workflow szolg&aacute;lt, melynek le&iacute;r&aacute;sa <a href="http://nvie.com/posts/a-successful-git-branching-model/" title="A successful git branching model">itt tekinthető meg</a>.</p>

<!-- more -->


<p>L&aacute;ssuk az alapfogalmakat, amiket a le&iacute;r&aacute;sban haszn&aacute;lni fogok, ez az &eacute;n terminol&oacute;gi&aacute;m:</p>

<ul>
<li><strong>Master branch</strong>: A repo alap&eacute;rtelmezett branche. A frissen l&eacute;trehozott git repo-n&aacute;l ez a &#8220;master&#8221; nevű branch, de ak&aacute;rhogy is lehet h&iacute;vni.</li>
<li><strong>Develop branch</strong>: Ezen az &aacute;gon folyik a fejleszt&eacute;s, de k&ouml;zvetlen&uuml;l ide nem commitolunk (lsd. k&eacute;sőbb)</li>
<li><strong>Feature branch</strong>: egy &uacute;j feature fejleszt&eacute;se zajlik  rajta. Ez lehet egy &uacute;j gomb &eacute;s a m&ouml;g&ouml;ttes k&oacute;d, lehet a tesztek &iacute;r&aacute;s&aacute;ra  szolg&aacute;l&oacute; branch, a l&eacute;nyeg, hogy az itt zajl&oacute; v&aacute;ltoz&aacute;sok vagy &uacute;j  funkcionalit&aacute;st adnak a projekthez, vagy annyira jelentősen m&oacute;dos&iacute;tanak  egy meglevő funkcionalit&aacute;st, ami m&aacute;r nem f&eacute;r bele a hotfix branchekbe.</li>
<li><strong>Hotfix branch</strong>: Ide elsősorban hibajav&iacute;t&aacute;sok j&ouml;nnek,  amelyek j&ouml;hetnek valamilyen bugtrackerből, vagy ak&aacute;r bemond&aacute;sra is, ez  m&aacute;r egy&eacute;ni metodika k&eacute;rd&eacute;se. A l&eacute;nyeg: ide olyan v&aacute;ltoztat&aacute;s nem  k&uuml;ldhető be, mely nagy m&eacute;rt&eacute;kben v&aacute;ltoztat a funkcionalit&aacute;son.</li>
</ul>


<p>Sz&oacute;val. amikor indul a repo &eacute;letciklusa, akkor l&eacute;trej&ouml;n a master  branch. A kezdő commit &aacute;ltal&aacute;ban vagy egy .gitignore f&aacute;jl bek&uuml;ld&eacute;s&eacute;ből  &aacute;ll (ez a legt&ouml;bb esetben hasznos, ha megvan), vagy valami hasonl&oacute;,  jelent&eacute;ktelen v&aacute;ltoztat&aacute;sb&oacute;l. Rails projekt eset&eacute;ben &eacute;n azt szoktam  csin&aacute;lni, hogy a legener&aacute;lt &eacute;s kitiszt&iacute;tott projektf&aacute;t k&uuml;ld&ouml;m be, amiben  m&eacute;g semmi nincsen, csak a mapp&aacute;k vannak l&eacute;trehozva, illetve p&aacute;r dolog  felkonfigur&aacute;lva (pl. rspec, cucumber, meg hasonl&oacute;k). Mindenesetre az  alkalmaz&aacute;s itt kezdi meg &eacute;letciklus&aacute;t.</p>

<p>Ez ut&aacute;n r&ouml;gt&ouml;n le is &aacute;gaztatom a develop branchet, majd a develop  branchből az első feature branchet. Fontos, hogy minden feature &eacute;s  hotfix branch a develop &aacute;gb&oacute;l sz&aacute;rmazik.</p>

<p>A feature branchen elkezdem az első dolgokat implement&aacute;lni, majd  amikor az első feature k&eacute;sz (pl. van egy bel&eacute;pő fel&uuml;let), akkor azt  r&aacute;mergelem a develop branchre. A mergel&eacute;sek mindig szigor&uacute;an &#8211;no-ff  kapcsol&oacute;val t&ouml;rt&eacute;nnek, mert ez biztos&iacute;tja sz&aacute;munkra azt, hogy a k&eacute;sőbbi  grafikus megjelen&iacute;t&eacute;sekn&eacute;l j&oacute;l elk&uuml;l&ouml;n&iacute;thetően l&aacute;tsz&oacute;djon, hogy honn&eacute;t  sz&aacute;rmazik a v&aacute;ltoztat&aacute;s.</p>

<p>P&eacute;lda:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>myproject (feature-add-loginform) $ git checkout develop
</span><span class='line'>myproject (develop) $ git merge --no-ff feature-add-loginform</span></code></pre></td></tr></table></div></figure>


<p>A hotfix branchekkel ugyan&iacute;gy j&aacute;rok el.</p>

<p>Hogy ne legyen  konfliktus merge-l&eacute;skor, a feature/hotfix brancheket időnk&eacute;nt rebase-lem  a develop-hoz (csak ahhoz), hogy meglegyenek azok a v&aacute;ltoz&aacute;sok is,  amelyeket m&aacute;s branchen k&ouml;vettem el. Ez ugye pl. webalkalmaz&aacute;sn&aacute;l fontos,  hogy ha a diz&aacute;jnon v&aacute;ltoz&aacute;s van, vagy a js-hez &uacute;j funkcionalit&aacute;s  ker&uuml;lt, akkor azt egy, ettől f&uuml;ggelten feature fejleszt&eacute;se sor&aacute;n is  tudjam haszn&aacute;lni (tipikus p&eacute;lda erre az a pont, amikor az &aacute;tmeneti  combobox-okat lev&aacute;ltja egy automatikus kieg&eacute;sz&iacute;t&eacute;s alap&uacute; megold&aacute;s). Ez  egyr&eacute;szt k&eacute;nyelmi okokb&oacute;l fontos, m&aacute;sr&eacute;szt pedig az&eacute;rt, mert ilyenkor  m&aacute;r zajlik a <em>dogfooding</em>, vagyis a saj&aacute;t k&oacute;d felhaszn&aacute;l&oacute;i  szempontb&oacute;l t&ouml;rt&eacute;nő tesztel&eacute;se. Volt m&aacute;r, hogy itt j&ouml;ttek elő olyan  hib&aacute;k, melyeket sem a tesztek, sem az első kattintgat&aacute;sok nem hoztak ki.</p>

<p>Van n&eacute;h&aacute;ny olyan eset, amikor k&ouml;zvetlen&uuml;l a develop &aacute;gra commitolok. A legfőbb szempont ilyenkor, hogy ez csak olyan v&aacute;ltoz&aacute;s lehet, ami nagyon kev&eacute;s f&aacute;jlt &eacute;rint, illetőleg a branchek nagy r&eacute;sz&eacute;nek fontos v&aacute;ltoztat&aacute;s. Ilyen lehet p&eacute;ld&aacute;ul a .gitignore f&aacute;jl felbőv&iacute;t&eacute;se, ha valaki hirtelen boldog Mac tulajdonos lesz, &eacute;s a Mac f&aacute;jlrendszer csod&aacute;it (.DS_Store) ki szeretn&eacute;nk z&aacute;rni a projektből. De ilyen lehet az is, amikor egy &aacute;ltalunk el&uuml;t&eacute;st jav&iacute;tunk ki egy nyelvi f&aacute;jlban, mert erre pl. felesleges lehet egy &uacute;j branchet sz&uuml;lni. Persze ez a fejlesztő/fejlesztők &aacute;ltal k&ouml;vetett m&oacute;dszertant&oacute;l is erősen f&uuml;gghet.
Ilyenkor viszont fontos, hogy minden branch &eacute;rtes&uuml;lj&ouml;n a v&aacute;ltoz&aacute;sokr&oacute;l, &eacute;s rebase-zel maga al&aacute; tegye azokat.</p>

<p>Amikor a projekt el&eacute;rkezett egy <em>milestone</em>-hoz,  akkor t&ouml;rt&eacute;nik a master branchre mergel&eacute;s, k&ouml;zvetlen&uuml;l a develop  branch-ről. Ha a projekt olyan, hogy ez sz&uuml;ks&eacute;ges, ilyenkor a master  branchen tagelek is (ez főleg az&eacute;rt &eacute;rdekes, mert pl. a GitHub minden  tagelt branch-ből l&eacute;trehoz egy let&ouml;lthető forr&aacute;s csomagot, &iacute;gy ezzel  nekem nem kell t&ouml;rődn&ouml;m).</p>

<p>A fő szempont a master-n&eacute;l, hogy itt  mindig stabil, minden v&aacute;ltoztat&aacute;st&oacute;l mentes k&oacute;d legyen, amely b&aacute;rmikor  b&aacute;rhova deployolhat&oacute;, &eacute;s azonnal műk&ouml;dők&eacute;pes.</p>

<p>&Eacute;rdekes k&eacute;rd&eacute;s,  hogy mi legyen azokkal a hotfix t&iacute;pus&uacute; v&aacute;ltoztat&aacute;sokkal, amelyek a  master branchez kellene hogy menjenek, hiszen az &eacute;les alkalmaz&aacute;sban van a  hiba, ugynakkor a develop &aacute;gon m&aacute;r mergelve van egy feature, amit nem  sz&iacute;vesen mergeln&eacute;nk r&aacute; a master &aacute;gra. Nos, &eacute;n &aacute;ltal&aacute;ban megpr&oacute;b&aacute;lok a  helyzethez igazodni. Elősz&ouml;r is, meg kell n&eacute;zni, hogy az adott hiba  előj&ouml;tt-e m&aacute;r a develop &aacute;gon, &eacute;s fix&aacute;lva lett-e. Ha nem, akkor ez az  első l&eacute;p&eacute;s, plusz a megfelelő tesztesetek legy&aacute;rt&aacute;sa, hogy a  tov&aacute;bbiakban ilyen probl&eacute;ma elő ne fordulhasson.
Ha a hiba nem kritikus, a legegyszerűbb megold&aacute;s a hiba jav&iacute;t&aacute;s&aacute;t a k&ouml;vetkező <em>milestone</em>-ig eltolni. De nyilv&aacute;n vannak kritkus hib&aacute;k is, l&aacute;ssuk mi a teendő ezekkel.</p>

<p>A  legegyszerűbb eset, amikor m&eacute;g nem t&ouml;rt&eacute;nt mergel&eacute;s a develop-ra a  master &aacute;gra t&ouml;rt&eacute;nt mergel&eacute;s &oacute;ta, ilyenkor sim&aacute;n &aacute;t lehet venni a hotfix  branch jav&iacute;t&aacute;s&aacute;t.</p>

<p>M&aacute;s esetekben meg kell n&eacute;zni, hogy a  hotfix &aacute;ltal &eacute;rintett f&aacute;jlok milyen m&eacute;rt&eacute;kben v&aacute;ltoztak a master-hez  k&eacute;pest. Erre a git diff parancs ad lehetős&eacute;get. Ha a f&aacute;jl ettől a  v&aacute;ltoztat&aacute;st&oacute;l eltekintve nem v&aacute;ltozott, akkor a bek&uuml;ld&ouml;tt commit-nak  veszem a diff-j&eacute;t (git diff HEAD<sup>..HEAD),</sup> majd alkalmazom csak ezt a  jav&iacute;t&aacute;st a master branchre. Ilyenkor a k&ouml;vetkező mergel&eacute;sn&eacute;l figyelni  kell, mert konfliktus l&eacute;phet fel, ezt sajnos egyedileg le kell kezelni.</p>

<p>Egy m&aacute;sik megold&aacute;sa a probl&eacute;m&aacute;nak, hogy mivel a master &aacute;g az gyakorlatilag a develop &aacute;g egy <em>snapshot</em>-ja,  &iacute;gy abb&oacute;l ind&iacute;tom a hotfix branchet, &eacute;s mind a k&eacute;t &aacute;gra visszamergelem.  Ez tal&aacute;n a legegyszerűbb megold&aacute;sa a probl&eacute;m&aacute;nak - csakhogy  tapasztalatom szerint ez az, ami a legritk&aacute;bban is műk&ouml;dik. Ugyanis  nincs &eacute;rtelme &aacute;lmodozni, a master-ről ind&iacute;tott hotfix branchek az esetek  nagy r&eacute;sz&eacute;ben nem illeszkednek a develop &aacute;gra, conflict alakul ki, &eacute;s  el&eacute;g sok nyűg van, mire oda beilleszkedik, plusz ut&aacute;na a master-ra  t&ouml;rt&eacute;nő mergel&eacute;skor megint kialakulhat conflict. Mindenesetre van, ahol  ez a megold&aacute;s is műk&ouml;dik.</p>

<p>Alternat&iacute;v megold&aacute;s lehet m&eacute;g a  cherry-pick haszn&aacute;lata, mellyel egy darab commit-ot tudunk a develop  branchből &aacute;tvenni a masterre, a mergel&eacute;s kock&aacute;zata n&eacute;lk&uuml;l. Erről m&eacute;g  csak hallottam, nincs gyakorlatom vele, hogy milyen sz&aacute;zal&eacute;kban okozhat  conflict-ot, illetve hogy a &#8211;no-ff merge k&eacute;pes-e elkezelni az &aacute;tvett  commit-ot. Illetve ez is csak akkor műk&ouml;dik, ha nincsenek gy&ouml;keres  v&aacute;ltoz&aacute;sok a develop &aacute;gban erre a f&aacute;jlra n&eacute;zve.</p>

<p>Amit a  commit-okr&oacute;l m&eacute;g &eacute;rdemes elmondani: &eacute;n mindig &uacute;n. topic commit-okat  haszn&aacute;lok. Ez azt jelenti, hogy mindig igyekszem olyan commit-okat  gy&aacute;rtani, amelyek &ouml;n&aacute;ll&oacute;ak, &eacute;s pontosan egy dolgot csin&aacute;ljanak. Teh&aacute;t ha  pl. teszteket &iacute;rok, &eacute;s k&ouml;zben sz&uuml;letnek jav&iacute;t&aacute;sok is, amelyek a tesztek  lefut&aacute;s&aacute;hoz kellenek, nem nyitok mindig &uacute;j hotfix branchet (mert egy  lusta diszn&oacute; vagyok), hanem a tesztek &aacute;g&aacute;ba belerakom a v&aacute;ltoz&aacute;st is.  Mivel a tesztek az appra n&eacute;zve nem jelentenek funkcion&aacute;lis v&aacute;ltoz&aacute;st, a  jav&iacute;t&aacute;s viszont igen, &iacute;gy &eacute;n nem &eacute;rzem azt, hogy ennek kock&aacute;zata lenne.  Ellenben nagyon fontos &uuml;gyelni arra, hogy ilyenkor mindig pontosan  azokat a v&aacute;ltoztat&aacute;sokat k&uuml;ldj&uuml;k be, amelyeket azzal a committ-tal  jav&iacute;tunk. Ha kell, <em>hunk</em> (ez a v&aacute;ltoztat&aacute;sok egys&eacute;ge, a diff  kimenet&eacute;ben egy, h&aacute;rom kukaccal kezdődő sorral szepar&aacute;lt blokk) szinten  bontom sz&eacute;t a v&aacute;ltoz&aacute;sokat. Erre nagyon j&oacute; lehetős&eacute;get ad a git add  parancs -p kapcsol&oacute;ja.
Ennek a megold&aacute;snak a legfőbb haszna az, hogy  b&aacute;rhol meg lehet bontani a develop branchet, b&aacute;rhol le lehet &aacute;gaztatni r&oacute;la egy &uacute;j branchet, mindig viszonylag konzisztens &aacute;llapotot fogunk kapni.</p>

<p>&Ouml;sszess&eacute;g&eacute;ben teh&aacute;t a legfőbb alapelvek:</p>

<ul>
<li>A master branchre lehetőleg csak mergel&eacute;s t&ouml;rt&eacute;njen, ide k&ouml;zvetlen&uuml;l (a kezdő commit-t&oacute;l eltekintve) ne k&uuml;ldj&uuml;nk semmit.</li>
<li>A develop branch-en lehet j&aacute;tszani, de &eacute;rdemes figyelni a konzisztenci&aacute;j&aacute;ra</li>
<li>Hotfix branchen a műk&ouml;d&eacute;st alapjaiban &eacute;rintő v&aacute;ltoztat&aacute;s nem t&ouml;rt&eacute;nhet</li>
<li>Mind a hotfix mind a feature brancheket &eacute;rdemes frissen tartani a develop-hoz k&eacute;pest, hogy ne &eacute;rjenek minket nagy meglepet&eacute;sek</li>
</ul>


<p>V&eacute;lem&eacute;nyeket itt alul lehet &iacute;rni, ahogy időm engedi reag&aacute;lni fogok r&aacute;juk.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brno - A very different place]]></title>
    <link href="http://hron.me/blog/2012/03/brno-a-very-different-place/"/>
    <updated>2012-03-15T03:10:00+01:00</updated>
    <id>http://hron.me/blog/2012/03/brno-a-very-different-place</id>
    <content type="html"><![CDATA[<p>I am arrived from Brno. This is a very beautiful town and a very good place. If I need to compare with Budapest, the whole Brno looks like the centre of Budapest but not at now but in 30-40 years ago.</p>

<p>The mass transit is a surprise. Before I started I read the main vehicle is a tram but I didn&#8217;t expect how it looks like in the reality. If you take a look for the city you understand: if there is a wider road, they place tramway and expand an existing line to it or start a new line. There are some buses but as I think they goes where the terrain is too step and the tram cannot climb up on it. During the two days while I was in the town, I saw only one bus. Not one bus line but one vehicle (this wear number 84 btw :-) ).</p>

<p>This system is interesting from other aspects too. The town is splitted to zones (z&oacute;ny) and the tickets are contains some time for travel and permission to cross some zone-borders. The most expensive ticket is valid in 5 zone and few hours. But, if you want to buy some tickets, especially if you want to buy them from a small shops (all newspaper-stand sells tickets, and all place where you see &#8220;J&Iacute;ZDENKA&#8221;), you need ask it by it&#8217;s price. I choosen this even if there is a ticket machine in every stop, because as I saw most machines do not know about other languages but Czech. And the buttons are not titled except the ticket selection button. So, there wasn&#8217;t a help to handle them if you do not know the language (I think there are some machines what can say in foreign languages and there are some machines what titled correctly, but I didn&#8217;t meet with them). I used machines to write down the price of the tickets, to ask them correctly from the sellers (ticket is a fixed-price stuff, so do not matter where you buy it).</p>

<p>I choosen the Hotel Brno because it offered a cheapest room in booking.com (where is a correct description about places and the services). The hotel had a very good transport possibilities and placed at a silent, nice place. The room wasn&#8217;t too big but for two people when they woulnd&#8217;t like stay in the room for a whole day is absolute correct. Because I was alone this was more than enough for me.</p>

<p>The terrain under the city is quite hilly. I never saw a too fat people under the two days and I think I understand why :-)</p>

<p>As @kozka told me the office of RedHat is placed near the universities. Currently RedHat occupies a whole building but the next building is under construction so they growing fast. As I saw some levels are equipped recently (I smelled the fresh painting) so they are growing really fast.</p>

<p>The people are very nice and they help you even if you do not understand what they tell you.</p>

<p>The other thing what surprised me is the moral on the roads. If you stop at the pedestrian crossing, the cars are stops even if there is a rush hour. It seems like a reflex. I will need condition me back to the hungarian moral to not start crossing the road because the cars are not stop every time for you.</p>

<p>Btw the interview was good I think I passed on it, but I didn&#8217;t got a reply from RH, but they informed me I will got a result today. And I collected two business card too :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Travelling to Brno]]></title>
    <link href="http://hron.me/blog/2012/03/travelling-to-brno/"/>
    <updated>2012-03-11T14:30:00+01:00</updated>
    <id>http://hron.me/blog/2012/03/travelling-to-brno</id>
    <content type="html"><![CDATA[<p>The next Tuesday (2012.03.13) will be the day when I leave Hungary again. This will be the second travel to abroad in my life. I am very excited because I not just go to abroad but go alone into the country where I do not know the main language too.</p>

<p>This travel will not be just for fun, I will participate in a job interview for RedHat CZ, and if I will be applied, I will be a part of the QA team behind RedHat Linux (if I know correclty). I would like say many-many thanks to @kozka who help me in a lot of thing before and he promised he will help me to reach the head office to not late from the interview.</p>

<p>But, because I never been in Bohemia before, after testing my knowledge against RedHat requirements, I will become a simple tourist and enjoy beautifulness of Brno (RedHat CZ is located at this town). I heard and read a lot of good things about this city, so I am very curious about them.</p>

<p>When I come back at Wednesday, I will post here about my experiences and - of course - the result of the interview too.</p>

<p>Stay tooned, seriously :-)</p>
]]></content>
  </entry>
  
</feed>
